{
  "contracts": {
    "source code": {
      "Agent": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060008054600160a060020a0319163390811782558152600360205260409020805460ff1916600117905561030b8061004a6000396000f3006080604052600436106100825763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416636e84f870811461008757806379ba5097146100bc5780638da5cb5b146100d35780639e5fd0bb14610104578063d4ee1d9014610119578063f2fde38b1461012e578063faad6eb51461014f575b600080fd5b34801561009357600080fd5b506100a8600160a060020a0360043516610175565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100d161018a565b005b3480156100df57600080fd5b506100e861020c565b60408051600160a060020a039092168252519081900360200190f35b34801561011057600080fd5b506100e861021b565b34801561012557600080fd5b506100e861022a565b34801561013a57600080fd5b506100d1600160a060020a0360043516610239565b34801561015b57600080fd5b506100d1600160a060020a0360043516602435151561028e565b60036020526000908152604090205460ff1681565b600154600160a060020a031633141561020a5760015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b565b600054600160a060020a031681565b600254600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a0316331461024d57fe5b600160a060020a038116151561025f57fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031633146102a257fe5b600160a060020a03821615156102b457fe5b600160a060020a03919091166000908152600360205260409020805460ff19169115159190911790555600a165627a7a72305820a97e4489c2998323a084b84bfc3d714a19ac60f03fad37df6167c2c683e0cb720029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x30B DUP1 PUSH2 0x4A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x82 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6E84F870 DUP2 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9E5FD0BB EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xFAAD6EB5 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x18A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x21B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x239 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0x28E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ ISZERO PUSH2 0x20A JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x24D JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x25F JUMPI INVALID JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2A2 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x2B4 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xa9 PUSH31 0x4489C2998323A084B84BFC3D714A19AC60F03FAD37DF6167C2C683E0CB7200 0x29 ",
            "sourceMap": "27747:402:0:-;;;27857:63;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5338:5:0;:18;;-1:-1:-1;;;;;;5338:18:0;5346:10;5338:18;;;;;27889;;:6;:18;;;;;:25;;-1:-1:-1;;27889:25:0;5338:18;27889:25;;;27747:402;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Agents\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"updateAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept transferOwnership.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Agent contract - base contract with an agent\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source code\":\"Agent\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      },
      "CommonI": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": ""
      },
      "DAO": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052600060035562278d00600455620186a060125564e8d4a51000601355600a8054600160a060020a03191633179055613426806100416000396000f3006080604052600436106102615763ffffffff60e060020a600035041662040e108114610299578062fdd58e14610392578063025e7c27146103b6578063086146d2146103ea578063095ea7b3146103ff57806314fa197c1461043757806318160ddd1461045b5780631b3ed722146104705780631d3df0d314610485578063237e94921461049a57806323b872dd146104fa57806330a89710146105245780633181b9431461054857806340490a901461056f57806341fb1977146105845780634f64b2be146105a857806351710e45146105c05780635277b4ae146105e1578063586c21f8146106055780636371847514610626578063641579a61461063b57806369328dec146106535780636a76b2391461067e5780636d435421146106af5780636e676b69146106d657806370a08231146106f457806373ff81cc1461071557806377be8f431461072a5780637930953b1461075457806379ba50971461076c5780637b92ac661461078157806380935aa9146107a25780638160f0b5146107b7578063842a8bf6146107cc57806388aeeadc146107ed5780638da5cb5b1461080e57806390c5219f14610823578063923c14ba146108445780639a3caa051461085f578063a9059cbb1461087a578063bd77c0be1461089e578063be9a6555146108c5578063c91d956c146108da578063ce4c69bd146108f2578063d1dbe7d81461091e578063d3c0715b14610a75578063d4ee1d9014610ad7578063dd62ed3e14610aec578063e473c74f14610b13578063eceb294514610b34578063ef78d4fd14610ba3578063f2fde38b14610bb8578063f3fef3a314610bd9575b60408051348152905133917fd4f43975feb89f48dd30cabbb32011045be187d1e11c8ea9faa43efc35282519919081900360200190a2005b3480156102a557600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610380948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505093359450610bfd9350505050565b60408051918252519081900360200190f35b34801561039e57600080fd5b50610380600160a060020a0360043516602435610fed565b3480156103c257600080fd5b506103ce6004356110ba565b60408051600160a060020a039092168252519081900360200190f35b3480156103f657600080fd5b506103806110e2565b34801561040b57600080fd5b50610423600160a060020a036004351660243561110e565b604080519115158252519081900360200190f35b34801561044357600080fd5b50610380600435600160a060020a03602435166111b0565b34801561046757600080fd5b506103806111cd565b34801561047c57600080fd5b506103806111d3565b34801561049157600080fd5b506103806111d9565b3480156104a657600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526104f89583359536956044949193909101919081908401838280828437509497506111df9650505050505050565b005b34801561050657600080fd5b50610423600160a060020a0360043581169060243516604435611488565b34801561053057600080fd5b50610380600435600160a060020a03602435166117f3565b34801561055457600080fd5b506104f8600160a060020a036004351660243560443561181b565b34801561057b57600080fd5b50610380611aba565b34801561059057600080fd5b50610380600160a060020a0360043516602435611ac0565b3480156105b457600080fd5b506103ce600435611add565b3480156105cc57600080fd5b506104f8600160a060020a0360043516611aeb565b3480156105ed57600080fd5b50610380600435600160a060020a0360243516611b58565b34801561061157600080fd5b50610423600160a060020a0360043516611b75565b34801561063257600080fd5b50610380611b8a565b34801561064757600080fd5b506104f8600435611b90565b34801561065f57600080fd5b506104f8600160a060020a036004358116906024359060443516611bb6565b34801561068a57600080fd5b50610696600435611d10565b6040805192835260208301919091528051918290030190f35b3480156106bb57600080fd5b506104f8600160a060020a0360043581169060243516611d3c565b3480156106e257600080fd5b506104f8600435602435604435611dc7565b34801561070057600080fd5b50610380600160a060020a0360043516611e2f565b34801561072157600080fd5b50610380611e4a565b34801561073657600080fd5b50610423600435600160a060020a0360243581169060443516611e50565b34801561076057600080fd5b506104f8600435611e76565b34801561077857600080fd5b506104f8611e96565b34801561078d57600080fd5b50610380600160a060020a0360043516611f0d565b3480156107ae57600080fd5b506103ce611f1f565b3480156107c357600080fd5b50610380611f2e565b3480156107d857600080fd5b506104f8600160a060020a0360043516611f34565b3480156107f957600080fd5b506104f8600160a060020a036004351661201d565b34801561081a57600080fd5b506103ce6121a4565b34801561082f57600080fd5b506104f8600160a060020a03600435166121b3565b34801561085057600080fd5b506104f860043560243561221b565b34801561086b57600080fd5b5061042360043560243561250c565b34801561088657600080fd5b50610423600160a060020a0360043516602435612635565b3480156108aa57600080fd5b50610380600160a060020a03600435811690602435166128e6565b3480156108d157600080fd5b50610380612903565b3480156108e657600080fd5b506104f8600435612909565b3480156108fe57600080fd5b506104f8600160a060020a0360043581169060243516604435151561292c565b34801561092a57600080fd5b506109366004356129c0565b604051808c81526020018b1515151581526020018a15151515815260200189815260200188815260200187815260200186600160a060020a0316600160a060020a0316815260200185815260200184600019166000191681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156109cf5781810151838201526020016109b7565b50505050905090810190601f1680156109fc5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610a2f578181015183820152602001610a17565b50505050905090810190601f168015610a5c5780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b348015610a8157600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526103809482359460248035151595369594606494920191908190840183828082843750949750612b509650505050505050565b348015610ae357600080fd5b506103ce612d1c565b348015610af857600080fd5b50610380600160a060020a0360043581169060243516612d2b565b348015610b1f57600080fd5b506104f8600160a060020a0360043516612d56565b348015610b4057600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261042394803594600160a060020a036024803591909116956044359536956084949301918190840183828082843750949750612dd09650505050505050565b348015610baf57600080fd5b50610380612f62565b348015610bc457600080fd5b506104f8600160a060020a0360043516612f68565b348015610be557600080fd5b506104f8600160a060020a0360043516602435612fb0565b336000908152600160205260408120548110610c1857600080fd5b6013543360009081526001602052604090205411610c3557600080fd5b811515610c425760155491505b60176101606040519081016040528084603c024201815260200160001515815260200160001515815260200160008152602001600081526020016000815260200189600160a060020a031681526020018881526020018989876040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b60208310610cfa5780518252601f199092019160209182019101610cdb565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610d5f5780518252601f199092019160209182019101610d40565b518151602093840361010090810a6000190180199093169290911691909117909152604080519390950183900390922087528681018e90529583018c905287546001808201808b5560009a8b52998890208951600a90930201918255888801519082018054958a015160ff199096169115159190911761ff001916941515830294909417909355606087015160028401556080870151600384015560a0870151600484015560c0870151600584018054600160a060020a031916600160a060020a0390921691909117905560e0870151600684015586015160078301555061012085015180519194610e59945060088601935001906132f2565b506101408201518051610e769160098401916020909101906132f2565b505060178054610ea993506000198101925082908110610e9257fe5b90600052602060002090600a020160000154613101565b7f4c6647c4a4058c1a0bcd513fe2522706466700a104b82d4487d888f17ce5be13600160178054905003888888886040518086815260200185600160a060020a0316600160a060020a031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f3c578181015183820152602001610f24565b50505050905090810190601f168015610f695780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610f9c578181015183820152602001610f84565b50505050905090810190601f168015610fc95780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a150601754600019019695505050505050565b600080600080600354851015151561100457600080fd5b600454600354860381151561101557fe5b0460010192506001915060035442111561104157600454600354420381151561103a57fe5b0460010191505b8282101561104e57600080fd5b50600160a060020a0385166000908152600160205260409020545b828211156110a357600160a060020a0386166000908152600560209081526040808320858452909152902054600019909201919003611069565b60008112156110b157600080fd5b95945050505050565b60068054829081106110c857fe5b600091825260209091200154600160a060020a0316905081565b60006003544211156111075760045460035442038115156110ff57fe5b04905061110b565b5060005b90565b600081158061113e5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b151561114957600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600f60209081526000928352604080842090915290825290205481565b60005490565b60125481565b60155481565b60006017838154811015156111f057fe5b90600052602060002090600a020190508060000154421180156112185750600181015460ff16155b801561131e5750600581015460068201546040516c01000000000000000000000000600160a060020a0390931692830260208083019182526034830184905286518793605401918401908083835b602083106112855780518252601f199092019160209182019101611266565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b602083106112ea5780518252601f1990920191602091820191016112cb565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120600785015414925050505b80156113305750601454816002015410155b151561133b57600080fd5b601654816003015411156113ef57600581015460068201546040518451600160a060020a03909316928591908190602084019080838360005b8381101561138c578181015183820152602001611374565b50505050905090810190601f1680156113b95780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af19250505015156113d957600080fd5b60018101805461ff0019166101001790556113fd565b60018101805461ff00191690555b6001818101805460ff1916909117905561141683613179565b600381015460048201546002830154600184015460408051888152602081019590955284810193909352606084019190915260ff6101009091041615156080830152517f748f0810c68633063bb13f3c71e10cd1889925b3721d6e567114d0632574a3969181900360a00190a1505050565b6000808080600160a060020a03861615156114a257600080fd5b60009250600091505b6008548210156115a057426008838154811015156114c557fe5b906000526020600020906002020160010154111561159557600960006008848154811015156114f057fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a0316815260200190815260200160002054831015611595576009600060088481548110151561154e57fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a031681526020019081526020016000205492505b6001909101906114ab565b600160a060020a03871660009081526001602052604090205485906115c5908561324b565b10156115d057600080fd5b600160a060020a038716600090815260026020908152604080832033845290915290205485111561160057600080fd5b600160a060020a03861660009081526007602052604090205460ff161580156116295750600085115b1561169457600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a03191690911790555b600160a060020a0387166000908152600160205260409020546116b7908661324b565b600160a060020a0380891660009081526001602052604080822093909355908816815220546116e69086613266565b600160a060020a03808816600090815260016020908152604080832094909455918a168152600282528281203382529091522054611724908661324b565b600160a060020a03881660009081526002602090815260408083203384529091529020555060035460019042111561176e57600454600354420381151561176757fe5b0460010190505b600160a060020a038781166000818152600560208181526040808420878552825280842080548c90039055948b1680845291815284832086845281529184902080548a0190558351898152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060019695505050505050565b6000918252600960209081526040808420600160a060020a0393909316845291905290205490565b60065460009081908190819085111561183357600080fd5b84861061183f57600080fd5b600454600354420381151561185057fe5b04935060016004548502600354010392506000600f6000868152602001908152602001600020600089600160a060020a0316600160a060020a03168152602001908152602001600020541115156118a657600080fd5b5060009050845b84811015611ab1576000848152601160209081526040808320600160a060020a038b168452909152812060068054919291849081106118e857fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205460ff161515611aa95761194e61194660068381548110151561192b57fe5b600091825260209091200154600160a060020a031685610fed565b60125461327c565b915061196661195e83606461327c565b6000546132a7565b6000858152600f60209081526040808320600160a060020a038c16845290915290205490925061199690836132be565b91506119ae826119a960125460646132a7565b6132a7565b9150611a01601060006006848154811015156119c657fe5b6000918252602080832090910154600160a060020a0390811684528382019490945260409283018220938c1682529290925290205483613266565b60106000600684815481101515611a1457fe5b6000918252602080832090910154600160a060020a0390811684528382019490945260409283018220938c1680835293815282822094909455878152601184528181209281529190925290812060068054600193919085908110611a7457fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff19169115159190911790555b6001016118ad565b50505050505050565b60125490565b600560209081526000928352604080842090915290825290205481565b600d8054829081106110c857fe5b600a54600160a060020a03163314611aff57fe5b80600160a060020a03166379ba50976040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015611b3d57600080fd5b505af1158015611b51573d6000803e3d6000fd5b5050505050565b600960209081526000928352604080842090915290825290205481565b60076020526000908152604090205460ff1681565b60165481565b600a54600160a060020a03163314611ba457fe5b60008111611bb157600080fd5b601255565b336000908152601060209081526040808320600160a060020a0387168452909152902054821115611be657600080fd5b336000908152601060209081526040808320600160a060020a0387168452909152902054611c14908361324b565b336000908152601060209081526040808320600160a060020a0388168085529252909120919091551515611c7e57604051600160a060020a0382169083156108fc029084906000818181858888f19350505050158015611c78573d6000803e3d6000fd5b50611d0b565b82600160a060020a031663a9059cbb82846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611ce157600080fd5b505af1158015611cf5573d6000803e3d6000fd5b505050506040513d6020811015611b5157600080fd5b505050565b6008805482908110611d1e57fe5b60009182526020909120600290910201805460019091015490915082565b600a54600160a060020a03163314611d5057fe5b81600160a060020a031663f2fde38b826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b158015611dab57600080fd5b505af1158015611dbf573d6000803e3d6000fd5b505050505050565b600a54600160a060020a03163314611ddb57fe5b601483905560158290556016819055604080518481526020810184905280820183905290517fe7a31acb9efc5512cc1896266cbc06335ca5e661547b177002b7bb5d8535871e9181900360600190a1505050565b600160a060020a031660009081526001602052604090205490565b60065490565b601160209081526000938452604080852082529284528284209052825290205460ff1681565b600a54600160a060020a03163314611e8a57fe5b611e9381613179565b50565b600b54600160a060020a0316331415611f0b57600b54600a54604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b54600a8054600160a060020a031916600160a060020a039092169190911790555b565b600e6020526000908152604090205481565b600c54600160a060020a031681565b60145481565b600c54600160a060020a03163314611f4b57600080fd5b600160a060020a0381166000908152600e6020526040902054600d80549091908110611f7357fe5b600091825260209091200154600160a060020a03161515611f9357600080fd5b600d80546000198101908110611fa557fe5b6000918252602080832090910154600160a060020a038481168452600e909252604090922054600d80549290931692918110611fdd57fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600d805460001901906120199082613370565b5050565b6000806000600454600354420381151561203357fe5b04925060016004548402600354010391506000600f6000858152602001908152602001600020600086600160a060020a0316600160a060020a031681526020019081526020016000205411151561208957600080fd5b6000838152601160209081526040808320600160a060020a0388168452825280832033845290915290205460ff16151561219e576120ca6119463384610fed565b90506120da61195e82606461327c565b6000848152600f60209081526040808320600160a060020a038916845290915290205490915061210a90826132be565b905061211d816119a960125460646132a7565b336000908152601060209081526040808320600160a060020a038916845290915290205490915061214e9082613266565b336000818152601060209081526040808320600160a060020a038a1680855290835281842095909555878352601182528083209483529381528382209282529190915220805460ff191660011790555b50505050565b600a54600160a060020a031681565b600a54600160a060020a031633146121c757fe5b600c8054600160a060020a038316600160a060020a0319909116811790915560408051918252517ffabd8204d72dd7f991ea45882ec0e28a9f5711a6e8333dd6cfe69d9dbc08d1849181900360200190a150565b600d546000908190819084111561223157600080fd5b83851061223d57600080fd5b600454600354420381151561224e57fe5b0492506000831161225e57600080fd5b8491505b83821015611b51576000838152600f60205260408120600d80549192918590811061228957fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902054151561250157600c54600d8054600160a060020a039092169163f7888aec9190859081106122d857fe5b60009182526020808320909101546040805160e060020a63ffffffff8716028152600160a060020a0390921660048301523060248301525160448083019491928390030190829087803b15801561232e57600080fd5b505af1158015612342573d6000803e3d6000fd5b505050506040513d602081101561235857600080fd5b5051905081151561242c57600c54604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a0390921691632e1a7d4d9160248082019260009290919082900301818387803b1580156123c957600080fd5b505af11580156123dd573d6000803e3d6000fd5b5050506000848152600f60205260408120600d80548594509192918690811061240257fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902055612501565b600c54600d8054600160a060020a0390921691639e281a9891908590811061245057fe5b60009182526020822001546040805160e060020a63ffffffff8616028152600160a060020a03909216600483015260248201869052516044808301939282900301818387803b1580156124a257600080fd5b505af11580156124b6573d6000803e3d6000fd5b5050506000848152600f60205260408120600d8054859450919291869081106124db57fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020555b600190910190612262565b600082825b8082101561262a576001600060068481548110151561252c57fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902054151561261e5760006007600060068581548110151561256c57fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff19169115159190911790556006805460001981019081106125b257fe5b60009182526020909120015460068054600160a060020a0390921691849081106125d857fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556006805460001901906126149082613370565b5060001901612625565b6001909101905b612511565b506001949350505050565b6000808080600160a060020a038616151561264f57600080fd5b60009250600091505b60085482101561271d574260088381548110151561267257fe5b9060005260206000209060020201600101541115612712576009600060088481548110151561269d57fe5b600091825260208083206002909202909101548352828101939093526040918201812033825290925290205483101561271257600960006008848154811015156126e357fe5b600091825260208083206002909202909101548352828101939093526040918201812033825290925290205492505b600190910190612658565b336000908152600160205260409020548590612739908561324b565b101561274457600080fd5b600160a060020a03861660009081526007602052604090205460ff1615801561276d5750600085115b156127d857600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a03191690911790555b336000908152600160205260409020546127f2908661324b565b3360009081526001602052604080822092909255600160a060020a0388168152205461281e9086613266565b600160a060020a03871660009081526001602081905260409091209190915560035490915042111561286257600454600354420381151561285b57fe5b0460010190505b336000818152600560208181526040808420868552825280842080548b90039055600160a060020a038b1680855292825280842086855282529283902080548a019055825189815292519193927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a350600195945050505050565b601060209081526000928352604080842090915290825290205481565b60035481565b600a54600160a060020a0316331461291d57fe5b6000811161292757fe5b601355565b600a54600160a060020a0316331461294057fe5b604080517ffaad6eb5000000000000000000000000000000000000000000000000000000008152600160a060020a038481166004830152831515602483015291519185169163faad6eb59160448082019260009290919082900301818387803b1580156129ac57600080fd5b505af1158015611ab1573d6000803e3d6000fd5b60178054829081106129ce57fe5b6000918252602091829020600a91909102018054600180830154600280850154600386015460048701546005880154600689015460078a015460088b018054604080516101009c8316158d026000190190921699909904601f81018f90048f0282018f019099528881529a9d5060ff808a169d9a9099049098169a959994989397600160a060020a039093169691959094909390929190830182828015612ab65780601f10612a8b57610100808354040283529160200191612ab6565b820191906000526020600020905b815481529060010190602001808311612a9957829003601f168201915b5050505060098301805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152949594935090830182828015612b465780601f10612b1b57610100808354040283529160200191612b46565b820191906000526020600020905b815481529060010190602001808311612b2957829003601f168201915b505050505090508b565b33600090815260016020526040812054819081908110612b6f57600080fd5b6017805487908110612b7d57fe5b90600052602060002090600a0201915081600001544211151515612ba057600080fd5b336000818152600160209081526040808320548a84526009835281842094845293909152902054612bd1919061324b565b905060008111612be057600080fd5b6000868152600960209081526040808320338452909152902054612c049082613266565b6000878152600960209081526040808320338452909152902055600282018054820190558415612c3d5760038201805482019055612c48565b600482018054820190555b7fc34f869b7ff431b034b7b9aea9822dac189a685e0b015c7d1be3add3f89128e886863387604051808581526020018415151515815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612cd2578181015183820152602001612cba565b50505050905090810190601f168015612cff5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15060020154949350505050565b600b54600160a060020a031681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600c54600160a060020a03163314612d6d57600080fd5b600d80546001810182557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018054600160a060020a031916600160a060020a03939093169283179055546000918252600e60205260409091206000199091019055565b600083600160a060020a0316601786815481101515612deb57fe5b600091825260209091206005600a909202010154600160a060020a031614612e1257600080fd5b82601786815481101515612e2257fe5b90600052602060002090600a020160060154141515612e4057600080fd5b8383836040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b60208310612ea25780518252601f199092019160209182019101612e83565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310612f075780518252601f199092019160209182019101612ee8565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091206017805491945092508891508110612f4457fe5b600091825260209091206007600a9092020101541495945050505050565b60045481565b600a54600160a060020a03163314612f7c57fe5b600160a060020a0381161515612f8e57fe5b600b8054600160a060020a031916600160a060020a0392909216919091179055565b336000908152601060209081526040808320600160a060020a0386168452909152902054811115612fe057600080fd5b336000908152601060209081526040808320600160a060020a038616845290915290205461300e908261324b565b336000908152601060209081526040808320600160a060020a038716808552925290912091909155151561306f57604051339082156108fc029083906000818181858888f19350505050158015613069573d6000803e3d6000fd5b50612019565b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390529051600160a060020a0384169163a9059cbb9160448083019260209291908290030181600087803b1580156130d757600080fd5b505af11580156130eb573d6000803e3d6000fd5b505050506040513d602081101561219e57600080fd5b60408051808201909152918252602082019081526008805460018101825560009190915291517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3600290930292830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee490910155565b60005b600854811015612019578160088281548110151561319657fe5b906000526020600020906002020160000154141561324257426008828154811015156131be57fe5b9060005260206000209060020201600101541015156131dc57600080fd5b6008805460001981019081106131ee57fe5b906000526020600020906002020160088281548110151561320b57fe5b60009182526020909120825460029092020190815560019182015491015560088054600019019061323c9082613394565b50613246565b6001015b61317c565b6000808383111561325857fe5b5050808203805b5092915050565b60008282018381101561327557fe5b9392505050565b60008083151561328f576000915061325f565b5082820282848281151561329f57fe5b041461327557fe5b60008082848115156132b557fe5b04949350505050565b6000808315156132d1576000915061325f565b508282028284828115156132e157fe5b04146132e957fe5b612710816132b5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061333357805160ff1916838001178555613360565b82800160010185558215613360579182015b82811115613360578251825591602001919060010190613345565b5061336c9291506133c0565b5090565b815481835581811115611d0b57600083815260209020611d0b9181019083016133c0565b815481835581811115611d0b57600202816002028360005260206000209182019101611d0b91906133da565b61110b91905b8082111561336c57600081556001016133c6565b61110b91905b8082111561336c57600080825560018201556002016133e05600a165627a7a723058205d1cb01b0ab8cc0c2bc28d2a2f0385923a04fb6bdb6620927a025cfe039f395a0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH3 0x278D00 PUSH1 0x4 SSTORE PUSH3 0x186A0 PUSH1 0x12 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x13 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x3426 DUP1 PUSH2 0x41 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x261 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH3 0x40E10 DUP2 EQ PUSH2 0x299 JUMPI DUP1 PUSH3 0xFDD58E EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x86146D2 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x14FA197C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x1D3DF0D3 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x237E9492 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x30A89710 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x3181B943 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0x40490A90 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x41FB1977 EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x51710E45 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x5277B4AE EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x586C21F8 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x63718475 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x641579A6 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x69328DEC EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0x6A76B239 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x6D435421 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x6E676B69 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0x73FF81CC EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0x77BE8F43 EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0x7930953B EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0x7B92AC66 EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0x80935AA9 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x8160F0B5 EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0x842A8BF6 EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0x88AEEADC EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x90C5219F EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0x923C14BA EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0x9A3CAA05 EQ PUSH2 0x85F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x87A JUMPI DUP1 PUSH4 0xBD77C0BE EQ PUSH2 0x89E JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0xC91D956C EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xCE4C69BD EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0xD1DBE7D8 EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0xD3C0715B EQ PUSH2 0xA75 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xAD7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xAEC JUMPI DUP1 PUSH4 0xE473C74F EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0xECEB2945 EQ PUSH2 0xB34 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0xBA3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBB8 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xBD9 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xD4F43975FEB89F48DD30CABBB32011045BE187D1E11C8EA9FAA43EFC35282519 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x380 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP SWAP4 CALLDATALOAD SWAP5 POP PUSH2 0xBFD SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xFED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 CALLDATALOAD PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x10E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x11B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x11CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x11D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x11D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x24 DUP1 CALLDATALOAD DUP3 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV DUP6 MUL DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP6 DUP6 MSTORE PUSH2 0x4F8 SWAP6 DUP4 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x44 SWAP5 SWAP2 SWAP4 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x11DF SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x1488 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x17F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x181B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x1ABA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x1AC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 CALLDATALOAD PUSH2 0x1ADD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1AEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1B58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1B75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x1B8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 CALLDATALOAD PUSH2 0x1B90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD AND PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x696 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1D3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x1DC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x1E4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x44 CALLDATALOAD AND PUSH2 0x1E50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 CALLDATALOAD PUSH2 0x1E76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH2 0x1E96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1F0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0x1F1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x1F2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1F34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x201D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0x21A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x21B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x221B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x250C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2635 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x28E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x2903 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 CALLDATALOAD PUSH2 0x2909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD ISZERO ISZERO PUSH2 0x292C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x936 PUSH1 0x4 CALLDATALOAD PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP11 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9FC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA17 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA5C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x380 SWAP5 DUP3 CALLDATALOAD SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD ISZERO ISZERO SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x2B50 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0x2D1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x2D2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2D56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 0x423 SWAP5 DUP1 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 SWAP1 SWAP2 AND SWAP6 PUSH1 0x44 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x84 SWAP5 SWAP4 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x2DD0 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x2F62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2F68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2FB0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 LT PUSH2 0xC18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xC42 JUMPI PUSH1 0x15 SLOAD SWAP2 POP JUMPDEST PUSH1 0x17 PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x3C MUL TIMESTAMP ADD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP10 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xCFA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xD5F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xD40 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 SWAP1 DUP2 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP6 ADD DUP4 SWAP1 SUB SWAP1 SWAP3 KECCAK256 DUP8 MSTORE DUP7 DUP2 ADD DUP15 SWAP1 MSTORE SWAP6 DUP4 ADD DUP13 SWAP1 MSTORE DUP8 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP1 DUP12 SSTORE PUSH1 0x0 SWAP11 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 DUP10 MLOAD PUSH1 0xA SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP9 DUP9 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD SWAP6 DUP11 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP7 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR PUSH2 0xFF00 NOT AND SWAP5 ISZERO ISZERO DUP4 MUL SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x5 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE DUP7 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE POP PUSH2 0x120 DUP6 ADD MLOAD DUP1 MLOAD SWAP2 SWAP5 PUSH2 0xE59 SWAP5 POP PUSH1 0x8 DUP7 ADD SWAP4 POP ADD SWAP1 PUSH2 0x32F2 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xE76 SWAP2 PUSH1 0x9 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x32F2 JUMP JUMPDEST POP POP PUSH1 0x17 DUP1 SLOAD PUSH2 0xEA9 SWAP4 POP PUSH1 0x0 NOT DUP2 ADD SWAP3 POP DUP3 SWAP1 DUP2 LT PUSH2 0xE92 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x3101 JUMP JUMPDEST PUSH32 0x4C6647C4A4058C1A0BCD513FE2522706466700A104B82D4487D888F17CE5BE13 PUSH1 0x1 PUSH1 0x17 DUP1 SLOAD SWAP1 POP SUB DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF24 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF69 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF84 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xFC9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x17 SLOAD PUSH1 0x0 NOT ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD DUP6 LT ISZERO ISZERO ISZERO PUSH2 0x1004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD DUP7 SUB DUP2 ISZERO ISZERO PUSH2 0x1015 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x103A JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x104E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 SWAP1 SUB PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x10C8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1107 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x10FF JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x110B JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x113E JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x1149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x11F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1218 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x131E JUMPI POP PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH13 0x1000000000000000000000000 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP3 DUP4 MUL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x34 DUP4 ADD DUP5 SWAP1 MSTORE DUP7 MLOAD DUP8 SWAP4 PUSH1 0x54 ADD SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1285 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x12EA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x12CB JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x7 DUP6 ADD SLOAD EQ SWAP3 POP POP POP JUMPDEST DUP1 ISZERO PUSH2 0x1330 JUMPI POP PUSH1 0x14 SLOAD DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x16 SLOAD DUP2 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x13EF JUMPI PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP3 DUP6 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1374 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP ISZERO ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1416 DUP4 PUSH2 0x3179 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH32 0x748F0810C68633063BB13F3C71E10CD1889925B3721D6E567114D0632574A396 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x15A0 JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14C5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x154E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x15C5 SWAP1 DUP6 PUSH2 0x324B JUMP JUMPDEST LT ISZERO PUSH2 0x15D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1629 JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0x1694 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16B7 SWAP1 DUP7 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x16E6 SWAP1 DUP7 PUSH2 0x3266 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP11 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1724 SWAP1 DUP7 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SWAP1 TIMESTAMP GT ISZERO PUSH2 0x176E JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1767 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP13 SWAP1 SUB SWAP1 SSTORE SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP2 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP4 MLOAD DUP10 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP6 GT ISZERO PUSH2 0x1833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP7 LT PUSH2 0x183F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1850 JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x1 PUSH1 0x4 SLOAD DUP6 MUL PUSH1 0x3 SLOAD ADD SUB SWAP3 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 POP DUP5 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x18E8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x194E PUSH2 0x1946 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x192B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x327C JUMP JUMPDEST SWAP2 POP PUSH2 0x1966 PUSH2 0x195E DUP4 PUSH1 0x64 PUSH2 0x327C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x32A7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1996 SWAP1 DUP4 PUSH2 0x32BE JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x19A9 PUSH1 0x12 SLOAD PUSH1 0x64 PUSH2 0x32A7 JUMP JUMPDEST PUSH2 0x32A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A01 PUSH1 0x10 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x19C6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP13 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 PUSH2 0x3266 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1A14 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP13 AND DUP1 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP8 DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1A74 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x18AD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x10C8 JUMPI INVALID JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1AFF JUMPI INVALID JUMPDEST DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x79BA5097 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1BA4 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1C14 SWAP1 DUP4 PUSH2 0x324B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE ISZERO ISZERO PUSH2 0x1C7E JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1D0B JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1D1E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1D50 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xF2FDE38B DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1DDB JUMPI INVALID JUMPDEST PUSH1 0x14 DUP4 SWAP1 SSTORE PUSH1 0x15 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xE7A31ACB9EFC5512CC1896266CBC06335CA5E661547B177002B7BB5D8535871E SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1E8A JUMPI INVALID JUMPDEST PUSH2 0x1E93 DUP2 PUSH2 0x3179 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ ISZERO PUSH2 0x1F0B JUMPI PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xB SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1F73 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x1F93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x1FA5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xD DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP2 LT PUSH2 0x1FDD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2019 SWAP1 DUP3 PUSH2 0x3370 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x2033 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x1 PUSH1 0x4 SLOAD DUP5 MUL PUSH1 0x3 SLOAD ADD SUB SWAP2 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x2089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x219E JUMPI PUSH2 0x20CA PUSH2 0x1946 CALLER DUP5 PUSH2 0xFED JUMP JUMPDEST SWAP1 POP PUSH2 0x20DA PUSH2 0x195E DUP3 PUSH1 0x64 PUSH2 0x327C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x210A SWAP1 DUP3 PUSH2 0x32BE JUMP JUMPDEST SWAP1 POP PUSH2 0x211D DUP2 PUSH2 0x19A9 PUSH1 0x12 SLOAD PUSH1 0x64 PUSH2 0x32A7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x214E SWAP1 DUP3 PUSH2 0x3266 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP8 DUP4 MSTORE PUSH1 0x11 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x21C7 JUMPI INVALID JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xFABD8204D72DD7F991EA45882EC0E28A9F5711A6E8333DD6CFE69D9DBC08D184 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP5 GT ISZERO PUSH2 0x2231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP6 LT PUSH2 0x223D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x224E JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x0 DUP4 GT PUSH2 0x225E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH2 0x1B51 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x2289 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x2501 JUMPI PUSH1 0xC SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF7888AEC SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22D8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP8 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 ISZERO ISZERO PUSH2 0x242C JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x2E1A7D4D SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD DUP6 SWAP5 POP SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x2402 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH2 0x2501 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9E281A98 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2450 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD DUP6 SWAP5 POP SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x24DB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x262A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x252C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x261E JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x256C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x25B2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x25D8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2614 SWAP1 DUP3 PUSH2 0x3370 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH2 0x2511 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x264F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x271D JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2672 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2712 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x269D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x2712 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x26E3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2658 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x2739 SWAP1 DUP6 PUSH2 0x324B JUMP JUMPDEST LT ISZERO PUSH2 0x2744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0x27D8 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x27F2 SWAP1 DUP7 PUSH2 0x324B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x281E SWAP1 DUP7 PUSH2 0x3266 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 POP TIMESTAMP GT ISZERO PUSH2 0x2862 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x285B JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP12 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP1 DUP6 MSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x291D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2927 JUMPI INVALID JUMPDEST PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2940 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFAAD6EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xFAAD6EB5 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x17 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x29CE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x5 DUP9 ADD SLOAD PUSH1 0x6 DUP10 ADD SLOAD PUSH1 0x7 DUP11 ADD SLOAD PUSH1 0x8 DUP12 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 SWAP13 DUP4 AND ISZERO DUP14 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP10 SWAP1 SWAP10 DIV PUSH1 0x1F DUP2 ADD DUP16 SWAP1 DIV DUP16 MUL DUP3 ADD DUP16 ADD SWAP1 SWAP10 MSTORE DUP9 DUP2 MSTORE SWAP11 SWAP14 POP PUSH1 0xFF DUP1 DUP11 AND SWAP14 SWAP11 SWAP1 SWAP10 DIV SWAP1 SWAP9 AND SWAP11 SWAP6 SWAP10 SWAP5 SWAP9 SWAP4 SWAP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP7 SWAP2 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AB6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AB6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A99 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x9 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP5 SWAP6 SWAP5 SWAP4 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2B46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP12 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 LT PUSH2 0x2B6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x17 DUP1 SLOAD DUP8 SWAP1 DUP2 LT PUSH2 0x2B7D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD SWAP2 POP DUP2 PUSH1 0x0 ADD SLOAD TIMESTAMP GT ISZERO ISZERO ISZERO PUSH2 0x2BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP11 DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP5 MSTORE SWAP4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2BD1 SWAP2 SWAP1 PUSH2 0x324B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2C04 SWAP1 DUP3 PUSH2 0x3266 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE DUP5 ISZERO PUSH2 0x2C3D JUMPI PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST PUSH32 0xC34F869B7FF431B034B7B9AEA9822DAC189A685E0B015C7D1BE3ADD3F89128E8 DUP7 DUP7 CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CD2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CBA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2CFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x2 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2D6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x17 DUP7 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2DEB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0xA SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x2E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x17 DUP7 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2E22 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x6 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x2E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2EA2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2F07 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2EE8 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x17 DUP1 SLOAD SWAP2 SWAP5 POP SWAP3 POP DUP9 SWAP2 POP DUP2 LT PUSH2 0x2F44 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0xA SWAP1 SWAP3 MUL ADD ADD SLOAD EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2F7C JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x2F8E JUMPI INVALID JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x300E SWAP1 DUP3 PUSH2 0x324B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE ISZERO ISZERO PUSH2 0x306F JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3069 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x219E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x2 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD SSTORE MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2019 JUMPI DUP2 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3196 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x3242 JUMPI TIMESTAMP PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x31BE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO ISZERO PUSH2 0x31DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x31EE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x320B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x323C SWAP1 DUP3 PUSH2 0x3394 JUMP JUMPDEST POP PUSH2 0x3246 JUMP JUMPDEST PUSH1 0x1 ADD JUMPDEST PUSH2 0x317C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x3258 JUMPI INVALID JUMPDEST POP POP DUP1 DUP3 SUB DUP1 JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x3275 JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x328F JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x325F JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x329F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x3275 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x32B5 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x32D1 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x325F JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x32E1 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x32E9 JUMPI INVALID JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0x32B5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x3333 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3360 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3360 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3360 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3345 JUMP JUMPDEST POP PUSH2 0x336C SWAP3 SWAP2 POP PUSH2 0x33C0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1D0B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x1D0B SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x33C0 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1D0B JUMPI PUSH1 0x2 MUL DUP2 PUSH1 0x2 MUL DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x33DA JUMP JUMPDEST PUSH2 0x110B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x336C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33C6 JUMP JUMPDEST PUSH2 0x110B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x336C JUMPI PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x33E0 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5d SHR 0xb0 SHL EXP 0xb8 0xcc 0xc 0x2b 0xc2 DUP14 0x2a 0x2f SUB DUP6 SWAP3 GASPRICE DIV CREATE2 PUSH12 0xDB6620927A025CFE039F395A STOP 0x29 ",
            "sourceMap": "18163:9512:0:-;;;6583:1;6560:24;;6672:7;6648:31;;13463:6;13438:31;;18282:13;18264:31;;5338:5;:18;;-1:-1:-1;;;;;;5338:18:0;5346:10;5338:18;;;18163:9512;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_desc\",\"type\":\"string\"},{\"name\":\"_fullDescHash\",\"type\":\"string\"},{\"name\":\"_transactionByteCode\",\"type\":\"bytes\"},{\"name\":\"_debatingPeriodDuration\",\"type\":\"uint256\"}],\"name\":\"addProposal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPeriod\",\"outputs\":[{\"name\":\"N\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debatingPeriodDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"},{\"name\":\"_transactionByteCode\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propID\",\"type\":\"uint256\"},{\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"PayDividends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ChangeOverPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requisiteMajority\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMultiplier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ActiveProposals\",\"outputs\":[{\"name\":\"propID\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minimumQuorum\",\"type\":\"uint256\"},{\"name\":\"_debatingPeriodDuration\",\"type\":\"uint256\"},{\"name\":\"_requisiteMajority\",\"type\":\"uint256\"}],\"name\":\"changeVotingRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnersCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AlreadyReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"}],\"name\":\"delActiveProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEX\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DelToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PayDividends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setDEXContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"TakeProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"trim\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersbal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minBalance\",\"type\":\"uint256\"}],\"name\":\"setMinBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_agent\",\"type\":\"address\"},{\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"updateAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Proposals\",\"outputs\":[{\"name\":\"endTimeOfVoting\",\"type\":\"uint256\"},{\"name\":\"executed\",\"type\":\"bool\"},{\"name\":\"proposalPassed\",\"type\":\"bool\"},{\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"name\":\"votesSupport\",\"type\":\"uint256\"},{\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"fullDescHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"},{\"name\":\"_supportsProposal\",\"type\":\"bool\"},{\"name\":\"_justificationText\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AddToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_transactionByteCode\",\"type\":\"bytes\"}],\"name\":\"checkProposalCode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"fullDescHash\",\"type\":\"string\"}],\"name\":\"ProposalAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"position\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"votesSupport\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ProposalTallied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newMinimumQuorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newdebatingPeriodDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newRequisiteMajority\",\"type\":\"uint256\"}],\"name\":\"ChangeOfRules\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"setDEXContractEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept transferOwnership.\"},\"acceptOwnership(address)\":{\"details\":\"Accept transferOwnership on a this (DAO) contract\"},\"addProposal(address,uint256,string,string,bytes,uint256)\":{\"params\":{\"_amount\":\"amount of ether to send, in wei\",\"_desc\":\"Description of job\",\"_fullDescHash\":\"Hash of full description of job\",\"_recipient\":\"who to send the ether to\",\"_transactionByteCode\":\"bytecode of transaction\"}},\"allowance(address,address)\":{\"details\":\"Token allowance\",\"params\":{\"_owner\":\"holder address\",\"_spender\":\"spender address\"},\"return\":\"remain amount\"},\"approve(address,uint256)\":{\"details\":\"Approve transfer\",\"params\":{\"_spender\":\"holder address\",\"_value\":\"tokens amount\"},\"return\":\"result  \"},\"balanceOf(address)\":{\"details\":\"Tokens balance\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"balanceOf(address,uint256)\":{\"details\":\"Balance of tokens on date\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"changeVotingRules(uint256,uint256,uint256)\":{\"params\":{\"_debatingPeriodDuration\":\"the minimum amount of delay between when a proposal is made and when it can be executed\",\"_minimumQuorum\":\"how many members must vote on a proposal for it to be executed\",\"_requisiteMajority\":\"the proposal needs to have 50% plus this number\"}},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"params\":{\"_amount\":\"amount of ether to send\",\"_proposalID\":\"number of the proposal to query\",\"_recipient\":\"who to send the ether to\",\"_transactionByteCode\":\"bytecode of transaction\"}},\"executeProposal(uint256,bytes)\":{\"params\":{\"_proposalID\":\"proposal number\",\"_transactionByteCode\":\"optional: if the transaction contained a bytecode, you need to send it\"}},\"totalSupply()\":{\"details\":\"Total Supply\",\"return\":\"totalSupply_ \"},\"transfer(address,uint256)\":{\"details\":\"Tranfer tokens to address\",\"params\":{\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"source address\",\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"transferOwnership(address,address)\":{\"details\":\"Allows the DAO to transfer control of the _contract to a _newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"trim(uint256,uint256)\":{\"details\":\"Trim owners with zero balance\"},\"vote(uint256,bool,string)\":{\"params\":{\"_justificationText\":\"optional justification text\",\"_proposalID\":\"number of proposal\",\"_supportsProposal\":\"either in favor or against it\"}}},\"title\":\"Decentralized Autonomous Organization\"},\"userdoc\":{\"methods\":{\"addProposal(address,uint256,string,string,bytes,uint256)\":{\"notice\":\"Add Proposal      * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code. \"},\"changeVotingRules(uint256,uint256,uint256)\":{\"notice\":\"Change voting rules      * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours, have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed \"},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"notice\":\"Check if a proposal code matches \"},\"executeProposal(uint256,bytes)\":{\"notice\":\"Finish vote      * Count the votes proposal #`_proposalID` and execute it if approved \"},\"setMinBalance(uint256)\":{\"notice\":\"Set minimum balance for adding proposal\"},\"vote(uint256,bool,string)\":{\"notice\":\"Log a vote for a proposal      * Vote `supportsProposal? in support of : against` proposal #`proposalID` \"}}}},\"settings\":{\"compilationTarget\":{\"source code\":\"DAO\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      },
      "DAppDEXI": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": ""
      },
      "Dividends": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052600060035562278d00600455620186a0601255600a8054600160a060020a03191633179055611f3d806100386000396000f3006080604052600436106101c85763ffffffff60e060020a600035041662fdd58e8114610200578063025e7c2714610236578063086146d21461026a578063095ea7b31461027f57806314fa197c146102b757806318160ddd146102db5780631b3ed722146102f057806323b872dd1461030557806330a897101461032f5780633181b9431461035357806340490a901461037c57806341fb1977146103915780634f64b2be146103b55780635277b4ae146103cd578063586c21f8146103f1578063641579a61461041257806369328dec1461042a5780636a76b2391461045557806370a082311461048657806373ff81cc146104a757806377be8f43146104bc57806379ba5097146104e65780637b92ac66146104fb57806380935aa91461051c578063842a8bf61461053157806388aeeadc146105525780638da5cb5b1461057357806390c5219f14610588578063923c14ba146105a95780639a3caa05146105c4578063a9059cbb146105df578063bd77c0be14610603578063be9a65551461062a578063d4ee1d901461063f578063dd62ed3e14610654578063e473c74f1461067b578063ef78d4fd1461069c578063f2fde38b146106b1578063f3fef3a3146106d2575b60408051348152905133917fd4f43975feb89f48dd30cabbb32011045be187d1e11c8ea9faa43efc35282519919081900360200190a2005b34801561020c57600080fd5b50610224600160a060020a03600435166024356106f6565b60408051918252519081900360200190f35b34801561024257600080fd5b5061024e6004356107c3565b60408051600160a060020a039092168252519081900360200190f35b34801561027657600080fd5b506102246107eb565b34801561028b57600080fd5b506102a3600160a060020a0360043516602435610817565b604080519115158252519081900360200190f35b3480156102c357600080fd5b50610224600435600160a060020a03602435166108b9565b3480156102e757600080fd5b506102246108d6565b3480156102fc57600080fd5b506102246108dc565b34801561031157600080fd5b506102a3600160a060020a03600435811690602435166044356108e2565b34801561033b57600080fd5b50610224600435600160a060020a0360243516610c4d565b34801561035f57600080fd5b5061037a600160a060020a0360043516602435604435610c75565b005b34801561038857600080fd5b50610224610f14565b34801561039d57600080fd5b50610224600160a060020a0360043516602435610f1a565b3480156103c157600080fd5b5061024e600435610f37565b3480156103d957600080fd5b50610224600435600160a060020a0360243516610f45565b3480156103fd57600080fd5b506102a3600160a060020a0360043516610f62565b34801561041e57600080fd5b5061037a600435610f77565b34801561043657600080fd5b5061037a600160a060020a036004358116906024359060443516610f9d565b34801561046157600080fd5b5061046d6004356110fa565b6040805192835260208301919091528051918290030190f35b34801561049257600080fd5b50610224600160a060020a0360043516611126565b3480156104b357600080fd5b50610224611141565b3480156104c857600080fd5b506102a3600435600160a060020a0360243581169060443516611147565b3480156104f257600080fd5b5061037a61116d565b34801561050757600080fd5b50610224600160a060020a03600435166111e4565b34801561052857600080fd5b5061024e6111f6565b34801561053d57600080fd5b5061037a600160a060020a0360043516611205565b34801561055e57600080fd5b5061037a600160a060020a03600435166112ee565b34801561057f57600080fd5b5061024e611475565b34801561059457600080fd5b5061037a600160a060020a0360043516611484565b3480156105b557600080fd5b5061037a6004356024356114ec565b3480156105d057600080fd5b506102a36004356024356117dd565b3480156105eb57600080fd5b506102a3600160a060020a0360043516602435611906565b34801561060f57600080fd5b50610224600160a060020a0360043581169060243516611bb7565b34801561063657600080fd5b50610224611bd4565b34801561064b57600080fd5b5061024e611bda565b34801561066057600080fd5b50610224600160a060020a0360043581169060243516611be9565b34801561068757600080fd5b5061037a600160a060020a0360043516611c14565b3480156106a857600080fd5b50610224611c8e565b3480156106bd57600080fd5b5061037a600160a060020a0360043516611c94565b3480156106de57600080fd5b5061037a600160a060020a0360043516602435611cdc565b600080600080600354851015151561070d57600080fd5b600454600354860381151561071e57fe5b0460010192506001915060035442111561074a57600454600354420381151561074357fe5b0460010191505b8282101561075757600080fd5b50600160a060020a0385166000908152600160205260409020545b828211156107ac57600160a060020a0386166000908152600560209081526040808320858452909152902054600019909201919003610772565b60008112156107ba57600080fd5b95945050505050565b60068054829081106107d157fe5b600091825260209091200154600160a060020a0316905081565b600060035442111561081057600454600354420381151561080857fe5b049050610814565b5060005b90565b60008115806108475750336000908152600260209081526040808320600160a060020a0387168452909152902054155b151561085257600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600f60209081526000928352604080842090915290825290205481565b60005490565b60125481565b6000808080600160a060020a03861615156108fc57600080fd5b60009250600091505b6008548210156109fa574260088381548110151561091f57fe5b90600052602060002090600202016001015411156109ef576009600060088481548110151561094a57fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a03168152602001908152602001600020548310156109ef57600960006008848154811015156109a857fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a031681526020019081526020016000205492505b600190910190610905565b600160a060020a0387166000908152600160205260409020548590610a1f9085611e2d565b1015610a2a57600080fd5b600160a060020a0387166000908152600260209081526040808320338452909152902054851115610a5a57600080fd5b600160a060020a03861660009081526007602052604090205460ff16158015610a835750600085115b15610aee57600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a03191690911790555b600160a060020a038716600090815260016020526040902054610b119086611e2d565b600160a060020a038089166000908152600160205260408082209390935590881681522054610b409086611e48565b600160a060020a03808816600090815260016020908152604080832094909455918a168152600282528281203382529091522054610b7e9086611e2d565b600160a060020a038816600090815260026020908152604080832033845290915290205550600354600190421115610bc8576004546003544203811515610bc157fe5b0460010190505b600160a060020a038781166000818152600560208181526040808420878552825280842080548c90039055948b1680845291815284832086845281529184902080548a0190558351898152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060019695505050505050565b6000918252600960209081526040808420600160a060020a0393909316845291905290205490565b600654600090819081908190851115610c8d57600080fd5b848610610c9957600080fd5b6004546003544203811515610caa57fe5b04935060016004548502600354010392506000600f6000868152602001908152602001600020600089600160a060020a0316600160a060020a0316815260200190815260200160002054111515610d0057600080fd5b5060009050845b84811015610f0b576000848152601160209081526040808320600160a060020a038b16845290915281206006805491929184908110610d4257fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205460ff161515610f0357610da8610da0600683815481101515610d8557fe5b600091825260209091200154600160a060020a0316856106f6565b601254611e5e565b9150610dc0610db8836064611e5e565b600054611e89565b6000858152600f60209081526040808320600160a060020a038c168452909152902054909250610df09083611ea0565b9150610e0882610e036012546064611e89565b611e89565b9150610e5b60106000600684815481101515610e2057fe5b6000918252602080832090910154600160a060020a0390811684528382019490945260409283018220938c1682529290925290205483611e48565b60106000600684815481101515610e6e57fe5b6000918252602080832090910154600160a060020a0390811684528382019490945260409283018220938c1680835293815282822094909455878152601184528181209281529190925290812060068054600193919085908110610ece57fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff19169115159190911790555b600101610d07565b50505050505050565b60125490565b600560209081526000928352604080842090915290825290205481565b600d8054829081106107d157fe5b600960209081526000928352604080842090915290825290205481565b60076020526000908152604090205460ff1681565b600a54600160a060020a03163314610f8b57fe5b60008111610f9857600080fd5b601255565b336000908152601060209081526040808320600160a060020a0387168452909152902054821115610fcd57600080fd5b336000908152601060209081526040808320600160a060020a0387168452909152902054610ffb9083611e2d565b336000908152601060209081526040808320600160a060020a038816808552925290912091909155151561106557604051600160a060020a0382169083156108fc029084906000818181858888f1935050505015801561105f573d6000803e3d6000fd5b506110f5565b82600160a060020a031663a9059cbb82846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156110c857600080fd5b505af11580156110dc573d6000803e3d6000fd5b505050506040513d60208110156110f257600080fd5b50505b505050565b600880548290811061110857fe5b60009182526020909120600290910201805460019091015490915082565b600160a060020a031660009081526001602052604090205490565b60065490565b601160209081526000938452604080852082529284528284209052825290205460ff1681565b600b54600160a060020a03163314156111e257600b54600a54604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b54600a8054600160a060020a031916600160a060020a039092169190911790555b565b600e6020526000908152604090205481565b600c54600160a060020a031681565b600c54600160a060020a0316331461121c57600080fd5b600160a060020a0381166000908152600e6020526040902054600d8054909190811061124457fe5b600091825260209091200154600160a060020a0316151561126457600080fd5b600d8054600019810190811061127657fe5b6000918252602080832090910154600160a060020a038481168452600e909252604090922054600d805492909316929181106112ae57fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600d805460001901906112ea9082611ed4565b5050565b6000806000600454600354420381151561130457fe5b04925060016004548402600354010391506000600f6000858152602001908152602001600020600086600160a060020a0316600160a060020a031681526020019081526020016000205411151561135a57600080fd5b6000838152601160209081526040808320600160a060020a0388168452825280832033845290915290205460ff16151561146f5761139b610da033846106f6565b90506113ab610db8826064611e5e565b6000848152600f60209081526040808320600160a060020a03891684529091529020549091506113db9082611ea0565b90506113ee81610e036012546064611e89565b336000908152601060209081526040808320600160a060020a038916845290915290205490915061141f9082611e48565b336000818152601060209081526040808320600160a060020a038a1680855290835281842095909555878352601182528083209483529381528382209282529190915220805460ff191660011790555b50505050565b600a54600160a060020a031681565b600a54600160a060020a0316331461149857fe5b600c8054600160a060020a038316600160a060020a0319909116811790915560408051918252517ffabd8204d72dd7f991ea45882ec0e28a9f5711a6e8333dd6cfe69d9dbc08d1849181900360200190a150565b600d546000908190819084111561150257600080fd5b83851061150e57600080fd5b600454600354420381151561151f57fe5b0492506000831161152f57600080fd5b8491505b838210156110f2576000838152600f60205260408120600d80549192918590811061155a57fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205415156117d257600c54600d8054600160a060020a039092169163f7888aec9190859081106115a957fe5b60009182526020808320909101546040805160e060020a63ffffffff8716028152600160a060020a0390921660048301523060248301525160448083019491928390030190829087803b1580156115ff57600080fd5b505af1158015611613573d6000803e3d6000fd5b505050506040513d602081101561162957600080fd5b505190508115156116fd57600c54604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a0390921691632e1a7d4d9160248082019260009290919082900301818387803b15801561169a57600080fd5b505af11580156116ae573d6000803e3d6000fd5b5050506000848152600f60205260408120600d8054859450919291869081106116d357fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020556117d2565b600c54600d8054600160a060020a0390921691639e281a9891908590811061172157fe5b60009182526020822001546040805160e060020a63ffffffff8616028152600160a060020a03909216600483015260248201869052516044808301939282900301818387803b15801561177357600080fd5b505af1158015611787573d6000803e3d6000fd5b5050506000848152600f60205260408120600d8054859450919291869081106117ac57fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020555b600190910190611533565b600082825b808210156118fb57600160006006848154811015156117fd57fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205415156118ef5760006007600060068581548110151561183d57fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff191691151591909117905560068054600019810190811061188357fe5b60009182526020909120015460068054600160a060020a0390921691849081106118a957fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556006805460001901906118e59082611ed4565b50600019016118f6565b6001909101905b6117e2565b506001949350505050565b6000808080600160a060020a038616151561192057600080fd5b60009250600091505b6008548210156119ee574260088381548110151561194357fe5b90600052602060002090600202016001015411156119e3576009600060088481548110151561196e57fe5b60009182526020808320600290920290910154835282810193909352604091820181203382529092529020548310156119e357600960006008848154811015156119b457fe5b600091825260208083206002909202909101548352828101939093526040918201812033825290925290205492505b600190910190611929565b336000908152600160205260409020548590611a0a9085611e2d565b1015611a1557600080fd5b600160a060020a03861660009081526007602052604090205460ff16158015611a3e5750600085115b15611aa957600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a03191690911790555b33600090815260016020526040902054611ac39086611e2d565b3360009081526001602052604080822092909255600160a060020a03881681522054611aef9086611e48565b600160a060020a038716600090815260016020819052604090912091909155600354909150421115611b33576004546003544203811515611b2c57fe5b0460010190505b336000818152600560208181526040808420868552825280842080548b90039055600160a060020a038b1680855292825280842086855282529283902080548a019055825189815292519193927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a350600195945050505050565b601060209081526000928352604080842090915290825290205481565b60035481565b600b54600160a060020a031681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600c54600160a060020a03163314611c2b57600080fd5b600d80546001810182557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018054600160a060020a031916600160a060020a03939093169283179055546000918252600e60205260409091206000199091019055565b60045481565b600a54600160a060020a03163314611ca857fe5b600160a060020a0381161515611cba57fe5b600b8054600160a060020a031916600160a060020a0392909216919091179055565b336000908152601060209081526040808320600160a060020a0386168452909152902054811115611d0c57600080fd5b336000908152601060209081526040808320600160a060020a0386168452909152902054611d3a9082611e2d565b336000908152601060209081526040808320600160a060020a0387168085529252909120919091551515611d9b57604051339082156108fc029083906000818181858888f19350505050158015611d95573d6000803e3d6000fd5b506112ea565b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390529051600160a060020a0384169163a9059cbb9160448083019260209291908290030181600087803b158015611e0357600080fd5b505af1158015611e17573d6000803e3d6000fd5b505050506040513d602081101561146f57600080fd5b60008083831115611e3a57fe5b5050808203805b5092915050565b600082820183811015611e5757fe5b9392505050565b600080831515611e715760009150611e41565b50828202828482811515611e8157fe5b0414611e5757fe5b6000808284811515611e9757fe5b04949350505050565b600080831515611eb35760009150611e41565b50828202828482811515611ec357fe5b0414611ecb57fe5b61271081611e97565b8154818355818111156110f5576000838152602090206110f591810190830161081491905b80821115611f0d5760008155600101611ef9565b50905600a165627a7a723058209c381c08fd4a1d2d26decde4685011ba06183b443bed0c1de7ff5cab8cac0f8f0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH3 0x278D00 PUSH1 0x4 SSTORE PUSH3 0x186A0 PUSH1 0x12 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1F3D DUP1 PUSH2 0x38 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C8 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH3 0xFDD58E DUP2 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x86146D2 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x14FA197C EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x30A89710 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x3181B943 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x40490A90 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x41FB1977 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x5277B4AE EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x586C21F8 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x641579A6 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x69328DEC EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x6A76B239 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x73FF81CC EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x77BE8F43 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x7B92AC66 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x80935AA9 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x842A8BF6 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x88AEEADC EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x90C5219F EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0x923C14BA EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x9A3CAA05 EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xBD77C0BE EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0xE473C74F EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x6D2 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xD4F43975FEB89F48DD30CABBB32011045BE187D1E11C8EA9FAA43EFC35282519 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 CALLDATALOAD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x7EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x8B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x8D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x8DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x8E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0xC4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xC75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0xF14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xF1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 CALLDATALOAD PUSH2 0xF37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0xF45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xF62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x4 CALLDATALOAD PUSH2 0xF77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD AND PUSH2 0xF9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x4 CALLDATALOAD PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x1141 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x44 CALLDATALOAD AND PUSH2 0x1147 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x116D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x11E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1205 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x12EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x1475 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1484 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x14EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x17DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x1906 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1BB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x1BD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x1BDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1BE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1C14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x1C8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1C94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD DUP6 LT ISZERO ISZERO ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD DUP7 SUB DUP2 ISZERO ISZERO PUSH2 0x71E JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x74A JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x743 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x7AC JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 SWAP1 SUB PUSH2 0x772 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x7D1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x810 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x808 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x814 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x847 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x9FA JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x91F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x94A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x9A8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0xA1F SWAP1 DUP6 PUSH2 0x1E2D JUMP JUMPDEST LT ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB11 SWAP1 DUP7 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB40 SWAP1 DUP7 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP11 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xB7E SWAP1 DUP7 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SWAP1 TIMESTAMP GT ISZERO PUSH2 0xBC8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0xBC1 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP13 SWAP1 SUB SWAP1 SSTORE SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP2 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP4 MLOAD DUP10 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP6 GT ISZERO PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP7 LT PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0xCAA JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x1 PUSH1 0x4 SLOAD DUP6 MUL PUSH1 0x3 SLOAD ADD SUB SWAP3 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 POP DUP5 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0xD42 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xF03 JUMPI PUSH2 0xDA8 PUSH2 0xDA0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xD85 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0xDC0 PUSH2 0xDB8 DUP4 PUSH1 0x64 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0xDF0 SWAP1 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0xE08 DUP3 PUSH2 0xE03 PUSH1 0x12 SLOAD PUSH1 0x64 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B PUSH1 0x10 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xE20 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP13 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xE6E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP13 AND DUP1 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP8 DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xECE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0xD07 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x7D1 JUMPI INVALID JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xF8B JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xFFB SWAP1 DUP4 PUSH2 0x1E2D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE ISZERO ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x105F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x10F5 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1108 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ ISZERO PUSH2 0x11E2 JUMPI PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xB SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1244 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x1276 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xD DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP2 LT PUSH2 0x12AE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x12EA SWAP1 DUP3 PUSH2 0x1ED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1304 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x1 PUSH1 0x4 SLOAD DUP5 MUL PUSH1 0x3 SLOAD ADD SUB SWAP2 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x135A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x146F JUMPI PUSH2 0x139B PUSH2 0xDA0 CALLER DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x13AB PUSH2 0xDB8 DUP3 PUSH1 0x64 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x13DB SWAP1 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP PUSH2 0x13EE DUP2 PUSH2 0xE03 PUSH1 0x12 SLOAD PUSH1 0x64 PUSH2 0x1E89 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x141F SWAP1 DUP3 PUSH2 0x1E48 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP8 DUP4 MSTORE PUSH1 0x11 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1498 JUMPI INVALID JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xFABD8204D72DD7F991EA45882EC0E28A9F5711A6E8333DD6CFE69D9DBC08D184 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP5 GT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP6 LT PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x151F JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x0 DUP4 GT PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x155A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x17D2 JUMPI PUSH1 0xC SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF7888AEC SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x15A9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP8 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 ISZERO ISZERO PUSH2 0x16FD JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x2E1A7D4D SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD DUP6 SWAP5 POP SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x16D3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9E281A98 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1721 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD DUP6 SWAP5 POP SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x17AC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17FD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x183D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x1883 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x18A9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x18E5 SWAP1 DUP3 PUSH2 0x1ED4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x1920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x19EE JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1943 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x196E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x19B4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1929 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x1A0A SWAP1 DUP6 PUSH2 0x1E2D JUMP JUMPDEST LT ISZERO PUSH2 0x1A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1A3E JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0x1AA9 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1AC3 SWAP1 DUP7 PUSH2 0x1E2D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1AEF SWAP1 DUP7 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 POP TIMESTAMP GT ISZERO PUSH2 0x1B33 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1B2C JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP12 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP1 DUP6 MSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1CA8 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1CBA JUMPI INVALID JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1D3A SWAP1 DUP3 PUSH2 0x1E2D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE ISZERO ISZERO PUSH2 0x1D9B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x1E3A JUMPI INVALID JUMPDEST POP POP DUP1 DUP3 SUB DUP1 JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1E57 JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x1E71 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1E41 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1E81 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1E57 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1E97 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1E41 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1EC3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1ECB JUMPI INVALID JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0x1E97 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x10F5 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x10F5 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x814 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1EF9 JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP13 CODESIZE SHR ADDMOD REVERT 0x4a SAR 0x2d 0x26 0xde 0xcd 0xe4 PUSH9 0x5011BA06183B443BED 0xc SAR 0xe7 SELFDESTRUCT 0x5c 0xab DUP13 0xac 0xf DUP16 STOP 0x29 ",
            "sourceMap": "13054:4796:0:-;;;6583:1;6560:24;;6672:7;6648:31;;13463:6;13438:31;;5338:5;:18;;-1:-1:-1;;;;;;5338:18:0;5346:10;5338:18;;;13054:4796;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPeriod\",\"outputs\":[{\"name\":\"N\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propID\",\"type\":\"uint256\"},{\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"PayDividends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ChangeOverPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMultiplier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ActiveProposals\",\"outputs\":[{\"name\":\"propID\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnersCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AlreadyReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEX\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DelToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PayDividends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setDEXContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"TakeProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"trim\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersbal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AddToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"setDEXContractEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept transferOwnership.\"},\"allowance(address,address)\":{\"details\":\"Token allowance\",\"params\":{\"_owner\":\"holder address\",\"_spender\":\"spender address\"},\"return\":\"remain amount\"},\"approve(address,uint256)\":{\"details\":\"Approve transfer\",\"params\":{\"_spender\":\"holder address\",\"_value\":\"tokens amount\"},\"return\":\"result  \"},\"balanceOf(address)\":{\"details\":\"Tokens balance\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"balanceOf(address,uint256)\":{\"details\":\"Balance of tokens on date\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"totalSupply()\":{\"details\":\"Total Supply\",\"return\":\"totalSupply_ \"},\"transfer(address,uint256)\":{\"details\":\"Tranfer tokens to address\",\"params\":{\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"source address\",\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"trim(uint256,uint256)\":{\"details\":\"Trim owners with zero balance\"}},\"title\":\"Dividend Distribution Contract for DAO\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source code\":\"Dividends\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      },
      "ERC20Base": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052600060035562278d0060045534801561001c57600080fd5b50610e468061002c6000396000f3006080604052600436106100fa5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041662fdd58e81146100ff578063025e7c2714610135578063086146d214610169578063095ea7b31461017e57806318160ddd146101b657806323b872dd146101cb57806330a89710146101f557806341fb1977146102195780635277b4ae1461023d578063586c21f8146102615780636a76b2391461028257806370a08231146102b357806373ff81cc146102d45780639a3caa05146102e9578063a9059cbb14610304578063be9a655514610328578063dd62ed3e1461033d578063ef78d4fd14610364575b600080fd5b34801561010b57600080fd5b50610123600160a060020a0360043516602435610379565b60408051918252519081900360200190f35b34801561014157600080fd5b5061014d600435610446565b60408051600160a060020a039092168252519081900360200190f35b34801561017557600080fd5b5061012361046e565b34801561018a57600080fd5b506101a2600160a060020a036004351660243561049a565b604080519115158252519081900360200190f35b3480156101c257600080fd5b5061012361053c565b3480156101d757600080fd5b506101a2600160a060020a0360043581169060243516604435610542565b34801561020157600080fd5b50610123600435600160a060020a03602435166108ba565b34801561022557600080fd5b50610123600160a060020a03600435166024356108e2565b34801561024957600080fd5b50610123600435600160a060020a03602435166108ff565b34801561026d57600080fd5b506101a2600160a060020a036004351661091c565b34801561028e57600080fd5b5061029a600435610931565b6040805192835260208301919091528051918290030190f35b3480156102bf57600080fd5b50610123600160a060020a036004351661095d565b3480156102e057600080fd5b50610123610978565b3480156102f557600080fd5b506101a260043560243561097e565b34801561031057600080fd5b506101a2600160a060020a0360043516602435610ab4565b34801561033457600080fd5b50610123610d72565b34801561034957600080fd5b50610123600160a060020a0360043581169060243516610d78565b34801561037057600080fd5b50610123610da3565b600080600080600354851015151561039057600080fd5b60045460035486038115156103a157fe5b046001019250600191506003544211156103cd5760045460035442038115156103c657fe5b0460010191505b828210156103da57600080fd5b50600160a060020a0385166000908152600160205260409020545b8282111561042f57600160a060020a03861660009081526005602090815260408083208584529091529020546000199092019190036103f5565b600081121561043d57600080fd5b95945050505050565b600680548290811061045457fe5b600091825260209091200154600160a060020a0316905081565b600060035442111561049357600454600354420381151561048b57fe5b049050610497565b5060005b90565b60008115806104ca5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b15156104d557600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60005490565b6000808080600160a060020a038616151561055c57600080fd5b60009250600091505b60085482101561065a574260088381548110151561057f57fe5b906000526020600020906002020160010154111561064f57600960006008848154811015156105aa57fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a031681526020019081526020016000205483101561064f576009600060088481548110151561060857fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a031681526020019081526020016000205492505b600190910190610565565b600160a060020a038716600090815260016020526040902054859061067f9085610da9565b101561068a57600080fd5b600160a060020a03871660009081526002602090815260408083203384529091529020548511156106ba57600080fd5b600160a060020a03861660009081526007602052604090205460ff161580156106e35750600085115b1561075b57600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff191690911790555b600160a060020a03871660009081526001602052604090205461077e9086610da9565b600160a060020a0380891660009081526001602052604080822093909355908816815220546107ad9086610dbd565b600160a060020a03808816600090815260016020908152604080832094909455918a1681526002825282812033825290915220546107eb9086610da9565b600160a060020a03881660009081526002602090815260408083203384529091529020555060035460019042111561083557600454600354420381151561082e57fe5b0460010190505b600160a060020a038781166000818152600560208181526040808420878552825280842080548c90039055948b1680845291815284832086845281529184902080548a0190558351898152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060019695505050505050565b6000918252600960209081526040808420600160a060020a0393909316845291905290205490565b600560209081526000928352604080842090915290825290205481565b600960209081526000928352604080842090915290825290205481565b60076020526000908152604090205460ff1681565b600880548290811061093f57fe5b60009182526020909120600290910201805460019091015490915082565b600160a060020a031660009081526001602052604090205490565b60065490565b600082825b80821015610aa9576001600060068481548110151561099e57fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020541515610a9d576000600760006006858154811015156109de57fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff1916911515919091179055600680546000198101908110610a2457fe5b60009182526020909120015460068054600160a060020a039092169184908110610a4a57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600680546000190190610a939082610dd3565b5060001901610aa4565b6001909101905b610983565b506001949350505050565b6000808080600160a060020a0386161515610ace57600080fd5b60009250600091505b600854821015610b9c5742600883815481101515610af157fe5b9060005260206000209060020201600101541115610b915760096000600884815481101515610b1c57fe5b6000918252602080832060029092029091015483528281019390935260409182018120338252909252902054831015610b915760096000600884815481101515610b6257fe5b600091825260208083206002909202909101548352828101939093526040918201812033825290925290205492505b600190910190610ad7565b336000908152600160205260409020548590610bb89085610da9565b1015610bc357600080fd5b600160a060020a03861660009081526007602052604090205460ff16158015610bec5750600085115b15610c6457600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff191690911790555b33600090815260016020526040902054610c7e9086610da9565b3360009081526001602052604080822092909255600160a060020a03881681522054610caa9086610dbd565b600160a060020a038716600090815260016020819052604090912091909155600354909150421115610cee576004546003544203811515610ce757fe5b0460010190505b336000818152600560208181526040808420868552825280842080548b90039055600160a060020a038b1680855292825280842086855282529283902080548a019055825189815292519193927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a350600195945050505050565b60035481565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60045481565b60008083831115610db657fe5b5050900390565b600082820183811015610dcc57fe5b9392505050565b815481835581811115610df757600083815260209020610df7918101908301610dfc565b505050565b61049791905b80821115610e165760008155600101610e02565b50905600a165627a7a72305820bebc0e5040e6408d2f5cd72e28d5b6e39e15c647073170acba7bba3000a54e270029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH3 0x278D00 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE46 DUP1 PUSH2 0x2C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFA JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH3 0xFDD58E DUP2 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x86146D2 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x30A89710 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x41FB1977 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x5277B4AE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x586C21F8 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x6A76B239 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x73FF81CC EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x9A3CAA05 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x364 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x4 CALLDATALOAD PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x46E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x53C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x542 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x8BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x8E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x8FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x91C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 CALLDATALOAD PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x95D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x97E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xAB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0xD72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xD78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD DUP6 LT ISZERO ISZERO ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD DUP7 SUB DUP2 ISZERO ISZERO PUSH2 0x3A1 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3CD JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x3C6 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x42F JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 SWAP1 SUB PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x454 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x48B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x497 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x4CA JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x65A JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x57F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x64F JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x5AA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x64F JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x608 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x67F SWAP1 DUP6 PUSH2 0xDA9 JUMP JUMPDEST LT ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0x75B JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x77E SWAP1 DUP7 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7AD SWAP1 DUP7 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP11 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EB SWAP1 DUP7 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SWAP1 TIMESTAMP GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x82E JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP13 SWAP1 SUB SWAP1 SSTORE SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP2 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP4 MLOAD DUP10 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x93F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x99E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x9DE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xA24 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0xA4A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xA93 SWAP1 DUP3 PUSH2 0xDD3 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH2 0x983 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xB9C JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xAF1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xB1C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xB62 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xAD7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0xBB8 SWAP1 DUP6 PUSH2 0xDA9 JUMP JUMPDEST LT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0xC64 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC7E SWAP1 DUP7 PUSH2 0xDA9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xCAA SWAP1 DUP7 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 POP TIMESTAMP GT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0xCE7 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP12 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP1 DUP6 MSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0xDB6 JUMPI INVALID JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDCC JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xDF7 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xDFC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x497 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE02 JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbe 0xbc 0xe POP BLOCKHASH 0xe6 BLOCKHASH DUP14 0x2f 0x5c 0xd7 0x2e 0x28 0xd5 0xb6 0xe3 SWAP15 ISZERO 0xc6 0x47 SMOD BALANCE PUSH17 0xACBA7BBA3000A54E270029000000000000 ",
            "sourceMap": "6373:6615:0:-;;;6583:1;6560:24;;6672:7;6648:31;;6373:6615;8:9:-1;5:2;;;30:1;27;20:12;5:2;6373:6615:0;;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPeriod\",\"outputs\":[{\"name\":\"N\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propID\",\"type\":\"uint256\"},{\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ChangeOverPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ActiveProposals\",\"outputs\":[{\"name\":\"propID\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnersCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"trim\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Token allowance\",\"params\":{\"_owner\":\"holder address\",\"_spender\":\"spender address\"},\"return\":\"remain amount\"},\"approve(address,uint256)\":{\"details\":\"Approve transfer\",\"params\":{\"_spender\":\"holder address\",\"_value\":\"tokens amount\"},\"return\":\"result  \"},\"balanceOf(address)\":{\"details\":\"Tokens balance\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"balanceOf(address,uint256)\":{\"details\":\"Balance of tokens on date\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"totalSupply()\":{\"details\":\"Total Supply\",\"return\":\"totalSupply_ \"},\"transfer(address,uint256)\":{\"details\":\"Tranfer tokens to address\",\"params\":{\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"source address\",\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"trim(uint256,uint256)\":{\"details\":\"Trim owners with zero balance\"}},\"title\":\"Standard ERC20 token + balance on date\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source code\":\"ERC20Base\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      },
      "ERC20I": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": ""
      },
      "Ownable": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610205806100326000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166379ba509781146100665780638da5cb5b1461007d578063d4ee1d90146100ae578063f2fde38b146100c3575b600080fd5b34801561007257600080fd5b5061007b6100e4565b005b34801561008957600080fd5b50610092610166565b60408051600160a060020a039092168252519081900360200190f35b3480156100ba57600080fd5b50610092610175565b3480156100cf57600080fd5b5061007b600160a060020a0360043516610184565b600154600160a060020a03163314156101645760015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b565b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a0316331461019857fe5b600160a060020a03811615156101aa57fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820a64c629fca3a0a7226f9b0b1c8dbd03830be3c8e86fed5fc9c976429c85685820029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x205 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x175 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x184 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ ISZERO PUSH2 0x164 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x198 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1AA JUMPI INVALID JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xa6 0x4c PUSH3 0x9FCA3A EXP PUSH19 0x26F9B0B1C8DBD03830BE3C8E86FED5FC9C9764 0x29 0xc8 JUMP DUP6 DUP3 STOP 0x29 ",
            "sourceMap": "5030:1012:0:-;;;5310:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5338:5:0;:18;;-1:-1:-1;;;;;;5338:18:0;5346:10;5338:18;;;5030:1012;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept transferOwnership.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable contract - base contract with an owner\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source code\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      },
      "SDAD": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052600060035562278d00600455620186a060125564e8d4a510006013556298968060185560086019553480156200003957600080fd5b5060405162003c9d38038062003c9d83398101604090815281516020808401519284015160608501516080860151600a8054600160a060020a031916331790559386018051909695909501949193909290916200009d91601a91908801906200030e565b508351620000b390601b9060208701906200030e565b5060038390556004829055601954601854600a9190910a026000818155600160a060020a03831680825260016020908152604080842085905580519485525191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3600160a060020a0381166000818152600760209081526040808320805460ff19166001908117909155600680548083019091557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a0319168617905593835283825280832054600583528184209484529390915281209190915554620001f090620001bf9061138864010000000062000266810204565b6105a0620001e16000546109c462000266640100000000026401000000009004565b640100000000620002a5810204565b5050600d80546001810182557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018054600160a060020a03191690555460008052600e602052600019017fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c5550620003b3915050565b6000808315156200027b57600091506200029e565b508282028284828115156200028c57fe5b04146200029557fe5b61271090049050805b5092915050565b600a54600160a060020a03163314620002ba57fe5b601483905560158290556016819055604080518481526020810184905280820183905290517fe7a31acb9efc5512cc1896266cbc06335ca5e661547b177002b7bb5d8535871e9181900360600190a1505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200035157805160ff191683800117855562000381565b8280016001018555821562000381579182015b828111156200038157825182559160200191906001019062000364565b506200038f92915062000393565b5090565b620003b091905b808211156200038f57600081556001016200039a565b90565b6138da80620003c36000396000f3006080604052600436106102ae5763ffffffff60e060020a600035041662040e1081146102e6578062fdd58e146103df578063025e7c271461040357806306fdde0314610437578063086146d2146104c1578063095ea7b3146104d65780630f3a9f651461050e57806314fa197c1461052857806318160ddd1461054c5780631b3ed722146105615780631d3df0d314610576578063237e94921461058b57806323b872dd146105e957806330a8971014610613578063313ce567146106375780633181b9431461064c578063378dc3dc1461067357806340490a901461068857806341fb19771461069d5780634eee966f146106c15780634f64b2be1461075857806351710e45146107705780635277b4ae14610791578063586c21f8146107b557806363718475146107d6578063641579a6146107eb57806369328dec146108035780636a76b2391461082e5780636d4354211461085f5780636e676b691461088657806370a08231146108a457806373ff81cc146108c557806377be8f43146108da5780637930953b1461090457806379ba50971461091c5780637b92ac661461093157806380935aa9146109525780638160f0b514610967578063842a8bf61461097c57806388aeeadc1461099d5780638da5cb5b146109be57806390c5219f146109d3578063923c14ba146109f457806395d89b4114610a0f5780639a3caa0514610a24578063a9059cbb14610a3f578063bd77c0be14610a63578063be9a655514610a8a578063c91d956c14610a9f578063ca2c2d3714610ab7578063ce4c69bd14610acc578063d1dbe7d814610af8578063d3c0715b14610c4f578063d4ee1d9014610cb1578063dd62ed3e14610cc6578063e473c74f14610ced578063eceb294514610d0e578063ef78d4fd14610d7d578063f2fde38b14610d92578063f3fef3a314610db3575b60408051348152905133917fd4f43975feb89f48dd30cabbb32011045be187d1e11c8ea9faa43efc35282519919081900360200190a2005b3480156102f257600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526103cd948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505093359450610dd79350505050565b60408051918252519081900360200190f35b3480156103eb57600080fd5b506103cd600160a060020a03600435166024356111c7565b34801561040f57600080fd5b5061041b600435611294565b60408051600160a060020a039092168252519081900360200190f35b34801561044357600080fd5b5061044c6112bc565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561048657818101518382015260200161046e565b50505050905090810190601f1680156104b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104cd57600080fd5b506103cd61134a565b3480156104e257600080fd5b506104fa600160a060020a0360043516602435611376565b604080519115158252519081900360200190f35b34801561051a57600080fd5b50610526600435611418565b005b34801561053457600080fd5b506103cd600435600160a060020a0360243516611467565b34801561055857600080fd5b506103cd611484565b34801561056d57600080fd5b506103cd61148a565b34801561058257600080fd5b506103cd611490565b34801561059757600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526105269583359536956044949193909101919081908401838280828437509497506114969650505050505050565b3480156105f557600080fd5b506104fa600160a060020a036004358116906024351660443561173f565b34801561061f57600080fd5b506103cd600435600160a060020a0360243516611aaa565b34801561064357600080fd5b506103cd611ad2565b34801561065857600080fd5b50610526600160a060020a0360043516602435604435611ad8565b34801561067f57600080fd5b506103cd611d77565b34801561069457600080fd5b506103cd611d7d565b3480156106a957600080fd5b506103cd600160a060020a0360043516602435611d83565b3480156106cd57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261052694369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750611da09650505050505050565b34801561076457600080fd5b5061041b600435611ee0565b34801561077c57600080fd5b50610526600160a060020a0360043516611eee565b34801561079d57600080fd5b506103cd600435600160a060020a0360243516611f5b565b3480156107c157600080fd5b506104fa600160a060020a0360043516611f78565b3480156107e257600080fd5b506103cd611f8d565b3480156107f757600080fd5b50610526600435611f93565b34801561080f57600080fd5b50610526600160a060020a036004358116906024359060443516611fb9565b34801561083a57600080fd5b50610846600435612113565b6040805192835260208301919091528051918290030190f35b34801561086b57600080fd5b50610526600160a060020a036004358116906024351661213f565b34801561089257600080fd5b506105266004356024356044356121ca565b3480156108b057600080fd5b506103cd600160a060020a0360043516612232565b3480156108d157600080fd5b506103cd61224d565b3480156108e657600080fd5b506104fa600435600160a060020a0360243581169060443516612253565b34801561091057600080fd5b50610526600435612279565b34801561092857600080fd5b50610526612299565b34801561093d57600080fd5b506103cd600160a060020a0360043516612310565b34801561095e57600080fd5b5061041b612322565b34801561097357600080fd5b506103cd612331565b34801561098857600080fd5b50610526600160a060020a0360043516612337565b3480156109a957600080fd5b50610526600160a060020a0360043516612420565b3480156109ca57600080fd5b5061041b6125a7565b3480156109df57600080fd5b50610526600160a060020a03600435166125b6565b348015610a0057600080fd5b5061052660043560243561261e565b348015610a1b57600080fd5b5061044c61290f565b348015610a3057600080fd5b506104fa60043560243561296a565b348015610a4b57600080fd5b506104fa600160a060020a0360043516602435612a93565b348015610a6f57600080fd5b506103cd600160a060020a0360043581169060243516612d44565b348015610a9657600080fd5b506103cd612d61565b348015610aab57600080fd5b50610526600435612d67565b348015610ac357600080fd5b50610526612d8a565b348015610ad857600080fd5b50610526600160a060020a03600435811690602435166044351515612de0565b348015610b0457600080fd5b50610b10600435612e74565b604051808c81526020018b1515151581526020018a15151515815260200189815260200188815260200187815260200186600160a060020a0316600160a060020a0316815260200185815260200184600019166000191681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610ba9578181015183820152602001610b91565b50505050905090810190601f168015610bd65780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610c09578181015183820152602001610bf1565b50505050905090810190601f168015610c365780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b348015610c5b57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526103cd94823594602480351515953695946064949201919081908401838280828437509497506130049650505050505050565b348015610cbd57600080fd5b5061041b6131d0565b348015610cd257600080fd5b506103cd600160a060020a03600435811690602435166131df565b348015610cf957600080fd5b50610526600160a060020a036004351661320a565b348015610d1a57600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526104fa94803594600160a060020a0360248035919091169560443595369560849493019181908401838280828437509497506132849650505050505050565b348015610d8957600080fd5b506103cd613416565b348015610d9e57600080fd5b50610526600160a060020a036004351661341c565b348015610dbf57600080fd5b50610526600160a060020a0360043516602435613464565b336000908152600160205260408120548110610df257600080fd5b6013543360009081526001602052604090205411610e0f57600080fd5b811515610e1c5760155491505b60176101606040519081016040528084603c024201815260200160001515815260200160001515815260200160008152602001600081526020016000815260200189600160a060020a031681526020018881526020018989876040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b60208310610ed45780518252601f199092019160209182019101610eb5565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610f395780518252601f199092019160209182019101610f1a565b518151602093840361010090810a6000190180199093169290911691909117909152604080519390950183900390922087528681018e90529583018c905287546001808201808b5560009a8b52998890208951600a90930201918255888801519082018054958a015160ff199096169115159190911761ff001916941515830294909417909355606087015160028401556080870151600384015560a0870151600484015560c0870151600584018054600160a060020a031916600160a060020a0390921691909117905560e0870151600684015586015160078301555061012085015180519194611033945060088601935001906137a6565b5061014082015180516110509160098401916020909101906137a6565b5050601780546110839350600019810192508290811061106c57fe5b90600052602060002090600a0201600001546135b5565b7f4c6647c4a4058c1a0bcd513fe2522706466700a104b82d4487d888f17ce5be13600160178054905003888888886040518086815260200185600160a060020a0316600160a060020a031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156111165781810151838201526020016110fe565b50505050905090810190601f1680156111435780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561117657818101518382015260200161115e565b50505050905090810190601f1680156111a35780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a150601754600019019695505050505050565b60008060008060035485101515156111de57600080fd5b60045460035486038115156111ef57fe5b0460010192506001915060035442111561121b57600454600354420381151561121457fe5b0460010191505b8282101561122857600080fd5b50600160a060020a0385166000908152600160205260409020545b8282111561127d57600160a060020a0386166000908152600560209081526040808320858452909152902054600019909201919003611243565b600081121561128b57600080fd5b95945050505050565b60068054829081106112a257fe5b600091825260209091200154600160a060020a0316905081565b601a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156113425780601f1061131757610100808354040283529160200191611342565b820191906000526020600020905b81548152906001019060200180831161132557829003601f168201915b505050505081565b600060035442111561136f57600454600354420381151561136757fe5b049050611373565b5060005b90565b60008115806113a65750336000908152600260209081526040808320600160a060020a0387168452909152902054155b15156113b157600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600a54600160a060020a0316331461142c57fe5b60048190556040805182815290517fe92c9d8e3252d3e4cd9d77ffca1d70a1eef8e8b477120ba7f6034ea494624a939181900360200190a150565b600f60209081526000928352604080842090915290825290205481565b60005490565b60125481565b60155481565b60006017838154811015156114a757fe5b90600052602060002090600a020190508060000154421180156114cf5750600181015460ff16155b80156115d55750600581015460068201546040516c01000000000000000000000000600160a060020a0390931692830260208083019182526034830184905286518793605401918401908083835b6020831061153c5780518252601f19909201916020918201910161151d565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b602083106115a15780518252601f199092019160209182019101611582565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120600785015414925050505b80156115e75750601454816002015410155b15156115f257600080fd5b601654816003015411156116a657600581015460068201546040518451600160a060020a03909316928591908190602084019080838360005b8381101561164357818101518382015260200161162b565b50505050905090810190601f1680156116705780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af192505050151561169057600080fd5b60018101805461ff0019166101001790556116b4565b60018101805461ff00191690555b6001818101805460ff191690911790556116cd8361362d565b600381015460048201546002830154600184015460408051888152602081019590955284810193909352606084019190915260ff6101009091041615156080830152517f748f0810c68633063bb13f3c71e10cd1889925b3721d6e567114d0632574a3969181900360a00190a1505050565b6000808080600160a060020a038616151561175957600080fd5b60009250600091505b600854821015611857574260088381548110151561177c57fe5b906000526020600020906002020160010154111561184c57600960006008848154811015156117a757fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a031681526020019081526020016000205483101561184c576009600060088481548110151561180557fe5b9060005260206000209060020201600001548152602001908152602001600020600088600160a060020a0316600160a060020a031681526020019081526020016000205492505b600190910190611762565b600160a060020a038716600090815260016020526040902054859061187c90856136ff565b101561188757600080fd5b600160a060020a03871660009081526002602090815260408083203384529091529020548511156118b757600080fd5b600160a060020a03861660009081526007602052604090205460ff161580156118e05750600085115b1561194b57600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a03191690911790555b600160a060020a03871660009081526001602052604090205461196e90866136ff565b600160a060020a03808916600090815260016020526040808220939093559088168152205461199d908661371a565b600160a060020a03808816600090815260016020908152604080832094909455918a1681526002825282812033825290915220546119db90866136ff565b600160a060020a038816600090815260026020908152604080832033845290915290205550600354600190421115611a25576004546003544203811515611a1e57fe5b0460010190505b600160a060020a038781166000818152600560208181526040808420878552825280842080548c90039055948b1680845291815284832086845281529184902080548a0190558351898152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060019695505050505050565b6000918252600960209081526040808420600160a060020a0393909316845291905290205490565b60195481565b600654600090819081908190851115611af057600080fd5b848610611afc57600080fd5b6004546003544203811515611b0d57fe5b04935060016004548502600354010392506000600f6000868152602001908152602001600020600089600160a060020a0316600160a060020a0316815260200190815260200160002054111515611b6357600080fd5b5060009050845b84811015611d6e576000848152601160209081526040808320600160a060020a038b16845290915281206006805491929184908110611ba557fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205460ff161515611d6657611c0b611c03600683815481101515611be857fe5b600091825260209091200154600160a060020a0316856111c7565b601254613730565b9150611c23611c1b836064613730565b60005461375b565b6000858152600f60209081526040808320600160a060020a038c168452909152902054909250611c539083613772565b9150611c6b82611c66601254606461375b565b61375b565b9150611cbe60106000600684815481101515611c8357fe5b6000918252602080832090910154600160a060020a0390811684528382019490945260409283018220938c168252929092529020548361371a565b60106000600684815481101515611cd157fe5b6000918252602080832090910154600160a060020a0390811684528382019490945260409283018220938c1680835293815282822094909455878152601184528181209281529190925290812060068054600193919085908110611d3157fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff19169115159190911790555b600101611b6a565b50505050505050565b60185481565b60125490565b600560209081526000928352604080842090915290825290205481565b600a54600160a060020a03163314611db457fe5b8151611dc790601a9060208501906137a6565b508051611ddb90601b9060208401906137a6565b507fd131ab1e6f279deea74e13a18477e13e2107deb6dc8ae955648948be5841fb468282604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015611e40578181015183820152602001611e28565b50505050905090810190601f168015611e6d5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015611ea0578181015183820152602001611e88565b50505050905090810190601f168015611ecd5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050565b600d8054829081106112a257fe5b600a54600160a060020a03163314611f0257fe5b80600160a060020a03166379ba50976040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015611f4057600080fd5b505af1158015611f54573d6000803e3d6000fd5b5050505050565b600960209081526000928352604080842090915290825290205481565b60076020526000908152604090205460ff1681565b60165481565b600a54600160a060020a03163314611fa757fe5b60008111611fb457600080fd5b601255565b336000908152601060209081526040808320600160a060020a0387168452909152902054821115611fe957600080fd5b336000908152601060209081526040808320600160a060020a038716845290915290205461201790836136ff565b336000908152601060209081526040808320600160a060020a038816808552925290912091909155151561208157604051600160a060020a0382169083156108fc029084906000818181858888f1935050505015801561207b573d6000803e3d6000fd5b5061210e565b82600160a060020a031663a9059cbb82846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156120e457600080fd5b505af11580156120f8573d6000803e3d6000fd5b505050506040513d6020811015611f5457600080fd5b505050565b600880548290811061212157fe5b60009182526020909120600290910201805460019091015490915082565b600a54600160a060020a0316331461215357fe5b81600160a060020a031663f2fde38b826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b1580156121ae57600080fd5b505af11580156121c2573d6000803e3d6000fd5b505050505050565b600a54600160a060020a031633146121de57fe5b601483905560158290556016819055604080518481526020810184905280820183905290517fe7a31acb9efc5512cc1896266cbc06335ca5e661547b177002b7bb5d8535871e9181900360600190a1505050565b600160a060020a031660009081526001602052604090205490565b60065490565b601160209081526000938452604080852082529284528284209052825290205460ff1681565b600a54600160a060020a0316331461228d57fe5b6122968161362d565b50565b600b54600160a060020a031633141561230e57600b54600a54604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b54600a8054600160a060020a031916600160a060020a039092169190911790555b565b600e6020526000908152604090205481565b600c54600160a060020a031681565b60145481565b600c54600160a060020a0316331461234e57600080fd5b600160a060020a0381166000908152600e6020526040902054600d8054909190811061237657fe5b600091825260209091200154600160a060020a0316151561239657600080fd5b600d805460001981019081106123a857fe5b6000918252602080832090910154600160a060020a038481168452600e909252604090922054600d805492909316929181106123e057fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600d8054600019019061241c9082613824565b5050565b6000806000600454600354420381151561243657fe5b04925060016004548402600354010391506000600f6000858152602001908152602001600020600086600160a060020a0316600160a060020a031681526020019081526020016000205411151561248c57600080fd5b6000838152601160209081526040808320600160a060020a0388168452825280832033845290915290205460ff1615156125a1576124cd611c0333846111c7565b90506124dd611c1b826064613730565b6000848152600f60209081526040808320600160a060020a038916845290915290205490915061250d9082613772565b905061252081611c66601254606461375b565b336000908152601060209081526040808320600160a060020a0389168452909152902054909150612551908261371a565b336000818152601060209081526040808320600160a060020a038a1680855290835281842095909555878352601182528083209483529381528382209282529190915220805460ff191660011790555b50505050565b600a54600160a060020a031681565b600a54600160a060020a031633146125ca57fe5b600c8054600160a060020a038316600160a060020a0319909116811790915560408051918252517ffabd8204d72dd7f991ea45882ec0e28a9f5711a6e8333dd6cfe69d9dbc08d1849181900360200190a150565b600d546000908190819084111561263457600080fd5b83851061264057600080fd5b600454600354420381151561265157fe5b0492506000831161266157600080fd5b8491505b83821015611f54576000838152600f60205260408120600d80549192918590811061268c57fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902054151561290457600c54600d8054600160a060020a039092169163f7888aec9190859081106126db57fe5b60009182526020808320909101546040805160e060020a63ffffffff8716028152600160a060020a0390921660048301523060248301525160448083019491928390030190829087803b15801561273157600080fd5b505af1158015612745573d6000803e3d6000fd5b505050506040513d602081101561275b57600080fd5b5051905081151561282f57600c54604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a0390921691632e1a7d4d9160248082019260009290919082900301818387803b1580156127cc57600080fd5b505af11580156127e0573d6000803e3d6000fd5b5050506000848152600f60205260408120600d80548594509192918690811061280557fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902055612904565b600c54600d8054600160a060020a0390921691639e281a9891908590811061285357fe5b60009182526020822001546040805160e060020a63ffffffff8616028152600160a060020a03909216600483015260248201869052516044808301939282900301818387803b1580156128a557600080fd5b505af11580156128b9573d6000803e3d6000fd5b5050506000848152600f60205260408120600d8054859450919291869081106128de57fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020555b600190910190612665565b601b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156113425780601f1061131757610100808354040283529160200191611342565b600082825b80821015612a88576001600060068481548110151561298a57fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020541515612a7c576000600760006006858154811015156129ca57fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff1916911515919091179055600680546000198101908110612a1057fe5b60009182526020909120015460068054600160a060020a039092169184908110612a3657fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600680546000190190612a729082613824565b5060001901612a83565b6001909101905b61296f565b506001949350505050565b6000808080600160a060020a0386161515612aad57600080fd5b60009250600091505b600854821015612b7b5742600883815481101515612ad057fe5b9060005260206000209060020201600101541115612b705760096000600884815481101515612afb57fe5b6000918252602080832060029092029091015483528281019390935260409182018120338252909252902054831015612b705760096000600884815481101515612b4157fe5b600091825260208083206002909202909101548352828101939093526040918201812033825290925290205492505b600190910190612ab6565b336000908152600160205260409020548590612b9790856136ff565b1015612ba257600080fd5b600160a060020a03861660009081526007602052604090205460ff16158015612bcb5750600085115b15612c3657600160a060020a0386166000818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054600160a060020a03191690911790555b33600090815260016020526040902054612c5090866136ff565b3360009081526001602052604080822092909255600160a060020a03881681522054612c7c908661371a565b600160a060020a038716600090815260016020819052604090912091909155600354909150421115612cc0576004546003544203811515612cb957fe5b0460010190505b336000818152600560208181526040808420868552825280842080548b90039055600160a060020a038b1680855292825280842086855282529283902080548a019055825189815292519193927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a350600195945050505050565b601060209081526000928352604080842090915290825290205481565b60035481565b600a54600160a060020a03163314612d7b57fe5b60008111612d8557fe5b601355565b600a54600160a060020a03163314612d9e57fe5b600a8054600160a060020a0319163090811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3565b600a54600160a060020a03163314612df457fe5b604080517ffaad6eb5000000000000000000000000000000000000000000000000000000008152600160a060020a038481166004830152831515602483015291519185169163faad6eb59160448082019260009290919082900301818387803b158015612e6057600080fd5b505af1158015611d6e573d6000803e3d6000fd5b6017805482908110612e8257fe5b6000918252602091829020600a91909102018054600180830154600280850154600386015460048701546005880154600689015460078a015460088b018054604080516101009c8316158d026000190190921699909904601f81018f90048f0282018f019099528881529a9d5060ff808a169d9a9099049098169a959994989397600160a060020a039093169691959094909390929190830182828015612f6a5780601f10612f3f57610100808354040283529160200191612f6a565b820191906000526020600020905b815481529060010190602001808311612f4d57829003601f168201915b5050505060098301805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152949594935090830182828015612ffa5780601f10612fcf57610100808354040283529160200191612ffa565b820191906000526020600020905b815481529060010190602001808311612fdd57829003601f168201915b505050505090508b565b3360009081526001602052604081205481908190811061302357600080fd5b601780548790811061303157fe5b90600052602060002090600a020191508160000154421115151561305457600080fd5b336000818152600160209081526040808320548a8452600983528184209484529390915290205461308591906136ff565b90506000811161309457600080fd5b60008681526009602090815260408083203384529091529020546130b8908261371a565b60008781526009602090815260408083203384529091529020556002820180548201905584156130f157600382018054820190556130fc565b600482018054820190555b7fc34f869b7ff431b034b7b9aea9822dac189a685e0b015c7d1be3add3f89128e886863387604051808581526020018415151515815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561318657818101518382015260200161316e565b50505050905090810190601f1680156131b35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15060020154949350505050565b600b54600160a060020a031681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600c54600160a060020a0316331461322157600080fd5b600d80546001810182557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018054600160a060020a031916600160a060020a03939093169283179055546000918252600e60205260409091206000199091019055565b600083600160a060020a031660178681548110151561329f57fe5b600091825260209091206005600a909202010154600160a060020a0316146132c657600080fd5b826017868154811015156132d657fe5b90600052602060002090600a0201600601541415156132f457600080fd5b8383836040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106133565780518252601f199092019160209182019101613337565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b602083106133bb5780518252601f19909201916020918201910161339c565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060178054919450925088915081106133f857fe5b600091825260209091206007600a9092020101541495945050505050565b60045481565b600a54600160a060020a0316331461343057fe5b600160a060020a038116151561344257fe5b600b8054600160a060020a031916600160a060020a0392909216919091179055565b336000908152601060209081526040808320600160a060020a038616845290915290205481111561349457600080fd5b336000908152601060209081526040808320600160a060020a03861684529091529020546134c290826136ff565b336000908152601060209081526040808320600160a060020a038716808552925290912091909155151561352357604051339082156108fc029083906000818181858888f1935050505015801561351d573d6000803e3d6000fd5b5061241c565b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390529051600160a060020a0384169163a9059cbb9160448083019260209291908290030181600087803b15801561358b57600080fd5b505af115801561359f573d6000803e3d6000fd5b505050506040513d60208110156125a157600080fd5b60408051808201909152918252602082019081526008805460018101825560009190915291517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3600290930292830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee490910155565b60005b60085481101561241c578160088281548110151561364a57fe5b90600052602060002090600202016000015414156136f6574260088281548110151561367257fe5b90600052602060002090600202016001015410151561369057600080fd5b6008805460001981019081106136a257fe5b90600052602060002090600202016008828154811015156136bf57fe5b6000918252602090912082546002909202019081556001918201549101556008805460001901906136f09082613848565b506136fa565b6001015b613630565b6000808383111561370c57fe5b5050808203805b5092915050565b60008282018381101561372957fe5b9392505050565b6000808315156137435760009150613713565b5082820282848281151561375357fe5b041461372957fe5b600080828481151561376957fe5b04949350505050565b6000808315156137855760009150613713565b5082820282848281151561379557fe5b041461379d57fe5b61271081613769565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106137e757805160ff1916838001178555613814565b82800160010185558215613814579182015b828111156138145782518255916020019190600101906137f9565b50613820929150613874565b5090565b81548183558181111561210e5760008381526020902061210e918101908301613874565b81548183558181111561210e5760020281600202836000526020600020918201910161210e919061388e565b61137391905b80821115613820576000815560010161387a565b61137391905b8082111561382057600080825560018201556002016138945600a165627a7a723058200a4bbcc9a164b1d0cdf58cf4265d6b8d12d7ded188ec6a5415c5483c2ef1f1620029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH3 0x278D00 PUSH1 0x4 SSTORE PUSH3 0x186A0 PUSH1 0x12 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x13 SSTORE PUSH3 0x989680 PUSH1 0x18 SSTORE PUSH1 0x8 PUSH1 0x19 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3C9D CODESIZE SUB DUP1 PUSH3 0x3C9D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE SWAP4 DUP7 ADD DUP1 MLOAD SWAP1 SWAP7 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH3 0x9D SWAP2 PUSH1 0x1A SWAP2 SWAP1 DUP9 ADD SWAP1 PUSH3 0x30E JUMP JUMPDEST POP DUP4 MLOAD PUSH3 0xB3 SWAP1 PUSH1 0x1B SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH3 0x30E JUMP JUMPDEST POP PUSH1 0x3 DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE PUSH1 0x19 SLOAD PUSH1 0x18 SLOAD PUSH1 0xA SWAP2 SWAP1 SWAP2 EXP MUL PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 DUP4 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP7 OR SWAP1 SSTORE SWAP4 DUP4 MSTORE DUP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP5 MSTORE SWAP4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH3 0x1F0 SWAP1 PUSH3 0x1BF SWAP1 PUSH2 0x1388 PUSH5 0x100000000 PUSH3 0x266 DUP2 MUL DIV JUMP JUMPDEST PUSH2 0x5A0 PUSH3 0x1E1 PUSH1 0x0 SLOAD PUSH2 0x9C4 PUSH3 0x266 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH5 0x100000000 PUSH3 0x2A5 DUP2 MUL DIV JUMP JUMPDEST POP POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE SLOAD PUSH1 0x0 DUP1 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 NOT ADD PUSH32 0xE710864318D4A32F37D6CE54CB3FADBEF648DD12D8DBDF53973564D56B7F881C SSTORE POP PUSH3 0x3B3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH3 0x27B JUMPI PUSH1 0x0 SWAP2 POP PUSH3 0x29E JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH3 0x28C JUMPI INVALID JUMPDEST DIV EQ PUSH3 0x295 JUMPI INVALID JUMPDEST PUSH2 0x2710 SWAP1 DIV SWAP1 POP DUP1 JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH3 0x2BA JUMPI INVALID JUMPDEST PUSH1 0x14 DUP4 SWAP1 SSTORE PUSH1 0x15 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xE7A31ACB9EFC5512CC1896266CBC06335CA5E661547B177002B7BB5D8535871E SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x351 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x381 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x381 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x381 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x364 JUMP JUMPDEST POP PUSH3 0x38F SWAP3 SWAP2 POP PUSH3 0x393 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x3B0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x39A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x38DA DUP1 PUSH3 0x3C3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AE JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH3 0x40E10 DUP2 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH3 0xFDD58E EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x86146D2 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xF3A9F65 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x14FA197C EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x1D3DF0D3 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x237E9492 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0x30A89710 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x3181B943 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x40490A90 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x41FB1977 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0x4EEE966F EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x51710E45 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x5277B4AE EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0x586C21F8 EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0x63718475 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0x641579A6 EQ PUSH2 0x7EB JUMPI DUP1 PUSH4 0x69328DEC EQ PUSH2 0x803 JUMPI DUP1 PUSH4 0x6A76B239 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0x6D435421 EQ PUSH2 0x85F JUMPI DUP1 PUSH4 0x6E676B69 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0x73FF81CC EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0x77BE8F43 EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0x7930953B EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0x7B92AC66 EQ PUSH2 0x931 JUMPI DUP1 PUSH4 0x80935AA9 EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0x8160F0B5 EQ PUSH2 0x967 JUMPI DUP1 PUSH4 0x842A8BF6 EQ PUSH2 0x97C JUMPI DUP1 PUSH4 0x88AEEADC EQ PUSH2 0x99D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9BE JUMPI DUP1 PUSH4 0x90C5219F EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0x923C14BA EQ PUSH2 0x9F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xA0F JUMPI DUP1 PUSH4 0x9A3CAA05 EQ PUSH2 0xA24 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xBD77C0BE EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0xA8A JUMPI DUP1 PUSH4 0xC91D956C EQ PUSH2 0xA9F JUMPI DUP1 PUSH4 0xCA2C2D37 EQ PUSH2 0xAB7 JUMPI DUP1 PUSH4 0xCE4C69BD EQ PUSH2 0xACC JUMPI DUP1 PUSH4 0xD1DBE7D8 EQ PUSH2 0xAF8 JUMPI DUP1 PUSH4 0xD3C0715B EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xCB1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xCC6 JUMPI DUP1 PUSH4 0xE473C74F EQ PUSH2 0xCED JUMPI DUP1 PUSH4 0xECEB2945 EQ PUSH2 0xD0E JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0xD7D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD92 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xDB3 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xD4F43975FEB89F48DD30CABBB32011045BE187D1E11C8EA9FAA43EFC35282519 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x3CD SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP SWAP4 CALLDATALOAD SWAP5 POP PUSH2 0xDD7 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x11C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 CALLDATALOAD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x486 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x46E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4B3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x134A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x4 CALLDATALOAD PUSH2 0x1418 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1467 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x1484 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x148A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x1490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x24 DUP1 CALLDATALOAD DUP3 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV DUP6 MUL DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP6 DUP6 MSTORE PUSH2 0x526 SWAP6 DUP4 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x44 SWAP5 SWAP2 SWAP4 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x1496 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x173F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1AAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x1AD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x1AD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x1D77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x1D7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x1D83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x526 SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x1DA0 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 CALLDATALOAD PUSH2 0x1EE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1EEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1F5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1F78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x1F8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD AND PUSH2 0x1FB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x846 PUSH1 0x4 CALLDATALOAD PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x213F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x21CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x224D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x44 CALLDATALOAD AND PUSH2 0x2253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x4 CALLDATALOAD PUSH2 0x2279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH2 0x2299 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0x2322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x2331 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2337 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2420 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0x25A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x25B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x261E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x290F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x296A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2A93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x2D44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x2D61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH2 0x2D8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD ISZERO ISZERO PUSH2 0x2DE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB10 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP11 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBD6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC09 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBF1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC36 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x3CD SWAP5 DUP3 CALLDATALOAD SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD ISZERO ISZERO SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x3004 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0x31D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x31DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x320A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 0x4FA SWAP5 DUP1 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 SWAP1 SWAP2 AND SWAP6 PUSH1 0x44 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x84 SWAP5 SWAP4 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x3284 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x3416 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x341C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x3464 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 LT PUSH2 0xDF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT PUSH2 0xE0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xE1C JUMPI PUSH1 0x15 SLOAD SWAP2 POP JUMPDEST PUSH1 0x17 PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x3C MUL TIMESTAMP ADD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP10 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xED4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF39 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF1A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 SWAP1 DUP2 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP6 ADD DUP4 SWAP1 SUB SWAP1 SWAP3 KECCAK256 DUP8 MSTORE DUP7 DUP2 ADD DUP15 SWAP1 MSTORE SWAP6 DUP4 ADD DUP13 SWAP1 MSTORE DUP8 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP1 DUP12 SSTORE PUSH1 0x0 SWAP11 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 DUP10 MLOAD PUSH1 0xA SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP9 DUP9 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD SWAP6 DUP11 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP7 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR PUSH2 0xFF00 NOT AND SWAP5 ISZERO ISZERO DUP4 MUL SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x5 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE DUP7 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE POP PUSH2 0x120 DUP6 ADD MLOAD DUP1 MLOAD SWAP2 SWAP5 PUSH2 0x1033 SWAP5 POP PUSH1 0x8 DUP7 ADD SWAP4 POP ADD SWAP1 PUSH2 0x37A6 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1050 SWAP2 PUSH1 0x9 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x37A6 JUMP JUMPDEST POP POP PUSH1 0x17 DUP1 SLOAD PUSH2 0x1083 SWAP4 POP PUSH1 0x0 NOT DUP2 ADD SWAP3 POP DUP3 SWAP1 DUP2 LT PUSH2 0x106C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x35B5 JUMP JUMPDEST PUSH32 0x4C6647C4A4058C1A0BCD513FE2522706466700A104B82D4487D888F17CE5BE13 PUSH1 0x1 PUSH1 0x17 DUP1 SLOAD SWAP1 POP SUB DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1176 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x115E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x17 SLOAD PUSH1 0x0 NOT ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD DUP6 LT ISZERO ISZERO ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD DUP7 SUB DUP2 ISZERO ISZERO PUSH2 0x11EF JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x121B JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1214 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x127D JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 SWAP1 SUB PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x12A2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1342 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1317 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1325 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1367 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x1373 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x13A6 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x142C JUMPI INVALID JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xE92C9D8E3252D3E4CD9D77FFCA1D70A1EEF8E8B477120BA7F6034EA494624A93 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14A7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x14CF JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D5 JUMPI POP PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH13 0x1000000000000000000000000 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP3 DUP4 MUL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x34 DUP4 ADD DUP5 SWAP1 MSTORE DUP7 MLOAD DUP8 SWAP4 PUSH1 0x54 ADD SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x153C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x15A1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1582 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x7 DUP6 ADD SLOAD EQ SWAP3 POP POP POP JUMPDEST DUP1 ISZERO PUSH2 0x15E7 JUMPI POP PUSH1 0x14 SLOAD DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x15F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x16 SLOAD DUP2 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x16A6 JUMPI PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP3 DUP6 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1643 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x162B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1670 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP ISZERO ISZERO PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x16CD DUP4 PUSH2 0x362D JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH32 0x748F0810C68633063BB13F3C71E10CD1889925B3721D6E567114D0632574A396 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1857 JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x177C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x184C JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17A7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x184C JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1805 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x187C SWAP1 DUP6 PUSH2 0x36FF JUMP JUMPDEST LT ISZERO PUSH2 0x1887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0x194B JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x196E SWAP1 DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x199D SWAP1 DUP7 PUSH2 0x371A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP11 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x19DB SWAP1 DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SWAP1 TIMESTAMP GT ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1A1E JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP13 SWAP1 SUB SWAP1 SSTORE SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP2 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP4 MLOAD DUP10 DUP2 MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP6 GT ISZERO PUSH2 0x1AF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP7 LT PUSH2 0x1AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x1B0D JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x1 PUSH1 0x4 SLOAD DUP6 MUL PUSH1 0x3 SLOAD ADD SUB SWAP3 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 POP DUP5 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1BA5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1D66 JUMPI PUSH2 0x1C0B PUSH2 0x1C03 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1BE8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x3730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C23 PUSH2 0x1C1B DUP4 PUSH1 0x64 PUSH2 0x3730 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x375B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1C53 SWAP1 DUP4 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6B DUP3 PUSH2 0x1C66 PUSH1 0x12 SLOAD PUSH1 0x64 PUSH2 0x375B JUMP JUMPDEST PUSH2 0x375B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBE PUSH1 0x10 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1C83 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP13 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 PUSH2 0x371A JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1CD1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP13 AND DUP1 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP8 DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1D31 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B6A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1DB4 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH2 0x1DC7 SWAP1 PUSH1 0x1A SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x37A6 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1DDB SWAP1 PUSH1 0x1B SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x37A6 JUMP JUMPDEST POP PUSH32 0xD131AB1E6F279DEEA74E13A18477E13E2107DEB6DC8AE955648948BE5841FB46 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E40 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E28 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E6D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EA0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E88 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ECD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x12A2 JUMPI INVALID JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F02 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x79BA5097 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1FA7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1FB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2017 SWAP1 DUP4 PUSH2 0x36FF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE ISZERO ISZERO PUSH2 0x2081 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x207B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x210E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x2121 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2153 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xF2FDE38B DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x21DE JUMPI INVALID JUMPDEST PUSH1 0x14 DUP4 SWAP1 SSTORE PUSH1 0x15 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xE7A31ACB9EFC5512CC1896266CBC06335CA5E661547B177002B7BB5D8535871E SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x228D JUMPI INVALID JUMPDEST PUSH2 0x2296 DUP2 PUSH2 0x362D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ ISZERO PUSH2 0x230E JUMPI PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xB SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x234E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x2376 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x23A8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xD DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP2 LT PUSH2 0x23E0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x241C SWAP1 DUP3 PUSH2 0x3824 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x2436 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x1 PUSH1 0x4 SLOAD DUP5 MUL PUSH1 0x3 SLOAD ADD SUB SWAP2 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x248C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x25A1 JUMPI PUSH2 0x24CD PUSH2 0x1C03 CALLER DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x24DD PUSH2 0x1C1B DUP3 PUSH1 0x64 PUSH2 0x3730 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x250D SWAP1 DUP3 PUSH2 0x3772 JUMP JUMPDEST SWAP1 POP PUSH2 0x2520 DUP2 PUSH2 0x1C66 PUSH1 0x12 SLOAD PUSH1 0x64 PUSH2 0x375B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2551 SWAP1 DUP3 PUSH2 0x371A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP8 DUP4 MSTORE PUSH1 0x11 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x25CA JUMPI INVALID JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xFABD8204D72DD7F991EA45882EC0E28A9F5711A6E8333DD6CFE69D9DBC08D184 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP5 GT ISZERO PUSH2 0x2634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP6 LT PUSH2 0x2640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x2651 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x0 DUP4 GT PUSH2 0x2661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH2 0x1F54 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x268C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x2904 JUMPI PUSH1 0xC SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF7888AEC SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x26DB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP8 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2745 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x275B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 ISZERO ISZERO PUSH2 0x282F JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x2E1A7D4D SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD DUP6 SWAP5 POP SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x2805 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH2 0x2904 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9E281A98 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2853 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD DUP1 SLOAD DUP6 SWAP5 POP SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x28DE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1342 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1317 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2A88 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x298A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x2A7C JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x29CA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x2A10 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x2A36 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2A72 SWAP1 DUP3 PUSH2 0x3824 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x2A83 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH2 0x296F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND ISZERO ISZERO PUSH2 0x2AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x2B7B JUMPI TIMESTAMP PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2AD0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2B70 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2AFB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0x2B70 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2B41 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2AB6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x2B97 SWAP1 DUP6 PUSH2 0x36FF JUMP JUMPDEST LT ISZERO PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2BCB JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO PUSH2 0x2C36 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2C50 SWAP1 DUP7 PUSH2 0x36FF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2C7C SWAP1 DUP7 PUSH2 0x371A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 POP TIMESTAMP GT ISZERO PUSH2 0x2CC0 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP SUB DUP2 ISZERO ISZERO PUSH2 0x2CB9 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP12 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 AND DUP1 DUP6 MSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2D7B JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2D85 JUMPI INVALID JUMPDEST PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2D9E JUMPI INVALID JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND ADDRESS SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2DF4 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFAAD6EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xFAAD6EB5 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x17 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x2E82 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x5 DUP9 ADD SLOAD PUSH1 0x6 DUP10 ADD SLOAD PUSH1 0x7 DUP11 ADD SLOAD PUSH1 0x8 DUP12 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 SWAP13 DUP4 AND ISZERO DUP14 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP10 SWAP1 SWAP10 DIV PUSH1 0x1F DUP2 ADD DUP16 SWAP1 DIV DUP16 MUL DUP3 ADD DUP16 ADD SWAP1 SWAP10 MSTORE DUP9 DUP2 MSTORE SWAP11 SWAP14 POP PUSH1 0xFF DUP1 DUP11 AND SWAP14 SWAP11 SWAP1 SWAP10 DIV SWAP1 SWAP9 AND SWAP11 SWAP6 SWAP10 SWAP5 SWAP9 SWAP4 SWAP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP7 SWAP2 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2F6A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F3F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F6A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x9 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP5 SWAP6 SWAP5 SWAP4 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2FFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FCF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FDD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP12 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 LT PUSH2 0x3023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x17 DUP1 SLOAD DUP8 SWAP1 DUP2 LT PUSH2 0x3031 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD SWAP2 POP DUP2 PUSH1 0x0 ADD SLOAD TIMESTAMP GT ISZERO ISZERO ISZERO PUSH2 0x3054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP11 DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP5 MSTORE SWAP4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3085 SWAP2 SWAP1 PUSH2 0x36FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x30B8 SWAP1 DUP3 PUSH2 0x371A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE DUP5 ISZERO PUSH2 0x30F1 JUMPI PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST PUSH32 0xC34F869B7FF431B034B7B9AEA9822DAC189A685E0B015C7D1BE3ADD3F89128E8 DUP7 DUP7 CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3186 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x316E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x31B3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x2 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x3221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x17 DUP7 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x329F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0xA SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x32C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x17 DUP7 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x32D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x6 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x32F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3356 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3337 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x33BB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x339C JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x17 DUP1 SLOAD SWAP2 SWAP5 POP SWAP3 POP DUP9 SWAP2 POP DUP2 LT PUSH2 0x33F8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0xA SWAP1 SWAP3 MUL ADD ADD SLOAD EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x3430 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x3442 JUMPI INVALID JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x3494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x34C2 SWAP1 DUP3 PUSH2 0x36FF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE ISZERO ISZERO PUSH2 0x3523 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x351D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x241C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x2 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD SSTORE MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x241C JUMPI DUP2 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x364A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x36F6 JUMPI TIMESTAMP PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3672 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO ISZERO PUSH2 0x3690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x36A2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36BF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x36F0 SWAP1 DUP3 PUSH2 0x3848 JUMP JUMPDEST POP PUSH2 0x36FA JUMP JUMPDEST PUSH1 0x1 ADD JUMPDEST PUSH2 0x3630 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x370C JUMPI INVALID JUMPDEST POP POP DUP1 DUP3 SUB DUP1 JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x3729 JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x3743 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x3713 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x3753 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x3729 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x3769 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x3785 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x3713 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x3795 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x379D JUMPI INVALID JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0x3769 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x37E7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3814 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3814 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3814 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37F9 JUMP JUMPDEST POP PUSH2 0x3820 SWAP3 SWAP2 POP PUSH2 0x3874 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x210E JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x210E SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x3874 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x210E JUMPI PUSH1 0x2 MUL DUP2 PUSH1 0x2 MUL DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x210E SWAP2 SWAP1 PUSH2 0x388E JUMP JUMPDEST PUSH2 0x1373 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3820 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x387A JUMP JUMPDEST PUSH2 0x1373 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3820 JUMPI PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x3894 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 EXP 0x4b 0xbc 0xc9 LOG1 PUSH5 0xB1D0CDF58C DELEGATECALL 0x26 0x5d PUSH12 0x8D12D7DED188EC6A5415C548 EXTCODECOPY 0x2e CALL CALL PUSH3 0x2900 ",
            "sourceMap": "28246:2107:0:-;;;6583:1;6560:24;;6672:7;6648:31;;13463:6;13438:31;;18282:13;18264:31;;28310:10;28282:38;;28369:1;28346:24;;28604:824;8:9:-1;5:2;;;30:1;27;20:12;5:2;28604:824:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5338:5;:18;;-1:-1:-1;;;;;;5338:18:0;5346:10;5338:18;;;28604:824;;;28706:12;;28604:824;;;;;;;;;;;;;28706:12;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;28725:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;28748:5:0;:14;;;28769:6;:16;;;28827:8;;28809:13;;28823:2;:12;;;;28809:26;-1:-1:-1;28794:41:0;;;-1:-1:-1;;;;;28876:19:0;;;;;:8;:19;;;;;;;;:34;;;28926:45;;;;;;28876:19;;28926:45;;;;;;;;;;;-1:-1:-1;;;;;28980:22:0;;;;;;:11;:22;;;;;;;;:29;;-1:-1:-1;;28980:29:0;29005:4;28980:29;;;;;;29016:6;27:10:-1;;23:18;;;45:23;;;29016:22:0;;;;-1:-1:-1;;;;;;29016:22:0;;;;;29087:19;;;;;;;;;;29047:16;:27;;;;;:30;;;;;;;;;:60;;;;29270:12;29243:83;;29261:28;;29284:4;29261:8;;;;:28;:::i;:::-;29291:4;29297:28;29306:12;;29320:4;29297:8;;;:28;;;:::i;:::-;29243:17;;;;:83;:::i;:::-;-1:-1:-1;;29351:6:0;27:10:-1;;39:1;23:18;;45:23;;29351::0;;;;-1:-1:-1;;;;;;29351:23:0;;;29407:13;29371:1;29381:23;;:11;29351:23;29381;-1:-1:-1;;29407:15:0;29381:23;:41;-1:-1:-1;28246:2107:0;;-1:-1:-1;;28246:2107:0;1286:276;1349:7;;1373:6;;1369:47;;;1403:1;1396:8;;;;1369:47;-1:-1:-1;1448:5:0;;;1452:1;1448;:5;1471;;;;;;;;:10;1464:18;;;;1505:5;1501:9;;;-1:-1:-1;1501:9:0;1286:276;;;;;;:::o;20790:400::-;5496:5;;-1:-1:-1;;;;;5496:5:0;5482:10;:19;5475:27;;;;20955:13;:30;;;20996:22;:48;;;21055:17;:38;;;21111:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20790:400;;;:::o;28246:2107::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28246:2107:0;;;-1:-1:-1;28246:2107:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_desc\",\"type\":\"string\"},{\"name\":\"_fullDescHash\",\"type\":\"string\"},{\"name\":\"_transactionByteCode\",\"type\":\"bytes\"},{\"name\":\"_debatingPeriodDuration\",\"type\":\"uint256\"}],\"name\":\"addProposal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPeriod\",\"outputs\":[{\"name\":\"N\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"setPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debatingPeriodDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"},{\"name\":\"_transactionByteCode\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propID\",\"type\":\"uint256\"},{\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"PayDividends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ChangeOverPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setTokenInformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requisiteMajority\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMultiplier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ActiveProposals\",\"outputs\":[{\"name\":\"propID\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minimumQuorum\",\"type\":\"uint256\"},{\"name\":\"_debatingPeriodDuration\",\"type\":\"uint256\"},{\"name\":\"_requisiteMajority\",\"type\":\"uint256\"}],\"name\":\"changeVotingRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnersCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AlreadyReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"}],\"name\":\"delActiveProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEX\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DelToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PayDividends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setDEXContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"TakeProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"trim\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownersbal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minBalance\",\"type\":\"uint256\"}],\"name\":\"setMinBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setOwnerToSelf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_agent\",\"type\":\"address\"},{\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"updateAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Proposals\",\"outputs\":[{\"name\":\"endTimeOfVoting\",\"type\":\"uint256\"},{\"name\":\"executed\",\"type\":\"bool\"},{\"name\":\"proposalPassed\",\"type\":\"bool\"},{\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"name\":\"votesSupport\",\"type\":\"uint256\"},{\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"fullDescHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"},{\"name\":\"_supportsProposal\",\"type\":\"bool\"},{\"name\":\"_justificationText\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AddToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_proposalID\",\"type\":\"uint256\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_transactionByteCode\",\"type\":\"bytes\"}],\"name\":\"checkProposalCode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_period\",\"type\":\"uint256\"},{\"name\":\"_dexowner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"UpdatedTokenInformation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"UpdatedPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"fullDescHash\",\"type\":\"string\"}],\"name\":\"ProposalAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"position\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"votesSupport\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ProposalTallied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newMinimumQuorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newdebatingPeriodDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newRequisiteMajority\",\"type\":\"uint256\"}],\"name\":\"ChangeOfRules\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"setDEXContractEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept transferOwnership.\"},\"acceptOwnership(address)\":{\"details\":\"Accept transferOwnership on a this (DAO) contract\"},\"addProposal(address,uint256,string,string,bytes,uint256)\":{\"params\":{\"_amount\":\"amount of ether to send, in wei\",\"_desc\":\"Description of job\",\"_fullDescHash\":\"Hash of full description of job\",\"_recipient\":\"who to send the ether to\",\"_transactionByteCode\":\"bytecode of transaction\"}},\"allowance(address,address)\":{\"details\":\"Token allowance\",\"params\":{\"_owner\":\"holder address\",\"_spender\":\"spender address\"},\"return\":\"remain amount\"},\"approve(address,uint256)\":{\"details\":\"Approve transfer\",\"params\":{\"_spender\":\"holder address\",\"_value\":\"tokens amount\"},\"return\":\"result  \"},\"balanceOf(address)\":{\"details\":\"Tokens balance\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"balanceOf(address,uint256)\":{\"details\":\"Balance of tokens on date\",\"params\":{\"_owner\":\"holder address\"},\"return\":\"balance amount \"},\"changeVotingRules(uint256,uint256,uint256)\":{\"params\":{\"_debatingPeriodDuration\":\"the minimum amount of delay between when a proposal is made and when it can be executed\",\"_minimumQuorum\":\"how many members must vote on a proposal for it to be executed\",\"_requisiteMajority\":\"the proposal needs to have 50% plus this number\"}},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"params\":{\"_amount\":\"amount of ether to send\",\"_proposalID\":\"number of the proposal to query\",\"_recipient\":\"who to send the ether to\",\"_transactionByteCode\":\"bytecode of transaction\"}},\"executeProposal(uint256,bytes)\":{\"params\":{\"_proposalID\":\"proposal number\",\"_transactionByteCode\":\"optional: if the transaction contained a bytecode, you need to send it\"}},\"totalSupply()\":{\"details\":\"Total Supply\",\"return\":\"totalSupply_ \"},\"transfer(address,uint256)\":{\"details\":\"Tranfer tokens to address\",\"params\":{\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"source address\",\"_to\":\"dest address\",\"_value\":\"tokens amount\"},\"return\":\"transfer result\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"transferOwnership(address,address)\":{\"details\":\"Allows the DAO to transfer control of the _contract to a _newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"trim(uint256,uint256)\":{\"details\":\"Trim owners with zero balance\"},\"vote(uint256,bool,string)\":{\"params\":{\"_justificationText\":\"optional justification text\",\"_proposalID\":\"number of proposal\",\"_supportsProposal\":\"either in favor or against it\"}}},\"title\":\"SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\"},\"userdoc\":{\"methods\":{\"addProposal(address,uint256,string,string,bytes,uint256)\":{\"notice\":\"Add Proposal      * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code. \"},\"changeVotingRules(uint256,uint256,uint256)\":{\"notice\":\"Change voting rules      * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours, have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed \"},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"notice\":\"Check if a proposal code matches \"},\"executeProposal(uint256,bytes)\":{\"notice\":\"Finish vote      * Count the votes proposal #`_proposalID` and execute it if approved \"},\"setMinBalance(uint256)\":{\"notice\":\"Set minimum balance for adding proposal\"},\"setOwnerToSelf()\":{\"notice\":\"set owner to self   \"},\"setPeriod(uint256)\":{\"notice\":\"Owner can change period   \"},\"setTokenInformation(string,string)\":{\"notice\":\"Owner can update token information here.   * It is often useful to conceal the actual token association, until the token operations, like central issuance or reissuance have been completed.   * This function allows the token owner to rename the token after the operations have been completed and then point the audience to use the token contract.\"},\"vote(uint256,bool,string)\":{\"notice\":\"Log a vote for a proposal      * Vote `supportsProposal? in support of : against` proposal #`proposalID` \"}}}},\"settings\":{\"compilationTarget\":{\"source code\":\"SDAD\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      },
      "SDADI": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": ""
      },
      "SafeMath": {
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820a42c2b4272d541bc5cf775dd8b6d7c46b756a62a51b92600fb9e9001a7fb2c5c0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LOG4 0x2c 0x2b TIMESTAMP PUSH19 0xD541BC5CF775DD8B6D7C46B756A62A51B92600 CREATE2 SWAP15 SWAP1 ADD 0xa7 CREATE2 0x2c 0x5c STOP 0x29 ",
            "sourceMap": "193:1793:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;193:1793:0;;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source code\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source code\":{\"content\":\"/**\\n\\n *Submitted for verification at Etherscan.io on 2019-02-21\\n\\n*/\\n\\n\\n\\npragma solidity ^0.4.25;\\n\\n\\n\\n/**\\n\\n * @title SafeMath\\n\\n * @dev Math operations with safety checks that throw on error\\n\\n */\\n\\ncontract SafeMath {\\n\\n\\n\\n    /**\\n\\n    * @dev Subtracts two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        assert(y <= x);\\n\\n        uint256 z = x - y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Adds two numbers, reverts on overflow.\\n\\n    */\\n\\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x + y;\\n\\n        assert(z >= x);\\n\\n        return z;\\n\\n    }\\n\\n\\t\\n\\n\\t/**\\n\\n    * @dev Integer division of two numbers, reverts on division by zero.\\n\\n    */\\n\\n    function safeDiv(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x / y;\\n\\n        return z;\\n\\n    }\\n\\n    \\n\\n    /**\\n\\n    * @dev Multiplies two numbers, reverts on overflow.\\n\\n    */\\t\\n\\n    function safeMul(uint256 x, uint256 y) internal pure returns (uint256) {    \\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n    \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the integer percentage of the number.\\n\\n    */\\n\\n    function safePerc(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        if (x == 0) {\\n\\n            return 0;\\n\\n        }\\n\\n        \\n\\n        uint256 z = x * y;\\n\\n        assert(z / x == y);    \\n\\n        z = z / 10000; // percent to hundredths\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the minimum value of two numbers.\\n\\n    */\\t\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x <= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Returns the maximum value of two numbers.\\n\\n    */\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\\n\\n        uint256 z = x >= y ? x : y;\\n\\n        return z;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title DAppDEXI - Interface \\n\\n */\\n\\ninterface DAppDEXI {\\n\\n\\n\\n    function updateAgent(address _agent, bool _status) external;\\n\\n\\n\\n    function setAccountType(address user_, uint256 type_) external;\\n\\n    function getAccountType(address user_) external view returns(uint256);\\n\\n    function setFeeType(uint256 type_ , uint256 feeMake_, uint256 feeTake_) external;\\n\\n    function getFeeMake(uint256 type_ ) external view returns(uint256);\\n\\n    function getFeeTake(uint256 type_ ) external view returns(uint256);\\n\\n    function changeFeeAccount(address feeAccount_) external;\\n\\n    \\n\\n    function setWhitelistTokens(address token) external;\\n\\n    function setWhitelistTokens(address token, bool active, uint256 timestamp, bytes32 typeERC) external;\\n\\n    function depositToken(address token, uint amount) external;\\n\\n    function tokenFallback(address owner, uint256 amount, bytes data) external returns (bool success);\\n\\n\\n\\n    function withdraw(uint amount) external;\\n\\n    function withdrawToken(address token, uint amount) external;\\n\\n\\n\\n    function balanceOf(address token, address user) external view returns (uint);\\n\\n\\n\\n    function order(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce) external;\\n\\n    function trade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) external;    \\n\\n    function cancelOrder(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool);\\n\\n    function availableVolume(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s) external view returns(uint);\\n\\n    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title ERC20 interface\\n\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n\\n */\\n\\ninterface ERC20I {\\n\\n\\n\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n  function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n  \\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Ownable contract - base contract with an owner\\n\\n */\\n\\ncontract Ownable {\\n\\n  \\n\\n  address public owner;\\n\\n  address public newOwner;\\n\\n\\n\\n  event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n  \\n\\n  /**\\n\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n\\n   * account.\\n\\n   */\\n\\n  constructor() public {\\n\\n    owner = msg.sender;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Throws if called by any account other than the owner.\\n\\n   */\\n\\n  modifier onlyOwner() {\\n\\n    assert(msg.sender == owner);\\n\\n    _;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n\\n   * @param _newOwner The address to transfer ownership to.\\n\\n   */\\n\\n  function transferOwnership(address _newOwner) public onlyOwner {\\n\\n    assert(_newOwner != address(0));      \\n\\n    newOwner = _newOwner;\\n\\n  }\\n\\n\\n\\n  /**\\n\\n   * @dev Accept transferOwnership.\\n\\n   */\\n\\n  function acceptOwnership() public {\\n\\n    if (msg.sender == newOwner) {\\n\\n      emit OwnershipTransferred(owner, newOwner);\\n\\n      owner = newOwner;\\n\\n    }\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDADI - Interface\\n\\n */\\n\\ninterface SDADI  {\\t\\n\\n  function AddToken(address token) external;\\n\\n  function DelToken(address token) external;\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Standard ERC20 token + balance on date\\n\\n * @dev Implementation of the basic standard token.\\n\\n * @dev https://github.com/ethereum/EIPs/issues/20 \\n\\n */\\n\\ncontract ERC20Base is ERC20I, SafeMath {\\n\\n\\t\\n\\n  uint256 totalSupply_;\\n\\n  mapping (address => uint256) balances;\\n\\n  mapping (address => mapping (address => uint256)) internal allowed;\\n\\n\\n\\n  uint256 public start = 0;               // Must be equal to the date of issue tokens\\n\\n  uint256 public period = 30 days;        // By default, the dividend accrual period is 30 days\\n\\n  mapping (address => mapping (uint256 => int256)) public ChangeOverPeriod;\\n\\n\\n\\n  address[] public owners;\\n\\n  mapping (address => bool) public ownersIndex;\\n\\n\\n\\n  struct _Prop {\\n\\n    uint propID;          // proposal ID in DAO    \\n\\n    uint endTime;         // end time of voting\\n\\n  }\\n\\n  \\n\\n  _Prop[] public ActiveProposals;  // contains active proposals\\n\\n\\n\\n  // contains voted Tokens on proposals\\n\\n  mapping (uint => mapping (address => uint)) public voted;\\n\\n\\n\\n  /** \\n\\n   * @dev Total Supply\\n\\n   * @return totalSupply_ \\n\\n   */  \\n\\n  function totalSupply() public view returns (uint256) {\\n\\n    return totalSupply_;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Tokens balance\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner) public view returns (uint256) {\\n\\n    return balances[_owner];\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Balance of tokens on date\\n\\n   * @param _owner holder address\\n\\n   * @return balance amount \\n\\n   */\\n\\n  function balanceOf(address _owner, uint _date) public view returns (uint256) {\\n\\n    require(_date >= start);\\n\\n    uint256 N1 = (_date - start) / period + 1;    \\n\\n\\n\\n    uint256 N2 = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N2 = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    require(N2 >= N1);\\n\\n\\n\\n    int256 B = int256(balances[_owner]);\\n\\n\\n\\n    while (N2 > N1) {\\n\\n      B = B - ChangeOverPeriod[_owner][N2];\\n\\n      N2--;\\n\\n    }\\n\\n\\n\\n    require(B >= 0);\\n\\n    return uint256(B);\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Tranfer tokens to address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][msg.sender]) {\\n\\n          lock = voted[ActiveProposals[k].propID][msg.sender];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n\\n\\n    require(safeSub(balances[msg.sender], lock) >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n\\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[msg.sender][N] = ChangeOverPeriod[msg.sender][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n   \\n\\n    emit Transfer(msg.sender, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Token allowance\\n\\n   * @param _owner holder address\\n\\n   * @param _spender spender address\\n\\n   * @return remain amount\\n\\n   */\\n\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\n\\n    return allowed[_owner][_spender];\\n\\n  }\\n\\n\\n\\n  /**    \\n\\n   * @dev Transfer tokens from one address to another\\n\\n   * @param _from source address\\n\\n   * @param _to dest address\\n\\n   * @param _value tokens amount\\n\\n   * @return transfer result\\n\\n   */\\n\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n\\n    require(_to != address(0));\\n\\n\\n\\n    uint lock = 0;\\n\\n    for (uint k = 0; k < ActiveProposals.length; k++) {\\n\\n      if (ActiveProposals[k].endTime > now) {\\n\\n        if (lock < voted[ActiveProposals[k].propID][_from]) {\\n\\n          lock = voted[ActiveProposals[k].propID][_from];\\n\\n        }\\n\\n      }\\n\\n    }\\n\\n    \\n\\n    require(safeSub(balances[_from], lock) >= _value);\\n\\n    \\n\\n    require(allowed[_from][msg.sender] >= _value);\\n\\n\\n\\n    if (ownersIndex[_to] == false && _value > 0) {\\n\\n      ownersIndex[_to] = true;\\n\\n      owners.push(_to);\\n\\n    }\\n\\n    \\n\\n    balances[_from] = safeSub(balances[_from], _value);\\n\\n    balances[_to] = safeAdd(balances[_to], _value);\\n\\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\\n\\n    \\n\\n    uint256 N = 1;\\n\\n    if (block.timestamp > start) {\\n\\n      N = (block.timestamp - start) / period + 1;\\n\\n    }\\n\\n\\n\\n    ChangeOverPeriod[_from][N] = ChangeOverPeriod[_from][N] - int256(_value);\\n\\n    ChangeOverPeriod[_to][N] = ChangeOverPeriod[_to][N] + int256(_value);\\n\\n\\n\\n    emit Transfer(_from, _to, _value);\\n\\n    return true;\\n\\n  }\\n\\n  \\n\\n  /** \\n\\n   * @dev Approve transfer\\n\\n   * @param _spender holder address\\n\\n   * @param _value tokens amount\\n\\n   * @return result  \\n\\n   */\\n\\n  function approve(address _spender, uint256 _value) public returns (bool success) {\\n\\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n    allowed[msg.sender][_spender] = _value;\\n\\n    \\n\\n    emit Approval(msg.sender, _spender, _value);\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  /** \\n\\n   * @dev Trim owners with zero balance\\n\\n   */\\n\\n  function trim(uint offset, uint limit) external returns (bool) { \\n\\n    uint k = offset;\\n\\n    uint ln = limit;\\n\\n    while (k < ln) {\\n\\n      if (balances[owners[k]] == 0) {\\n\\n        ownersIndex[owners[k]] =  false;\\n\\n        owners[k] = owners[owners.length-1];\\n\\n        owners.length = owners.length-1;\\n\\n        ln--;\\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }\\n\\n    return true;\\n\\n  }\\n\\n\\n\\n  // current number of shareholders (owners)\\n\\n  function getOwnersCount() external view returns (uint256 count) {\\n\\n    return owners.length;\\n\\n  }\\n\\n\\n\\n  // current period\\n\\n  function getCurrentPeriod() external view returns (uint256 N) {\\n\\n    if (block.timestamp > start) {\\n\\n      return (block.timestamp - start) / period;\\n\\n    } else {\\n\\n      return 0;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function addProposal(uint _propID, uint _endTime) internal {\\n\\n    ActiveProposals.push(_Prop({\\n\\n      propID: _propID,\\n\\n      endTime: _endTime\\n\\n    }));\\n\\n  }\\n\\n\\n\\n  function delProposal(uint _propID) internal {\\n\\n    uint k = 0;\\n\\n    while (k < ActiveProposals.length){\\n\\n      if (ActiveProposals[k].propID == _propID) {\\n\\n        require(ActiveProposals[k].endTime < now);\\n\\n        ActiveProposals[k] = ActiveProposals[ActiveProposals.length-1];\\n\\n        ActiveProposals.length = ActiveProposals.length-1;   \\n\\n      } else {\\n\\n        k++;\\n\\n      }\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function getVoted(uint _propID, address _voter) external view returns (uint) {\\n\\n    return voted[_propID][_voter];\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Dividend Distribution Contract for DAO\\n\\n */\\n\\ncontract Dividends is ERC20Base, Ownable {\\n\\n\\n\\n  DAppDEXI public DEX;\\n\\n\\n\\n  address[] public tokens;\\n\\n  mapping (address => uint) public tokensIndex;\\n\\n  \\n\\n  mapping (uint => mapping (address => uint)) public dividends;\\n\\n  mapping (address => mapping (address => uint)) public ownersbal;  \\n\\n  mapping (uint => mapping (address => mapping (address => bool))) public AlreadyReceived;\\n\\n\\n\\n  uint public multiplier = 100000; // precision to ten thousandth percent (0.001%)\\n\\n\\n\\n  event Payment(address indexed sender, uint amount);\\n\\n  event setDEXContractEvent(address dex);\\n\\n   \\n\\n  function AddToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    tokens.push(token);\\n\\n    tokensIndex[token] = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  function DelToken(address token) public {\\n\\n    require(msg.sender == address(DEX));\\n\\n    require(tokens[tokensIndex[token]] != 0);    \\n\\n    tokens[tokensIndex[token]] = tokens[tokens.length-1];\\n\\n    tokens.length = tokens.length-1;\\n\\n  }\\n\\n\\n\\n  // Take profit for dividends from DEX contract\\n\\n  function TakeProfit(uint offset, uint limit) external {\\n\\n    require (limit <= tokens.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period;\\n\\n    \\n\\n    require (N > 0);\\n\\n    \\n\\n    for (uint k = offset; k < limit; k++) {\\n\\n      if(dividends[N][tokens[k]] == 0 ) {\\n\\n          uint amount = DEX.balanceOf(tokens[k], address(this));\\n\\n          if (k == 0) {\\n\\n            DEX.withdraw(amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          } else {\\n\\n            DEX.withdrawToken(tokens[k], amount);\\n\\n            dividends[N][tokens[k]] = amount;\\n\\n          }\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  function () public payable {\\n\\n      emit Payment(msg.sender, msg.value);\\n\\n  }\\n\\n  \\n\\n  // PayDividends to owners\\n\\n  function PayDividends(address token, uint offset, uint limit) external {\\n\\n    //require (address(this).balance > 0);\\n\\n    require (limit <= owners.length);\\n\\n    require (offset < limit);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n    \\n\\n    require(dividends[N][token] > 0);\\n\\n\\n\\n    uint share = 0;\\n\\n    uint k = 0;\\n\\n    for (k = offset; k < limit; k++) {\\n\\n      if (!AlreadyReceived[N][token][owners[k]]) {\\n\\n        share = safeMul(balanceOf(owners[k], date), multiplier);\\n\\n        share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n        share = safePerc(dividends[N][token], share);\\n\\n        share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n        ownersbal[owners[k]][token] = safeAdd(ownersbal[owners[k]][token], share);\\n\\n        AlreadyReceived[N][token][owners[k]] = true;\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // PayDividends individuals to msg.sender\\n\\n  function PayDividends(address token) external {\\n\\n    //require (address(this).balance > 0);\\n\\n\\n\\n    uint N = (block.timestamp - start) / period; // current - 1\\n\\n    uint date = start + N * period - 1;\\n\\n\\n\\n    require(dividends[N][token] > 0);\\n\\n    \\n\\n    if (!AlreadyReceived[N][token][msg.sender]) {      \\n\\n      uint share = safeMul(balanceOf(msg.sender, date), multiplier);\\n\\n      share = safeDiv(safeMul(share, 100), totalSupply_); // calc the percentage of the totalSupply_ (from 100%)\\n\\n\\n\\n      share = safePerc(dividends[N][token], share);\\n\\n      share = safeDiv(share, safeDiv(multiplier, 100));  // safeDiv(multiplier, 100) - convert to hundredths\\n\\n        \\n\\n      ownersbal[msg.sender][token] = safeAdd(ownersbal[msg.sender][token], share);\\n\\n      AlreadyReceived[N][token][msg.sender] = true;\\n\\n    }\\n\\n  }\\n\\n\\n\\n  // withdraw dividends\\n\\n  function withdraw(address token, uint _value) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      msg.sender.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(msg.sender, _value);\\n\\n    }\\n\\n  }\\n\\n  \\n\\n  // withdraw dividends to address\\n\\n  function withdraw(address token, uint _value, address _receiver) external {    \\n\\n    require(ownersbal[msg.sender][token] >= _value);\\n\\n    ownersbal[msg.sender][token] = safeSub(ownersbal[msg.sender][token], _value);\\n\\n    if (token == address(0)) {\\n\\n      _receiver.transfer(_value);\\n\\n    } else {\\n\\n      ERC20I(token).transfer(_receiver, _value);\\n\\n    }    \\n\\n  }\\n\\n\\n\\n  function setMultiplier(uint _value) external onlyOwner {\\n\\n    require(_value > 0);\\n\\n    multiplier = _value;\\n\\n  }\\n\\n  \\n\\n  function getMultiplier() external view returns (uint ) {\\n\\n    return multiplier;\\n\\n  }  \\n\\n\\n\\n  // link to DEX contract\\n\\n  function setDEXContract(address _contract) external onlyOwner {\\n\\n    DEX = DAppDEXI(_contract);\\n\\n    emit setDEXContractEvent(_contract);\\n\\n  }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title External interface for DAO\\n\\n */\\n\\ninterface CommonI {\\n\\n    function transferOwnership(address _newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function updateAgent(address _agent, bool _state) external;    \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Decentralized Autonomous Organization\\n\\n */\\n\\ncontract DAO is Dividends {\\n\\n\\n\\n    //minimum balance for adding proposal - default 10000 tokens\\n\\n    uint minBalance = 1000000000000; \\n\\n    // minimum quorum - number of votes must be more than minimum quorum\\n\\n    uint public minimumQuorum;\\n\\n    // debating period duration\\n\\n    uint public debatingPeriodDuration;\\n\\n    // requisite majority of votes (by the system a simple majority)\\n\\n    uint public requisiteMajority;\\n\\n\\n\\n    struct _Proposal {\\n\\n        // proposal may execute only after voting ended\\n\\n        uint endTimeOfVoting;\\n\\n        // if executed = true\\n\\n        bool executed;\\n\\n        // if passed = true\\n\\n        bool proposalPassed;\\n\\n        // number of votes already voted\\n\\n        uint numberOfVotes;\\n\\n        // in support of votes\\n\\n        uint votesSupport;\\n\\n        // against votes\\n\\n        uint votesAgainst;\\n\\n        \\n\\n        // the address where the `amount` will go to if the proposal is accepted\\n\\n        address recipient;\\n\\n        // the amount to transfer to `recipient` if the proposal is accepted.\\n\\n        uint amount;\\n\\n        // keccak256(abi.encodePacked(recipient, amount, transactionByteCode));\\n\\n        bytes32 transactionHash;\\n\\n\\n\\n        // a plain text description of the proposal\\n\\n        string desc;\\n\\n        // a hash of full description data of the proposal (optional)\\n\\n        string fullDescHash;\\n\\n    }\\n\\n\\n\\n    _Proposal[] public Proposals;\\n\\n\\n\\n    event ProposalAdded(uint proposalID, address recipient, uint amount, string description, string fullDescHash);\\n\\n    event Voted(uint proposalID, bool position, address voter, string justification);\\n\\n    event ProposalTallied(uint proposalID, uint votesSupport, uint votesAgainst, uint quorum, bool active);    \\n\\n    event ChangeOfRules(uint newMinimumQuorum, uint newdebatingPeriodDuration, uint newRequisiteMajority);\\n\\n    event Payment(address indexed sender, uint amount);\\n\\n\\n\\n    // Modifier that allows only owners of tokens to vote and create new proposals\\n\\n    modifier onlyMembers {\\n\\n        require(balances[msg.sender] > 0);\\n\\n        _;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Change voting rules\\n\\n     *\\n\\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\\n\\n     * have at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\\n\\n     *\\n\\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\\n\\n     * @param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\\n\\n     * @param _requisiteMajority the proposal needs to have 50% plus this number\\n\\n     */\\n\\n    function changeVotingRules(\\n\\n        uint _minimumQuorum,\\n\\n        uint _debatingPeriodDuration,\\n\\n        uint _requisiteMajority\\n\\n    ) onlyOwner public {\\n\\n        minimumQuorum = _minimumQuorum;\\n\\n        debatingPeriodDuration = _debatingPeriodDuration;\\n\\n        requisiteMajority = _requisiteMajority;\\n\\n\\n\\n        emit ChangeOfRules(minimumQuorum, debatingPeriodDuration, requisiteMajority);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Add Proposal\\n\\n     *\\n\\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\\n\\n     *\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send, in wei\\n\\n     * @param _desc Description of job\\n\\n     * @param _fullDescHash Hash of full description of job\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function addProposal(address _recipient, uint _amount, string _desc, string _fullDescHash, bytes _transactionByteCode, uint _debatingPeriodDuration) onlyMembers public returns (uint) {\\n\\n        require(balances[msg.sender] > minBalance);\\n\\n\\n\\n        if (_debatingPeriodDuration == 0) {\\n\\n            _debatingPeriodDuration = debatingPeriodDuration;\\n\\n        }\\n\\n\\n\\n        Proposals.push(_Proposal({      \\n\\n            endTimeOfVoting: now + _debatingPeriodDuration * 1 minutes,\\n\\n            executed: false,\\n\\n            proposalPassed: false,\\n\\n            numberOfVotes: 0,\\n\\n            votesSupport: 0,\\n\\n            votesAgainst: 0,\\n\\n            recipient: _recipient,\\n\\n            amount: _amount,\\n\\n            transactionHash: keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode)),\\n\\n            desc: _desc,\\n\\n            fullDescHash: _fullDescHash\\n\\n        }));\\n\\n        \\n\\n        // add proposal in ERC20 base contract for block transfer\\n\\n        super.addProposal(Proposals.length-1, Proposals[Proposals.length-1].endTimeOfVoting);\\n\\n\\n\\n        emit ProposalAdded(Proposals.length-1, _recipient, _amount, _desc, _fullDescHash);\\n\\n\\n\\n        return Proposals.length-1;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Check if a proposal code matches\\n\\n     *\\n\\n     * @param _proposalID number of the proposal to query\\n\\n     * @param _recipient who to send the ether to\\n\\n     * @param _amount amount of ether to send\\n\\n     * @param _transactionByteCode bytecode of transaction\\n\\n     */\\n\\n    function checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionByteCode) view public returns (bool) {\\n\\n        require(Proposals[_proposalID].recipient == _recipient);\\n\\n        require(Proposals[_proposalID].amount == _amount);\\n\\n        // compare ByteCode        \\n\\n        return Proposals[_proposalID].transactionHash == keccak256(abi.encodePacked(_recipient, _amount, _transactionByteCode));\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Log a vote for a proposal\\n\\n     *\\n\\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\\n\\n     *\\n\\n     * @param _proposalID number of proposal\\n\\n     * @param _supportsProposal either in favor or against it\\n\\n     * @param _justificationText optional justification text\\n\\n     */\\n\\n    function vote(uint _proposalID, bool _supportsProposal, string _justificationText) onlyMembers public returns (uint) {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID]; \\n\\n        require(now <= p.endTimeOfVoting);\\n\\n\\n\\n        // get numbers of votes for msg.sender\\n\\n        uint votes = safeSub(balances[msg.sender], voted[_proposalID][msg.sender]);\\n\\n        require(votes > 0);\\n\\n\\n\\n        voted[_proposalID][msg.sender] = safeAdd(voted[_proposalID][msg.sender], votes);\\n\\n\\n\\n        // Increase the number of votes\\n\\n        p.numberOfVotes = p.numberOfVotes + votes;\\n\\n        \\n\\n        if (_supportsProposal) {\\n\\n            p.votesSupport = p.votesSupport + votes;\\n\\n        } else {\\n\\n            p.votesAgainst = p.votesAgainst + votes;\\n\\n        }\\n\\n        \\n\\n        emit Voted(_proposalID, _supportsProposal, msg.sender, _justificationText);\\n\\n        return p.numberOfVotes;\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Finish vote\\n\\n     *\\n\\n     * Count the votes proposal #`_proposalID` and execute it if approved\\n\\n     *\\n\\n     * @param _proposalID proposal number\\n\\n     * @param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it\\n\\n     */\\n\\n    // <yes> Reentrancy\\n    function executeProposal(uint _proposalID, bytes _transactionByteCode) public {\\n\\n        // Get the proposal\\n\\n        _Proposal storage p = Proposals[_proposalID];\\n\\n\\n\\n        require(now > p.endTimeOfVoting                                                                       // If it is past the voting deadline\\n\\n            && !p.executed                                                                                    // and it has not already been executed\\n\\n            && p.transactionHash == keccak256(abi.encodePacked(p.recipient, p.amount, _transactionByteCode))  // and the supplied code matches the proposal\\n\\n            && p.numberOfVotes >= minimumQuorum);                                                             // and a minimum quorum has been reached\\n\\n        // then execute result\\n\\n        if (p.votesSupport > requisiteMajority) {\\n\\n            // Proposal passed; execute the transaction\\n\\n            require(p.recipient.call.value(p.amount)(_transactionByteCode));\\n\\n            p.proposalPassed = true;\\n\\n        } else {\\n\\n            // Proposal failed\\n\\n            p.proposalPassed = false;\\n\\n        }\\n\\n        p.executed = true;\\n\\n\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);\\n\\n       \\n\\n        // Fire Events\\n\\n        emit ProposalTallied(_proposalID, p.votesSupport, p.votesAgainst, p.numberOfVotes, p.proposalPassed);\\n\\n    }\\n\\n\\n\\n    // function is needed if execution transactionByteCode in Proposal failed\\n\\n    function delActiveProposal(uint _proposalID) public onlyOwner {\\n\\n        // delete proposal from active list\\n\\n        super.delProposal(_proposalID);   \\n\\n    }\\n\\n\\n\\n    /**\\n\\n    * @dev Allows the DAO to transfer control of the _contract to a _newOwner.\\n\\n    * @param _newOwner The address to transfer ownership to.\\n\\n    */\\n\\n    function transferOwnership(address _contract, address _newOwner) public onlyOwner {\\n\\n        CommonI(_contract).transferOwnership(_newOwner);\\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * @dev Accept transferOwnership on a this (DAO) contract\\n\\n     */\\n\\n    function acceptOwnership(address _contract) public onlyOwner {\\n\\n        CommonI(_contract).acceptOwnership();        \\n\\n    }\\n\\n\\n\\n    function updateAgent(address _contract, address _agent, bool _state) public onlyOwner {\\n\\n        CommonI(_contract).updateAgent(_agent, _state);        \\n\\n    }\\n\\n\\n\\n    /**\\n\\n     * Set minimum balance for adding proposal\\n\\n     */\\n\\n    function setMinBalance(uint _minBalance) public onlyOwner {\\n\\n        assert(_minBalance > 0);\\n\\n        minBalance = _minBalance;\\n\\n    }\\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title Agent contract - base contract with an agent\\n\\n */\\n\\ncontract Agent is Ownable {\\n\\n\\n\\n  address public defAgent;\\n\\n\\n\\n  mapping(address => bool) public Agents;\\n\\n  \\n\\n  constructor() public {    \\n\\n    Agents[msg.sender] = true;\\n\\n  }\\n\\n  \\n\\n  modifier onlyAgent() {\\n\\n    assert(Agents[msg.sender]);\\n\\n    _;\\n\\n  }\\n\\n  \\n\\n  function updateAgent(address _agent, bool _status) public onlyOwner {\\n\\n    assert(_agent != address(0));\\n\\n    Agents[_agent] = _status;\\n\\n  }  \\n\\n}\\n\\n\\n\\n\\n\\n/**\\n\\n * @title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts\\n\\n */\\n\\ncontract SDAD is SDADI, DAO {\\n\\n\\t\\n\\n  uint public initialSupply = 10 * 10**6; // 10 million tokens\\n\\n  uint public decimals = 8;\\n\\n\\n\\n  string public name;\\n\\n  string public symbol;\\n\\n\\n\\n  /** Name and symbol were updated. */\\n\\n  event UpdatedTokenInformation(string _name, string _symbol);\\n\\n\\n\\n  /** Period were updated. */\\n\\n  event UpdatedPeriod(uint _period);\\n\\n\\n\\n  constructor(string _name, string _symbol, uint _start, uint _period, address _dexowner) public {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    start = _start;\\n\\n    period = _period;\\n\\n\\n\\n    totalSupply_ = initialSupply*10**decimals;\\n\\n\\n\\n    // creating initial tokens\\n\\n    balances[_dexowner] = totalSupply_;    \\n\\n    emit Transfer(0x0, _dexowner, balances[_dexowner]);\\n\\n\\n\\n    ownersIndex[_dexowner] = true;\\n\\n    owners.push(_dexowner);\\n\\n\\n\\n    ChangeOverPeriod[_dexowner][1] = int256(balances[_dexowner]);\\n\\n\\n\\n    // set voting rules\\n\\n    // _minimumQuorum = 50%\\n\\n    // _requisiteMajority = 25%\\n\\n    // _debatingPeriodDuration = 1 day\\n\\n    changeVotingRules(safePerc(totalSupply_, 5000), 1440, safePerc(totalSupply_, 2500));\\n\\n\\n\\n    // add ETH\\n\\n    tokens.push(address(0));\\n\\n    tokensIndex[address(0)] = tokens.length-1;\\n\\n  } \\n\\n\\n\\n  /**\\n\\n  * Owner can update token information here.\\n\\n  *\\n\\n  * It is often useful to conceal the actual token association, until\\n\\n  * the token operations, like central issuance or reissuance have been completed.\\n\\n  *\\n\\n  * This function allows the token owner to rename the token after the operations\\n\\n  * have been completed and then point the audience to use the token contract.\\n\\n  */\\n\\n  function setTokenInformation(string _name, string _symbol) public onlyOwner {\\n\\n    name = _name;\\n\\n    symbol = _symbol;\\n\\n    emit UpdatedTokenInformation(_name, _symbol);\\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * Owner can change period\\n\\n  *\\n\\n  */\\n\\n  function setPeriod(uint _period) public onlyOwner {\\n\\n    period = _period;\\n\\n    emit UpdatedPeriod(_period);    \\n\\n  }\\n\\n\\n\\n  /**\\n\\n  * set owner to self\\n\\n  *\\n\\n  */\\n\\n  function setOwnerToSelf() public onlyOwner {\\n\\n    owner = address(this);\\n\\n    emit OwnershipTransferred(msg.sender, address(this));\\n\\n  }\\n\\n}\",\"keccak256\":\"0x258fea00b8ff27a9b0c6bb40c3a0b8ca9b08047b719a8a065c21a3a30f6ad5dc\"}},\"version\":1}"
      }
    }
  },
  "sources": {
    "source code": {
      "ast": {
        "absolutePath": "source code",
        "exportedSymbols": {
          "Agent": [
            2711
          ],
          "CommonI": [
            2093
          ],
          "DAO": [
            2656
          ],
          "DAppDEXI": [
            421
          ],
          "Dividends": [
            2077
          ],
          "ERC20Base": [
            1388
          ],
          "ERC20I": [
            488
          ],
          "Ownable": [
            558
          ],
          "SDAD": [
            2906
          ],
          "SDADI": [
            569
          ],
          "SafeMath": [
            182
          ]
        },
        "id": 2907,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.4",
              ".25"
            ],
            "nodeType": "PragmaDirective",
            "src": "71:24:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
            "fullyImplemented": true,
            "id": 182,
            "linearizedBaseContracts": [
              182
            ],
            "name": "SafeMath",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 24,
                  "nodeType": "Block",
                  "src": "364:80:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "382:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 12,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "387:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "382:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 10,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "375:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "375:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 15,
                      "nodeType": "ExpressionStatement",
                      "src": "375:14:0"
                    },
                    {
                      "assignments": [
                        17
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 17,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 25,
                          "src": "400:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 16,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "400:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 21,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 18,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "412:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "416:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "412:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "400:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "435:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 9,
                      "id": 23,
                      "nodeType": "Return",
                      "src": "428:8:0"
                    }
                  ]
                },
                "documentation": "@dev Subtracts two numbers, reverts on overflow.",
                "id": 25,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "safeSub",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 6,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 3,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "310:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "310:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "321:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "321:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "309:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 9,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 8,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "355:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "355:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "354:9:0"
                },
                "scope": 182,
                "src": "293:151:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 48,
                  "nodeType": "Block",
                  "src": "591:80:0",
                  "statements": [
                    {
                      "assignments": [
                        35
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 35,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 49,
                          "src": "602:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 34,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "602:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 39,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "614:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "618:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "614:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "602:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 41,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "637:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 42,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "642:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "637:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 40,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "630:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "630:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 45,
                      "nodeType": "ExpressionStatement",
                      "src": "630:14:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "662:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 33,
                      "id": 47,
                      "nodeType": "Return",
                      "src": "655:8:0"
                    }
                  ]
                },
                "documentation": "@dev Adds two numbers, reverts on overflow.",
                "id": 49,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "safeAdd",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 30,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 27,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "537:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "537:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 29,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "548:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "536:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 32,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "582:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "582:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "581:9:0"
                },
                "scope": 182,
                "src": "520:151:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 66,
                  "nodeType": "Block",
                  "src": "839:55:0",
                  "statements": [
                    {
                      "assignments": [
                        59
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 59,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 67,
                          "src": "850:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 58,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "850:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 63,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 60,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "862:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "866:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "862:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "850:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "885:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 57,
                      "id": 65,
                      "nodeType": "Return",
                      "src": "878:8:0"
                    }
                  ]
                },
                "documentation": "@dev Integer division of two numbers, reverts on division by zero.",
                "id": 67,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "safeDiv",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 54,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 51,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 67,
                      "src": "785:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 67,
                      "src": "796:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "784:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 57,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 67,
                      "src": "830:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "830:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "829:9:0"
                },
                "scope": 182,
                "src": "768:126:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 99,
                  "nodeType": "Block",
                  "src": "1052:151:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1071:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1076:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1071:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 82,
                      "nodeType": "IfStatement",
                      "src": "1067:47:0",
                      "trueBody": {
                        "id": 81,
                        "nodeType": "Block",
                        "src": "1079:35:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1101:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 75,
                            "id": 80,
                            "nodeType": "Return",
                            "src": "1094:8:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        84
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 84,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 100,
                          "src": "1130:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 83,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1130:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 88,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 85,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1142:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1146:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1142:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1130:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 90,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "1165:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 91,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1169:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1165:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1174:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1165:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 89,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "1158:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1158:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 96,
                      "nodeType": "ExpressionStatement",
                      "src": "1158:18:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1194:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 75,
                      "id": 98,
                      "nodeType": "Return",
                      "src": "1187:8:0"
                    }
                  ]
                },
                "documentation": "@dev Multiplies two numbers, reverts on overflow.",
                "id": 100,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "safeMul",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 72,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 69,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "998:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "998:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 71,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "1009:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1009:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "997:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 75,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "1043:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1043:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1042:9:0"
                },
                "scope": 182,
                "src": "981:222:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 138,
                  "nodeType": "Block",
                  "src": "1358:204:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1373:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1378:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1373:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 115,
                      "nodeType": "IfStatement",
                      "src": "1369:47:0",
                      "trueBody": {
                        "id": 114,
                        "nodeType": "Block",
                        "src": "1381:35:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1403:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 108,
                            "id": 113,
                            "nodeType": "Return",
                            "src": "1396:8:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        117
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 117,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 139,
                          "src": "1436:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1436:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 121,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1448:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "1452:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1448:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1436:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 123,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "1471:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 124,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "1475:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1471:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 126,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1480:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1471:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 122,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "1464:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1464:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 129,
                      "nodeType": "ExpressionStatement",
                      "src": "1464:18:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "z",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1497:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 131,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "1501:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130303030",
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1505:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1501:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1497:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 135,
                      "nodeType": "ExpressionStatement",
                      "src": "1497:13:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1553:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 108,
                      "id": 137,
                      "nodeType": "Return",
                      "src": "1546:8:0"
                    }
                  ]
                },
                "documentation": "@dev Returns the integer percentage of the number.",
                "id": 139,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "safePerc",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 105,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 102,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1304:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 104,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1315:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1315:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1303:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 108,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1349:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1349:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1348:9:0"
                },
                "scope": 182,
                "src": "1286:276:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 159,
                  "nodeType": "Block",
                  "src": "1709:64:0",
                  "statements": [
                    {
                      "assignments": [
                        149
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 149,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 160,
                          "src": "1720:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 148,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1720:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 156,
                      "initialValue": {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "1732:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 151,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1737:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1732:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 154,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "1745:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1732:14:0",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1741:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1720:26:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1764:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 147,
                      "id": 158,
                      "nodeType": "Return",
                      "src": "1757:8:0"
                    }
                  ]
                },
                "documentation": "@dev Returns the minimum value of two numbers.",
                "id": 160,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "min",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 144,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 141,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "1655:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 143,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "1666:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1666:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1654:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 147,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 146,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "1700:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1700:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1699:9:0"
                },
                "scope": 182,
                "src": "1642:131:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 180,
                  "nodeType": "Block",
                  "src": "1919:64:0",
                  "statements": [
                    {
                      "assignments": [
                        170
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 170,
                          "name": "z",
                          "nodeType": "VariableDeclaration",
                          "scope": 181,
                          "src": "1930:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 169,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1930:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 177,
                      "initialValue": {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "1942:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 172,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1947:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1942:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "1955:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1942:14:0",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 174,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "1951:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1930:26:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "1974:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 168,
                      "id": 179,
                      "nodeType": "Return",
                      "src": "1967:8:0"
                    }
                  ]
                },
                "documentation": "@dev Returns the maximum value of two numbers.",
                "id": 181,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "max",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 165,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 162,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "1865:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1865:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 164,
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "1876:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1864:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 168,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 167,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "1910:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1910:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1909:9:0"
                },
                "scope": 182,
                "src": "1852:131:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 2907,
            "src": "193:1793:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": "@title DAppDEXI - Interface ",
            "fullyImplemented": false,
            "id": 421,
            "linearizedBaseContracts": [
              421
            ],
            "name": "DAppDEXI",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 189,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "updateAgent",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 187,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 184,
                      "name": "_agent",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "2084:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2084:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 186,
                      "name": "_status",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "2100:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2100:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2083:30:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 188,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2122:0:0"
                },
                "scope": 421,
                "src": "2063:60:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 196,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "setAccountType",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 194,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 191,
                      "name": "user_",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2155:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2155:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 193,
                      "name": "type_",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2170:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2170:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2154:30:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 195,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2193:0:0"
                },
                "scope": 421,
                "src": "2131:63:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 203,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getAccountType",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 199,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 198,
                      "name": "user_",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "2224:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2224:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2223:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 202,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 201,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "2261:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2261:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2260:9:0"
                },
                "scope": 421,
                "src": "2200:70:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 212,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "setFeeType",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 210,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 205,
                      "name": "type_",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2296:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 207,
                      "name": "feeMake_",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2312:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 209,
                      "name": "feeTake_",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2330:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2330:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2295:52:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 211,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2356:0:0"
                },
                "scope": 421,
                "src": "2276:81:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 219,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getFeeMake",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 215,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "type_",
                      "nodeType": "VariableDeclaration",
                      "scope": 219,
                      "src": "2383:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2383:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2382:16:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 218,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 217,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 219,
                      "src": "2421:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2421:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2420:9:0"
                },
                "scope": 421,
                "src": "2363:67:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 226,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getFeeTake",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 222,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 221,
                      "name": "type_",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "2456:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2456:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2455:16:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 225,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "2494:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2494:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2493:9:0"
                },
                "scope": 421,
                "src": "2436:67:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 231,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "changeFeeAccount",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 229,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 228,
                      "name": "feeAccount_",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2535:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2535:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2534:21:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 230,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2564:0:0"
                },
                "scope": 421,
                "src": "2509:56:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 236,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "setWhitelistTokens",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 234,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 233,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "2605:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2605:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2604:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 235,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2628:0:0"
                },
                "scope": 421,
                "src": "2577:52:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 247,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "setWhitelistTokens",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 245,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 238,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2663:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 237,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2663:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 240,
                      "name": "active",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2678:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2678:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 242,
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2691:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2691:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 244,
                      "name": "typeERC",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2710:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2710:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2662:64:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 246,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2735:0:0"
                },
                "scope": 421,
                "src": "2635:101:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 254,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "depositToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 252,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 249,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2764:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2764:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 251,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2779:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 250,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2779:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2763:28:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 253,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2800:0:0"
                },
                "scope": 421,
                "src": "2742:59:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 265,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "tokenFallback",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 261,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 256,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2830:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 255,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2830:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 258,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2845:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2845:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 260,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2861:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2861:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2829:43:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 264,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 263,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2891:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2891:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2890:14:0"
                },
                "scope": 421,
                "src": "2807:98:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 270,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "withdraw",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 268,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 267,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "2931:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 266,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2931:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2930:13:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 269,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2952:0:0"
                },
                "scope": 421,
                "src": "2913:40:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 277,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "withdrawToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 275,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 272,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "2982:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2982:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 274,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "2997:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2997:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2981:28:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 276,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3018:0:0"
                },
                "scope": 421,
                "src": "2959:60:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 286,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 282,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 279,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "3046:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3046:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 281,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "3061:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3061:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3045:29:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 285,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 284,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "3098:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3098:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3097:6:0"
                },
                "scope": 421,
                "src": "3027:77:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 301,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "order",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 299,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 288,
                      "name": "tokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3127:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 287,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3127:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 290,
                      "name": "amountBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3145:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3145:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 292,
                      "name": "tokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3161:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3161:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 294,
                      "name": "amountSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3180:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 293,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3180:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 296,
                      "name": "expires",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3197:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3197:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 298,
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3211:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3211:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3126:96:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 300,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3231:0:0"
                },
                "scope": 421,
                "src": "3112:120:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 326,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "trade",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 324,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 303,
                      "name": "tokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3253:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 305,
                      "name": "amountBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3271:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 304,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3271:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 307,
                      "name": "tokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3287:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3287:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 309,
                      "name": "amountSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3306:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3306:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 311,
                      "name": "expires",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3323:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3323:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 313,
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3337:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3337:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 315,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3349:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3349:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 317,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3363:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3363:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 319,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3372:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 321,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3383:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3383:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 323,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "3394:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3394:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3252:154:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 325,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3415:0:0"
                },
                "scope": 421,
                "src": "3238:178:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 347,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "cancelOrder",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 345,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 328,
                      "name": "tokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3447:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 330,
                      "name": "amountBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3465:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 329,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3465:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 332,
                      "name": "tokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3481:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3481:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 334,
                      "name": "amountSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3500:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 333,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3500:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 336,
                      "name": "expires",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3517:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3517:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 338,
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3531:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3531:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 340,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3543:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 342,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3552:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 341,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3552:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 344,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "3563:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3563:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3446:127:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 346,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3582:0:0"
                },
                "scope": 421,
                "src": "3426:157:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 376,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "testTrade",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 372,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 349,
                      "name": "tokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3608:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3608:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 351,
                      "name": "amountBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3626:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3626:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 353,
                      "name": "tokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3642:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 352,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3642:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 355,
                      "name": "amountSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3661:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3661:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 357,
                      "name": "expires",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3678:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 356,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3678:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 359,
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3692:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3692:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 361,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3704:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3704:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 363,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3718:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3718:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 365,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3727:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3727:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 367,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3738:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 366,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3738:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 369,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3749:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 368,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3749:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 371,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3762:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3762:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3607:170:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 375,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 374,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "3800:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 373,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3800:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3799:6:0"
                },
                "scope": 421,
                "src": "3589:217:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 401,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "availableVolume",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 397,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 378,
                      "name": "tokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3837:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3837:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 380,
                      "name": "amountBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3855:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 379,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3855:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 382,
                      "name": "tokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3871:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3871:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 384,
                      "name": "amountSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3890:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3890:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 386,
                      "name": "expires",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3907:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3907:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 388,
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3921:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 387,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3921:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 390,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3933:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 389,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3933:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 392,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3947:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 391,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3947:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 394,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3956:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 393,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 396,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "3967:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 395,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3967:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3836:141:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 400,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 399,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "4000:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 398,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4000:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3999:6:0"
                },
                "scope": 421,
                "src": "3812:194:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 420,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "amountFilled",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 416,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 403,
                      "name": "tokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4034:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4034:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 405,
                      "name": "amountBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4052:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 404,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4052:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 407,
                      "name": "tokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4068:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4068:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 409,
                      "name": "amountSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4087:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4087:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 411,
                      "name": "expires",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4104:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 410,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4104:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 413,
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4118:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 415,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4130:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4130:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4033:110:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 419,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 418,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4166:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4166:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4165:6:0"
                },
                "scope": 421,
                "src": "4012:160:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              }
            ],
            "scope": 2907,
            "src": "2035:2140:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
            "fullyImplemented": false,
            "id": 488,
            "linearizedBaseContracts": [
              488
            ],
            "name": "ERC20I",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 428,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 424,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 423,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 428,
                      "src": "4317:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 422,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4317:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4316:16:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 427,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 426,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 428,
                      "src": "4356:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4356:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4355:9:0"
                },
                "scope": 488,
                "src": "4298:67:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 433,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 429,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4391:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 432,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 431,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "4417:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4417:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4416:9:0"
                },
                "scope": 488,
                "src": "4371:55:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 442,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 438,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 435,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "4448:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4448:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 437,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "4461:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4461:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4447:29:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 441,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 440,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "4495:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4495:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4494:14:0"
                },
                "scope": 488,
                "src": "4430:79:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 451,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 447,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 444,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "4536:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4536:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 446,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "4552:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4552:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4535:34:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 450,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 449,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "4593:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4593:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4592:9:0"
                },
                "scope": 488,
                "src": "4517:85:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 462,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 458,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 453,
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "4628:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 455,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "4643:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4643:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 457,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "4656:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 456,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4656:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4627:44:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 461,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 460,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "4690:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 459,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4690:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4689:14:0"
                },
                "scope": 488,
                "src": "4606:98:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 471,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 467,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 464,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4725:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4725:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 466,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4743:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4743:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4724:34:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 470,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 469,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4777:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4777:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4776:14:0"
                },
                "scope": 488,
                "src": "4708:83:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 479,
                "name": "Transfer",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 478,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 473,
                      "indexed": true,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 479,
                      "src": "4814:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4814:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 475,
                      "indexed": true,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 479,
                      "src": "4836:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4836:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 477,
                      "indexed": false,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 479,
                      "src": "4856:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4856:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4813:57:0"
                },
                "src": "4799:72:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 487,
                "name": "Approval",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 486,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 481,
                      "indexed": true,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 487,
                      "src": "4890:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4890:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 483,
                      "indexed": true,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 487,
                      "src": "4913:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4913:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 485,
                      "indexed": false,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 487,
                      "src": "4938:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4938:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4889:63:0"
                },
                "src": "4875:78:0"
              }
            ],
            "scope": 2907,
            "src": "4274:682:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": "@title Ownable contract - base contract with an owner",
            "fullyImplemented": true,
            "id": 558,
            "linearizedBaseContracts": [
              558
            ],
            "name": "Ownable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 490,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 558,
                "src": "5056:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 489,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5056:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 492,
                "name": "newOwner",
                "nodeType": "VariableDeclaration",
                "scope": 558,
                "src": "5081:23:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 491,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5081:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 498,
                "name": "OwnershipTransferred",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 497,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 494,
                      "indexed": true,
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "scope": 498,
                      "src": "5138:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 493,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5138:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 496,
                      "indexed": true,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 498,
                      "src": "5161:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 495,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5161:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5137:44:0"
                },
                "src": "5111:71:0"
              },
              {
                "body": {
                  "id": 506,
                  "nodeType": "Block",
                  "src": "5331:31:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 501,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "5338:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 502,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "5346:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5346:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5338:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 505,
                      "nodeType": "ExpressionStatement",
                      "src": "5338:18:0"
                    }
                  ]
                },
                "documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
                "id": 507,
                "implemented": true,
                "isConstructor": true,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 499,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5321:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 500,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5331:0:0"
                },
                "scope": 558,
                "src": "5310:52:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 517,
                  "nodeType": "Block",
                  "src": "5468:48:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 510,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "5482:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5482:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 512,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "5496:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5482:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 509,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "5475:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5475:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 515,
                      "nodeType": "ExpressionStatement",
                      "src": "5475:27:0"
                    },
                    {
                      "id": 516,
                      "nodeType": "PlaceholderStatement",
                      "src": "5509:1:0"
                    }
                  ]
                },
                "documentation": "@dev Throws if called by any account other than the owner.",
                "id": 518,
                "name": "onlyOwner",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 508,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5465:2:0"
                },
                "src": "5447:69:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 537,
                  "nodeType": "Block",
                  "src": "5747:77:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 526,
                              "name": "_newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "5761:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5782:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5774:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5774:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5761:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 525,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "5754:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5754:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 532,
                      "nodeType": "ExpressionStatement",
                      "src": "5754:31:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "5798:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 534,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "5809:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5798:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 536,
                      "nodeType": "ExpressionStatement",
                      "src": "5798:20:0"
                    }
                  ]
                },
                "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
                "id": 538,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 523,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "5737:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5737:9:0"
                  }
                ],
                "name": "transferOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 521,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 520,
                      "name": "_newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 538,
                      "src": "5711:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5711:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5710:19:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 524,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5747:0:0"
                },
                "scope": 558,
                "src": "5684:140:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 556,
                  "nodeType": "Block",
                  "src": "5915:124:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 541,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "5926:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5926:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 543,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "5940:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5926:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 555,
                      "nodeType": "IfStatement",
                      "src": "5922:112:0",
                      "trueBody": {
                        "id": 554,
                        "nodeType": "Block",
                        "src": "5950:84:0",
                        "statements": [
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 546,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 490,
                                  "src": "5985:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 547,
                                  "name": "newOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "5992:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 545,
                                "name": "OwnershipTransferred",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
                                "src": "5964:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                  "typeString": "function (address,address)"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5964:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 549,
                            "nodeType": "EmitStatement",
                            "src": "5959:42:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 550,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "6010:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "id": 551,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 492,
                                "src": "6018:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6010:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 553,
                            "nodeType": "ExpressionStatement",
                            "src": "6010:16:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": "@dev Accept transferOwnership.",
                "id": 557,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "acceptOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 539,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5905:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 540,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5915:0:0"
                },
                "scope": 558,
                "src": "5881:158:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 2907,
            "src": "5030:1012:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": "@title SDADI - Interface",
            "fullyImplemented": false,
            "id": 569,
            "linearizedBaseContracts": [
              569
            ],
            "name": "SDADI",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 563,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "AddToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 561,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 560,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "6128:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 559,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6128:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6127:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 562,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6151:0:0"
                },
                "scope": 569,
                "src": "6110:42:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 568,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "DelToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 566,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 565,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 568,
                      "src": "6174:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 564,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6174:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6173:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 567,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6197:0:0"
                },
                "scope": 569,
                "src": "6156:42:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              }
            ],
            "scope": 2907,
            "src": "6087:114:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 570,
                  "name": "ERC20I",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 488,
                  "src": "6395:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20I_$488",
                    "typeString": "contract ERC20I"
                  }
                },
                "id": 571,
                "nodeType": "InheritanceSpecifier",
                "src": "6395:6:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 572,
                  "name": "SafeMath",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 182,
                  "src": "6403:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SafeMath_$182",
                    "typeString": "contract SafeMath"
                  }
                },
                "id": 573,
                "nodeType": "InheritanceSpecifier",
                "src": "6403:8:0"
              }
            ],
            "contractDependencies": [
              488,
              182
            ],
            "contractKind": "contract",
            "documentation": "@title Standard ERC20 token + balance on date\n@dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20 ",
            "fullyImplemented": true,
            "id": 1388,
            "linearizedBaseContracts": [
              1388,
              182,
              488
            ],
            "name": "ERC20Base",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 575,
                "name": "totalSupply_",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6420:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 574,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6420:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 579,
                "name": "balances",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6445:37:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 578,
                  "keyType": {
                    "id": 576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6454:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "6445:28:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6465:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 585,
                "name": "allowed",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6487:66:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 584,
                  "keyType": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "6487:49:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 583,
                    "keyType": {
                      "id": 581,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "6507:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 582,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 588,
                "name": "start",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6560:24:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 586,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6560:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 587,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6583:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 591,
                "name": "period",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6648:31:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 589,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6648:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "3330",
                  "id": 590,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6672:7:0",
                  "subdenomination": "days",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2592000_by_1",
                    "typeString": "int_const 2592000"
                  },
                  "value": "30"
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 597,
                "name": "ChangeOverPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6745:72:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                  "typeString": "mapping(address => mapping(uint256 => int256))"
                },
                "typeName": {
                  "id": 596,
                  "keyType": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6754:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "6745:48:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                    "typeString": "mapping(address => mapping(uint256 => int256))"
                  },
                  "valueType": {
                    "id": 595,
                    "keyType": {
                      "id": 593,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6774:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "6765:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                      "typeString": "mapping(uint256 => int256)"
                    },
                    "valueType": {
                      "id": 594,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6785:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 600,
                "name": "owners",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6824:23:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6824:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 599,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "6824:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 604,
                "name": "ownersIndex",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "6852:44:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 603,
                  "keyType": {
                    "id": 601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6861:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "6852:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 602,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6872:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "canonicalName": "ERC20Base._Prop",
                "id": 609,
                "members": [
                  {
                    "constant": false,
                    "id": 606,
                    "name": "propID",
                    "nodeType": "VariableDeclaration",
                    "scope": 609,
                    "src": "6923:11:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 605,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6923:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 608,
                    "name": "endTime",
                    "nodeType": "VariableDeclaration",
                    "scope": 609,
                    "src": "6976:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 607,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6976:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "_Prop",
                "nodeType": "StructDefinition",
                "scope": 1388,
                "src": "6903:121:0",
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 612,
                "name": "ActiveProposals",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "7032:30:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                  "typeString": "struct ERC20Base._Prop[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 610,
                    "name": "_Prop",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 609,
                    "src": "7032:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$__Prop_$609_storage_ptr",
                      "typeString": "struct ERC20Base._Prop"
                    }
                  },
                  "id": 611,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "7032:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage_ptr",
                    "typeString": "struct ERC20Base._Prop[]"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 618,
                "name": "voted",
                "nodeType": "VariableDeclaration",
                "scope": 1388,
                "src": "7140:56:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 617,
                  "keyType": {
                    "id": 613,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7149:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "7140:43:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 616,
                    "keyType": {
                      "id": 614,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7166:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "7157:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 615,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7177:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 625,
                  "nodeType": "Block",
                  "src": "7325:32:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "7339:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 622,
                      "id": 624,
                      "nodeType": "Return",
                      "src": "7332:19:0"
                    }
                  ]
                },
                "documentation": "@dev Total Supply\n@return totalSupply_ ",
                "id": 626,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 619,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7292:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 622,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 621,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 626,
                      "src": "7316:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7316:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7315:9:0"
                },
                "scope": 1388,
                "src": "7272:85:0",
                "stateMutability": "view",
                "superFunction": 433,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 637,
                  "nodeType": "Block",
                  "src": "7536:36:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 633,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "7550:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 635,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 634,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 628,
                          "src": "7559:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7550:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 632,
                      "id": 636,
                      "nodeType": "Return",
                      "src": "7543:23:0"
                    }
                  ]
                },
                "documentation": "@dev Tokens balance\n@param _owner holder address\n@return balance amount ",
                "id": 638,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 629,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 628,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "7490:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7490:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7489:16:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 632,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 631,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "7527:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 630,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7527:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7526:9:0"
                },
                "scope": 1388,
                "src": "7471:101:0",
                "stateMutability": "view",
                "superFunction": 428,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 728,
                  "nodeType": "Block",
                  "src": "7772:414:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "_date",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "7787:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "start",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "7796:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7787:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 647,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "7779:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7779:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 652,
                      "nodeType": "ExpressionStatement",
                      "src": "7779:23:0"
                    },
                    {
                      "assignments": [
                        654
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 654,
                          "name": "N1",
                          "nodeType": "VariableDeclaration",
                          "scope": 729,
                          "src": "7809:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 653,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7809:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 663,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 655,
                                  "name": "_date",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 642,
                                  "src": "7823:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 656,
                                  "name": "start",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 588,
                                  "src": "7831:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7823:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 658,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7822:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "7840:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7822:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7849:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7822:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7809:41:0"
                    },
                    {
                      "assignments": [
                        665
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 665,
                          "name": "N2",
                          "nodeType": "VariableDeclaration",
                          "scope": 729,
                          "src": "7863:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 664,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7863:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 667,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7876:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7863:14:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 668,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "7888:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7888:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 670,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "7906:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7888:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 685,
                      "nodeType": "IfStatement",
                      "src": "7884:89:0",
                      "trueBody": {
                        "id": 684,
                        "nodeType": "Block",
                        "src": "7913:60:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 672,
                                "name": "N2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 665,
                                "src": "7922:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 676,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 673,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2911,
                                            "src": "7928:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 674,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "7928:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 675,
                                          "name": "start",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 588,
                                          "src": "7946:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7928:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 677,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7927:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 678,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 591,
                                    "src": "7955:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7927:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7964:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7927:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7922:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 683,
                            "nodeType": "ExpressionStatement",
                            "src": "7922:43:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 687,
                              "name": "N2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 665,
                              "src": "7989:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 688,
                              "name": "N1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 654,
                              "src": "7995:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7989:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 686,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "7981:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7981:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 691,
                      "nodeType": "ExpressionStatement",
                      "src": "7981:17:0"
                    },
                    {
                      "assignments": [
                        693
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 693,
                          "name": "B",
                          "nodeType": "VariableDeclaration",
                          "scope": 729,
                          "src": "8007:8:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "typeName": {
                            "id": 692,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8007:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 699,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 695,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "8025:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 696,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "8034:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8025:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8018:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": "int256"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8018:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8007:35:0"
                    },
                    {
                      "body": {
                        "id": 716,
                        "nodeType": "Block",
                        "src": "8067:66:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 703,
                                "name": "B",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "8076:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 704,
                                  "name": "B",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 693,
                                  "src": "8080:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 705,
                                      "name": "ChangeOverPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 597,
                                      "src": "8084:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => int256))"
                                      }
                                    },
                                    "id": 707,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 706,
                                      "name": "_owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 640,
                                      "src": "8101:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8084:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                                      "typeString": "mapping(uint256 => int256)"
                                    }
                                  },
                                  "id": 709,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 708,
                                    "name": "N2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 665,
                                    "src": "8109:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8084:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8080:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "8076:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 712,
                            "nodeType": "ExpressionStatement",
                            "src": "8076:36:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": false,
                              "src": "8121:4:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 713,
                                "name": "N2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 665,
                                "src": "8121:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 715,
                            "nodeType": "ExpressionStatement",
                            "src": "8121:4:0"
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 700,
                          "name": "N2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "8058:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 701,
                          "name": "N1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "8063:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8058:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 717,
                      "nodeType": "WhileStatement",
                      "src": "8051:82:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 719,
                              "name": "B",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "8149:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8154:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8149:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 718,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "8141:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8141:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 723,
                      "nodeType": "ExpressionStatement",
                      "src": "8141:15:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 725,
                            "name": "B",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "8178:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8170:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8170:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 646,
                      "id": 727,
                      "nodeType": "Return",
                      "src": "8163:17:0"
                    }
                  ]
                },
                "documentation": "@dev Balance of tokens on date\n@param _owner holder address\n@return balance amount ",
                "id": 729,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 643,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 640,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 729,
                      "src": "7714:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 639,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7714:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 642,
                      "name": "_date",
                      "nodeType": "VariableDeclaration",
                      "scope": 729,
                      "src": "7730:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 641,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7730:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7713:28:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 646,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 645,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 729,
                      "src": "7763:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7763:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7762:9:0"
                },
                "scope": 1388,
                "src": "7695:491:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 920,
                  "nodeType": "Block",
                  "src": "8415:981:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 739,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "8430:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8445:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8437:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8437:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8430:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 738,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "8422:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8422:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 745,
                      "nodeType": "ExpressionStatement",
                      "src": "8422:26:0"
                    },
                    {
                      "assignments": [
                        747
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 747,
                          "name": "lock",
                          "nodeType": "VariableDeclaration",
                          "scope": 921,
                          "src": "8457:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 746,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8457:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 749,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8469:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8457:13:0"
                    },
                    {
                      "body": {
                        "id": 794,
                        "nodeType": "Block",
                        "src": "8527:207:0",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 761,
                                    "name": "ActiveProposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "8540:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                      "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                    }
                                  },
                                  "id": 763,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 762,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 751,
                                    "src": "8556:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8540:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Prop_$609_storage",
                                    "typeString": "struct ERC20Base._Prop storage ref"
                                  }
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 608,
                                "src": "8540:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 765,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2923,
                                "src": "8569:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8540:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": null,
                            "id": 793,
                            "nodeType": "IfStatement",
                            "src": "8536:191:0",
                            "trueBody": {
                              "id": 792,
                              "nodeType": "Block",
                              "src": "8574:153:0",
                              "statements": [
                                {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 767,
                                      "name": "lock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 747,
                                      "src": "8589:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 768,
                                          "name": "voted",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 618,
                                          "src": "8596:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 773,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 769,
                                              "name": "ActiveProposals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 612,
                                              "src": "8602:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                                "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                              }
                                            },
                                            "id": 771,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 770,
                                              "name": "k",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "8618:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8602:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$__Prop_$609_storage",
                                              "typeString": "struct ERC20Base._Prop storage ref"
                                            }
                                          },
                                          "id": 772,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "propID",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 606,
                                          "src": "8602:25:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8596:32:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 776,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 774,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2921,
                                          "src": "8629:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 775,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "8629:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8596:44:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8589:51:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": null,
                                  "id": 791,
                                  "nodeType": "IfStatement",
                                  "src": "8585:133:0",
                                  "trueBody": {
                                    "id": 790,
                                    "nodeType": "Block",
                                    "src": "8642:76:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 788,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 778,
                                            "name": "lock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 747,
                                            "src": "8655:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 779,
                                                "name": "voted",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 618,
                                                "src": "8662:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 784,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 780,
                                                    "name": "ActiveProposals",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 612,
                                                    "src": "8668:15:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                                      "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 782,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 781,
                                                    "name": "k",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 751,
                                                    "src": "8684:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8668:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$__Prop_$609_storage",
                                                    "typeString": "struct ERC20Base._Prop storage ref"
                                                  }
                                                },
                                                "id": 783,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "propID",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 606,
                                                "src": "8668:25:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8662:32:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 787,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 785,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2921,
                                                "src": "8695:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 786,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "8695:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8662:44:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8655:51:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 789,
                                        "nodeType": "ExpressionStatement",
                                        "src": "8655:51:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 754,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "8494:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 755,
                            "name": "ActiveProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "8498:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                              "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                            }
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8498:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8494:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 795,
                      "initializationExpression": {
                        "assignments": [
                          751
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 751,
                            "name": "k",
                            "nodeType": "VariableDeclaration",
                            "scope": 921,
                            "src": "8482:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 750,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8482:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 753,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8491:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8482:10:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8522:3:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 758,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 751,
                            "src": "8522:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "8522:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "8477:257:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 798,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 579,
                                    "src": "8758:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 801,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 799,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2921,
                                      "src": "8767:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8767:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8758:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 802,
                                  "name": "lock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 747,
                                  "src": "8780:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 797,
                                "name": "safeSub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "8750:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8750:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 804,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "8789:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8750:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 796,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "8742:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8742:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 807,
                      "nodeType": "ExpressionStatement",
                      "src": "8742:54:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 808,
                              "name": "ownersIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "8809:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 810,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 809,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "8821:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8809:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8829:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "8809:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 813,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "8838:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8847:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8838:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8809:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 830,
                      "nodeType": "IfStatement",
                      "src": "8805:110:0",
                      "trueBody": {
                        "id": 829,
                        "nodeType": "Block",
                        "src": "8850:65:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 817,
                                  "name": "ownersIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 604,
                                  "src": "8859:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 819,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 818,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
                                  "src": "8871:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8859:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8878:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "8859:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 822,
                            "nodeType": "ExpressionStatement",
                            "src": "8859:23:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 826,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
                                  "src": "8903:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 823,
                                  "name": "owners",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 600,
                                  "src": "8891:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "push",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8891:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) returns (uint256)"
                                }
                              },
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8891:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 828,
                            "nodeType": "ExpressionStatement",
                            "src": "8891:16:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 831,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "8927:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 834,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 832,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "8936:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8936:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8927:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 836,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "8958:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 839,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 837,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "8967:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8967:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8958:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 840,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "8980:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 835,
                            "name": "safeSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "8950:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8950:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8927:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 843,
                      "nodeType": "ExpressionStatement",
                      "src": "8927:60:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 844,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "8994:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 846,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 845,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "9003:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8994:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 848,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "9018:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 850,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 849,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "9027:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9018:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 851,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "9033:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 847,
                            "name": "safeAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "9010:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9010:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8994:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 854,
                      "nodeType": "ExpressionStatement",
                      "src": "8994:46:0"
                    },
                    {
                      "assignments": [
                        856
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 856,
                          "name": "N",
                          "nodeType": "VariableDeclaration",
                          "scope": 921,
                          "src": "9049:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 855,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9049:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 858,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9061:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9049:13:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 859,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "9073:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9073:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 861,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "9091:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9073:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 876,
                      "nodeType": "IfStatement",
                      "src": "9069:88:0",
                      "trueBody": {
                        "id": 875,
                        "nodeType": "Block",
                        "src": "9098:59:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 863,
                                "name": "N",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 856,
                                "src": "9107:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 870,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 867,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 864,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2911,
                                            "src": "9112:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 865,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "9112:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 866,
                                          "name": "start",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 588,
                                          "src": "9130:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9112:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 868,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9111:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 869,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 591,
                                    "src": "9139:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9111:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 871,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9148:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9111:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9107:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 874,
                            "nodeType": "ExpressionStatement",
                            "src": "9107:42:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 877,
                              "name": "ChangeOverPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "9165:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => int256))"
                              }
                            },
                            "id": 881,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 878,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "9182:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9182:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9165:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                              "typeString": "mapping(uint256 => int256)"
                            }
                          },
                          "id": 882,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 880,
                            "name": "N",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "9194:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9165:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 883,
                                "name": "ChangeOverPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "9199:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => int256))"
                                }
                              },
                              "id": 886,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 884,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "9216:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9216:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9199:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                                "typeString": "mapping(uint256 => int256)"
                              }
                            },
                            "id": 888,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 887,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "9228:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9199:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 890,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "9240:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9233:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9233:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "9199:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "9165:82:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 894,
                      "nodeType": "ExpressionStatement",
                      "src": "9165:82:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 895,
                              "name": "ChangeOverPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "9254:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => int256))"
                              }
                            },
                            "id": 898,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 896,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "9271:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9254:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                              "typeString": "mapping(uint256 => int256)"
                            }
                          },
                          "id": 899,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 897,
                            "name": "N",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "9276:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9254:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 900,
                                "name": "ChangeOverPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "9281:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => int256))"
                                }
                              },
                              "id": 902,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 901,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "9298:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9281:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                                "typeString": "mapping(uint256 => int256)"
                              }
                            },
                            "id": 904,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 903,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "9303:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9281:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 906,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "9315:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9308:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9308:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "9281:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "9254:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 910,
                      "nodeType": "ExpressionStatement",
                      "src": "9254:68:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 912,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "9348:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9348:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 914,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "9360:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 915,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "9365:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 911,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "9339:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9339:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 917,
                      "nodeType": "EmitStatement",
                      "src": "9334:38:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9386:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 737,
                      "id": 919,
                      "nodeType": "Return",
                      "src": "9379:11:0"
                    }
                  ]
                },
                "documentation": "@dev Tranfer tokens to address\n@param _to dest address\n@param _value tokens amount\n@return transfer result",
                "id": 921,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 734,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 731,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "8356:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 730,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8356:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 733,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "8369:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8369:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8355:29:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 737,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 736,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "8401:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 735,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8401:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8400:14:0"
                },
                "scope": 1388,
                "src": "8338:1058:0",
                "stateMutability": "nonpayable",
                "superFunction": 442,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 936,
                  "nodeType": "Block",
                  "src": "9628:45:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 930,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "9642:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 932,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 931,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "9650:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9642:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 934,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 933,
                          "name": "_spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "9658:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9642:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 929,
                      "id": 935,
                      "nodeType": "Return",
                      "src": "9635:32:0"
                    }
                  ]
                },
                "documentation": "@dev Token allowance\n@param _owner holder address\n@param _spender spender address\n@return remain amount",
                "id": 937,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 926,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 923,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 937,
                      "src": "9564:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 922,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9564:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 925,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 937,
                      "src": "9580:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 924,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9580:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9563:34:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 929,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 928,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 937,
                      "src": "9619:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9619:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9618:9:0"
                },
                "scope": 1388,
                "src": "9545:128:0",
                "stateMutability": "view",
                "superFunction": 451,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1150,
                  "nodeType": "Block",
                  "src": "9976:1083:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 949,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "9991:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10006:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9998:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9998:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9991:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 948,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "9983:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9983:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 955,
                      "nodeType": "ExpressionStatement",
                      "src": "9983:26:0"
                    },
                    {
                      "assignments": [
                        957
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 957,
                          "name": "lock",
                          "nodeType": "VariableDeclaration",
                          "scope": 1151,
                          "src": "10018:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 956,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10018:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 959,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10030:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10018:13:0"
                    },
                    {
                      "body": {
                        "id": 1002,
                        "nodeType": "Block",
                        "src": "10088:197:0",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 971,
                                    "name": "ActiveProposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "10101:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                      "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                    }
                                  },
                                  "id": 973,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 972,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "10117:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10101:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Prop_$609_storage",
                                    "typeString": "struct ERC20Base._Prop storage ref"
                                  }
                                },
                                "id": 974,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 608,
                                "src": "10101:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 975,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2923,
                                "src": "10130:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10101:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": null,
                            "id": 1001,
                            "nodeType": "IfStatement",
                            "src": "10097:181:0",
                            "trueBody": {
                              "id": 1000,
                              "nodeType": "Block",
                              "src": "10135:143:0",
                              "statements": [
                                {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 986,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 977,
                                      "name": "lock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 957,
                                      "src": "10150:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 978,
                                          "name": "voted",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 618,
                                          "src": "10157:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 983,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 979,
                                              "name": "ActiveProposals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 612,
                                              "src": "10163:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                                "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                              }
                                            },
                                            "id": 981,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 980,
                                              "name": "k",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 961,
                                              "src": "10179:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10163:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$__Prop_$609_storage",
                                              "typeString": "struct ERC20Base._Prop storage ref"
                                            }
                                          },
                                          "id": 982,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "propID",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 606,
                                          "src": "10163:25:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10157:32:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 985,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 984,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 939,
                                        "src": "10190:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10157:39:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10150:46:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": null,
                                  "id": 999,
                                  "nodeType": "IfStatement",
                                  "src": "10146:123:0",
                                  "trueBody": {
                                    "id": 998,
                                    "nodeType": "Block",
                                    "src": "10198:71:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 996,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 987,
                                            "name": "lock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 957,
                                            "src": "10211:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 988,
                                                "name": "voted",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 618,
                                                "src": "10218:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 993,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 989,
                                                    "name": "ActiveProposals",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 612,
                                                    "src": "10224:15:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                                      "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 991,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 990,
                                                    "name": "k",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 961,
                                                    "src": "10240:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "10224:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$__Prop_$609_storage",
                                                    "typeString": "struct ERC20Base._Prop storage ref"
                                                  }
                                                },
                                                "id": 992,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "propID",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 606,
                                                "src": "10224:25:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10218:32:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 995,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 994,
                                              "name": "_from",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 939,
                                              "src": "10251:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10218:39:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10211:46:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 997,
                                        "nodeType": "ExpressionStatement",
                                        "src": "10211:46:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 964,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "10055:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 965,
                            "name": "ActiveProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "10059:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                              "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10059:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10055:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1003,
                      "initializationExpression": {
                        "assignments": [
                          961
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 961,
                            "name": "k",
                            "nodeType": "VariableDeclaration",
                            "scope": 1151,
                            "src": "10043:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 960,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10043:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 963,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10052:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10043:10:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10083:3:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 968,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "10083:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "10083:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "10038:247:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1006,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 579,
                                    "src": "10313:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1008,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1007,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 939,
                                    "src": "10322:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10313:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1009,
                                  "name": "lock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 957,
                                  "src": "10330:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1005,
                                "name": "safeSub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "10305:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10305:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1011,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "10339:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10305:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1004,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "10297:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10297:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1014,
                      "nodeType": "ExpressionStatement",
                      "src": "10297:49:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1016,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 585,
                                  "src": "10367:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 1018,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1017,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "10375:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10367:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1021,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1019,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "10382:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10382:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10367:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1022,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "10397:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10367:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1015,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "10359:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10359:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1025,
                      "nodeType": "ExpressionStatement",
                      "src": "10359:45:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1026,
                              "name": "ownersIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "10417:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1028,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1027,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "10429:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10417:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10437:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10417:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1031,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "10446:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10455:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10446:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10417:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1048,
                      "nodeType": "IfStatement",
                      "src": "10413:110:0",
                      "trueBody": {
                        "id": 1047,
                        "nodeType": "Block",
                        "src": "10458:65:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1035,
                                  "name": "ownersIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 604,
                                  "src": "10467:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1037,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1036,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "10479:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "10467:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10486:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "10467:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1040,
                            "nodeType": "ExpressionStatement",
                            "src": "10467:23:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1044,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "10511:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1041,
                                  "name": "owners",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 600,
                                  "src": "10499:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "push",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10499:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) returns (uint256)"
                                }
                              },
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10499:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1046,
                            "nodeType": "ExpressionStatement",
                            "src": "10499:16:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1049,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "10535:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1051,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1050,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "10544:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10535:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1053,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "10561:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1055,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1054,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "10570:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10561:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1056,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "10578:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1052,
                            "name": "safeSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10553:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10553:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10535:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1059,
                      "nodeType": "ExpressionStatement",
                      "src": "10535:50:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1060,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "10592:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1062,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1061,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "10601:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10592:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1064,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "10616:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1066,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1065,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 941,
                                "src": "10625:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10616:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1067,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "10631:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1063,
                            "name": "safeAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "10608:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10608:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10592:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1070,
                      "nodeType": "ExpressionStatement",
                      "src": "10592:46:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1071,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "10645:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1075,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1072,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 939,
                              "src": "10653:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10645:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1076,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1073,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "10660:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10660:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10645:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1078,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 585,
                                  "src": "10682:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 1080,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1079,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "10690:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10682:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1083,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1081,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "10697:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10697:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10682:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1084,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "10710:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1077,
                            "name": "safeSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10674:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10674:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10645:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1087,
                      "nodeType": "ExpressionStatement",
                      "src": "10645:72:0"
                    },
                    {
                      "assignments": [
                        1089
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1089,
                          "name": "N",
                          "nodeType": "VariableDeclaration",
                          "scope": 1151,
                          "src": "10730:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1088,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10730:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1091,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10742:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10730:13:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1092,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "10754:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10754:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1094,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "10772:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10754:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1109,
                      "nodeType": "IfStatement",
                      "src": "10750:88:0",
                      "trueBody": {
                        "id": 1108,
                        "nodeType": "Block",
                        "src": "10779:59:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 1096,
                                "name": "N",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "10788:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1100,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1097,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2911,
                                            "src": "10793:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1098,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "10793:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 1099,
                                          "name": "start",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 588,
                                          "src": "10811:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10793:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1101,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "10792:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1102,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 591,
                                    "src": "10820:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10792:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 1104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10829:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10792:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10788:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1107,
                            "nodeType": "ExpressionStatement",
                            "src": "10788:42:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1110,
                              "name": "ChangeOverPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "10846:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => int256))"
                              }
                            },
                            "id": 1113,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1111,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 939,
                              "src": "10863:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10846:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                              "typeString": "mapping(uint256 => int256)"
                            }
                          },
                          "id": 1114,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1112,
                            "name": "N",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1089,
                            "src": "10870:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10846:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1115,
                                "name": "ChangeOverPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "10875:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => int256))"
                                }
                              },
                              "id": 1117,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1116,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "10892:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10875:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                                "typeString": "mapping(uint256 => int256)"
                              }
                            },
                            "id": 1119,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1118,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "10899:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10875:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1121,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 943,
                                "src": "10911:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10904:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10904:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "10875:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "10846:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 1125,
                      "nodeType": "ExpressionStatement",
                      "src": "10846:72:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1126,
                              "name": "ChangeOverPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "10925:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => int256))"
                              }
                            },
                            "id": 1129,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1127,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "10942:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10925:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                              "typeString": "mapping(uint256 => int256)"
                            }
                          },
                          "id": 1130,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1128,
                            "name": "N",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1089,
                            "src": "10947:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10925:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1131,
                                "name": "ChangeOverPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "10952:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => int256))"
                                }
                              },
                              "id": 1133,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1132,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 941,
                                "src": "10969:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10952:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                                "typeString": "mapping(uint256 => int256)"
                              }
                            },
                            "id": 1135,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1134,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "10974:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10952:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1137,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 943,
                                "src": "10986:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10979:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10979:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "10952:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "10925:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 1141,
                      "nodeType": "ExpressionStatement",
                      "src": "10925:68:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1143,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "11016:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1144,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "11023:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1145,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "11028:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1142,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "11007:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11007:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1147,
                      "nodeType": "EmitStatement",
                      "src": "11002:33:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11049:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 947,
                      "id": 1149,
                      "nodeType": "Return",
                      "src": "11042:11:0"
                    }
                  ]
                },
                "documentation": "@dev Transfer tokens from one address to another\n@param _from source address\n@param _to dest address\n@param _value tokens amount\n@return transfer result",
                "id": 1151,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 944,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 939,
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "scope": 1151,
                      "src": "9902:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 938,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9902:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 941,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 1151,
                      "src": "9917:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 940,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9917:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 943,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 1151,
                      "src": "9930:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 942,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9930:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9901:44:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 947,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 946,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1151,
                      "src": "9962:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9962:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9961:14:0"
                },
                "scope": 1388,
                "src": "9880:1179:0",
                "stateMutability": "nonpayable",
                "superFunction": 462,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1195,
                  "nodeType": "Block",
                  "src": "11285:194:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1161,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1155,
                                    "src": "11301:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11311:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11301:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1164,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11300:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1165,
                                        "name": "allowed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 585,
                                        "src": "11318:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                          "typeString": "mapping(address => mapping(address => uint256))"
                                        }
                                      },
                                      "id": 1168,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1166,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2921,
                                          "src": "11326:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "11326:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11318:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1170,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1169,
                                      "name": "_spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1153,
                                      "src": "11338:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11318:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11351:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11318:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1173,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11317:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11300:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1160,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "11292:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11292:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1176,
                      "nodeType": "ExpressionStatement",
                      "src": "11292:62:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1177,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "11361:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1178,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "11369:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11369:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11361:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1182,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1180,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1153,
                            "src": "11381:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11361:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1183,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1155,
                          "src": "11393:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11361:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1185,
                      "nodeType": "ExpressionStatement",
                      "src": "11361:38:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1187,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "11426:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "11426:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1189,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1153,
                            "src": "11438:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1190,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1155,
                            "src": "11448:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1186,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "11417:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11417:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1192,
                      "nodeType": "EmitStatement",
                      "src": "11412:43:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11469:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 1159,
                      "id": 1194,
                      "nodeType": "Return",
                      "src": "11462:11:0"
                    }
                  ]
                },
                "documentation": "@dev Approve transfer\n@param _spender holder address\n@param _value tokens amount\n@return result  ",
                "id": 1196,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1156,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1153,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "11221:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1152,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11221:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1155,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "11239:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11239:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11220:34:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1159,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1158,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "11271:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1157,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11271:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11270:14:0"
                },
                "scope": 1388,
                "src": "11204:275:0",
                "stateMutability": "nonpayable",
                "superFunction": 471,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1264,
                  "nodeType": "Block",
                  "src": "11604:321:0",
                  "statements": [
                    {
                      "assignments": [
                        1206
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1206,
                          "name": "k",
                          "nodeType": "VariableDeclaration",
                          "scope": 1265,
                          "src": "11612:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1205,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11612:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1208,
                      "initialValue": {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "offset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "11621:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "11612:15:0"
                    },
                    {
                      "assignments": [
                        1210
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1210,
                          "name": "ln",
                          "nodeType": "VariableDeclaration",
                          "scope": 1265,
                          "src": "11634:7:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1209,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11634:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1212,
                      "initialValue": {
                        "argumentTypes": null,
                        "id": 1211,
                        "name": "limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "11644:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "11634:15:0"
                    },
                    {
                      "body": {
                        "id": 1260,
                        "nodeType": "Block",
                        "src": "11671:231:0",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1216,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "11684:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1220,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1217,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "11693:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1219,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1218,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "11700:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11693:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11684:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11707:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11684:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1258,
                              "nodeType": "Block",
                              "src": "11871:24:0",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "11882:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 1255,
                                      "name": "k",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "11882:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1257,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11882:3:0"
                                }
                              ]
                            },
                            "id": 1259,
                            "nodeType": "IfStatement",
                            "src": "11680:215:0",
                            "trueBody": {
                              "id": 1254,
                              "nodeType": "Block",
                              "src": "11710:155:0",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1223,
                                        "name": "ownersIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 604,
                                        "src": "11721:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 1227,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1224,
                                          "name": "owners",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 600,
                                          "src": "11733:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1226,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1225,
                                          "name": "k",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1206,
                                          "src": "11740:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "11733:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "11721:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "hexValue": "66616c7365",
                                      "id": 1228,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11747:5:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "src": "11721:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1230,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11721:31:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1231,
                                        "name": "owners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 600,
                                        "src": "11763:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1233,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1232,
                                        "name": "k",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1206,
                                        "src": "11770:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "11763:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1234,
                                        "name": "owners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 600,
                                        "src": "11775:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1239,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1238,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1235,
                                            "name": "owners",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 600,
                                            "src": "11782:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1236,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "11782:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 1237,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11796:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "11782:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11775:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "11763:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1241,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11763:35:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1249,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1242,
                                        "name": "owners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 600,
                                        "src": "11809:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1244,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "11809:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1248,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1245,
                                          "name": "owners",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 600,
                                          "src": "11825:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1246,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "11825:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 1247,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11839:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "11825:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11809:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1250,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11809:31:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "--",
                                    "prefix": false,
                                    "src": "11851:4:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 1251,
                                      "name": "ln",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1210,
                                      "src": "11851:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1253,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11851:4:0"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1213,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "11663:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1214,
                          "name": "ln",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "11667:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11663:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1261,
                      "nodeType": "WhileStatement",
                      "src": "11656:246:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11915:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 1204,
                      "id": 1263,
                      "nodeType": "Return",
                      "src": "11908:11:0"
                    }
                  ]
                },
                "documentation": "@dev Trim owners with zero balance",
                "id": 1265,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "trim",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1201,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1198,
                      "name": "offset",
                      "nodeType": "VariableDeclaration",
                      "scope": 1265,
                      "src": "11555:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1197,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11555:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1200,
                      "name": "limit",
                      "nodeType": "VariableDeclaration",
                      "scope": 1265,
                      "src": "11568:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1199,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11568:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11554:25:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1204,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1203,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1265,
                      "src": "11598:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1202,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11598:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11597:6:0"
                },
                "scope": 1388,
                "src": "11541:384:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1273,
                  "nodeType": "Block",
                  "src": "12041:33:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1270,
                          "name": "owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "12055:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12055:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1269,
                      "id": 1272,
                      "nodeType": "Return",
                      "src": "12048:20:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1274,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getOwnersCount",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1266,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12000:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1269,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1268,
                      "name": "count",
                      "nodeType": "VariableDeclaration",
                      "scope": 1274,
                      "src": "12026:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12026:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12025:15:0"
                },
                "scope": 1388,
                "src": "11977:97:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1296,
                  "nodeType": "Block",
                  "src": "12163:130:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1279,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "12174:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12174:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1281,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "12192:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12174:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1294,
                        "nodeType": "Block",
                        "src": "12263:25:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12279:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 1278,
                            "id": 1293,
                            "nodeType": "Return",
                            "src": "12272:8:0"
                          }
                        ]
                      },
                      "id": 1295,
                      "nodeType": "IfStatement",
                      "src": "12170:118:0",
                      "trueBody": {
                        "id": 1291,
                        "nodeType": "Block",
                        "src": "12199:58:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1283,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2911,
                                        "src": "12216:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1284,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "12216:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 1285,
                                      "name": "start",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 588,
                                      "src": "12234:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12216:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1287,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "12215:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1288,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 591,
                                "src": "12243:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12215:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1278,
                            "id": 1290,
                            "nodeType": "Return",
                            "src": "12208:41:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 1297,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getCurrentPeriod",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1275,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12126:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1278,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1277,
                      "name": "N",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "12152:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12152:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12151:11:0"
                },
                "scope": 1388,
                "src": "12101:192:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1313,
                  "nodeType": "Block",
                  "src": "12358:99:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1308,
                                "name": "_propID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1299,
                                "src": "12409:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1309,
                                "name": "_endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1301,
                                "src": "12434:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1307,
                              "name": "_Prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "12386:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$__Prop_$609_storage_ptr_$",
                                "typeString": "type(struct ERC20Base._Prop storage pointer)"
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "propID",
                              "endTime"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "12386:64:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Prop_$609_memory",
                              "typeString": "struct ERC20Base._Prop memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$__Prop_$609_memory",
                              "typeString": "struct ERC20Base._Prop memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1304,
                            "name": "ActiveProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "12365:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                              "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                            }
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12365:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$__Prop_$609_storage_$returns$_t_uint256_$",
                            "typeString": "function (struct ERC20Base._Prop storage ref) returns (uint256)"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12365:86:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1312,
                      "nodeType": "ExpressionStatement",
                      "src": "12365:86:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1314,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "addProposal",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1302,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1299,
                      "name": "_propID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1314,
                      "src": "12320:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12320:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1301,
                      "name": "_endTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 1314,
                      "src": "12334:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1300,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12334:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12319:29:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1303,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12358:0:0"
                },
                "scope": 1388,
                "src": "12299:158:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1370,
                  "nodeType": "Block",
                  "src": "12507:353:0",
                  "statements": [
                    {
                      "assignments": [
                        1320
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1320,
                          "name": "k",
                          "nodeType": "VariableDeclaration",
                          "scope": 1371,
                          "src": "12514:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1319,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12514:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1322,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12523:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "12514:10:0"
                    },
                    {
                      "body": {
                        "id": 1368,
                        "nodeType": "Block",
                        "src": "12565:286:0",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1327,
                                    "name": "ActiveProposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "12578:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                      "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1329,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1328,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1320,
                                    "src": "12594:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12578:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Prop_$609_storage",
                                    "typeString": "struct ERC20Base._Prop storage ref"
                                  }
                                },
                                "id": 1330,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "propID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 606,
                                "src": "12578:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1331,
                                "name": "_propID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1316,
                                "src": "12607:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12578:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1366,
                              "nodeType": "Block",
                              "src": "12820:24:0",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "12831:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 1363,
                                      "name": "k",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1320,
                                      "src": "12831:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1365,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12831:3:0"
                                }
                              ]
                            },
                            "id": 1367,
                            "nodeType": "IfStatement",
                            "src": "12574:270:0",
                            "trueBody": {
                              "id": 1362,
                              "nodeType": "Block",
                              "src": "12616:198:0",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1339,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1334,
                                              "name": "ActiveProposals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 612,
                                              "src": "12635:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                                "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                              }
                                            },
                                            "id": 1336,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1335,
                                              "name": "k",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1320,
                                              "src": "12651:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12635:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$__Prop_$609_storage",
                                              "typeString": "struct ERC20Base._Prop storage ref"
                                            }
                                          },
                                          "id": 1337,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "endTime",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 608,
                                          "src": "12635:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 1338,
                                          "name": "now",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2923,
                                          "src": "12664:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12635:32:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1333,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        2924,
                                        2925
                                      ],
                                      "referencedDeclaration": 2924,
                                      "src": "12627:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                        "typeString": "function (bool) pure"
                                      }
                                    },
                                    "id": 1340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12627:41:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1341,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12627:41:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1342,
                                        "name": "ActiveProposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 612,
                                        "src": "12679:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                          "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1344,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1343,
                                        "name": "k",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1320,
                                        "src": "12695:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "12679:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__Prop_$609_storage",
                                        "typeString": "struct ERC20Base._Prop storage ref"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1345,
                                        "name": "ActiveProposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 612,
                                        "src": "12700:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                          "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1350,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1349,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1346,
                                            "name": "ActiveProposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 612,
                                            "src": "12716:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                              "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1347,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "12716:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 1348,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12739:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "12716:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12700:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__Prop_$609_storage",
                                        "typeString": "struct ERC20Base._Prop storage ref"
                                      }
                                    },
                                    "src": "12679:62:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__Prop_$609_storage",
                                      "typeString": "struct ERC20Base._Prop storage ref"
                                    }
                                  },
                                  "id": 1352,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12679:62:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1360,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1353,
                                        "name": "ActiveProposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 612,
                                        "src": "12752:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                          "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1355,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "12752:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1359,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1356,
                                          "name": "ActiveProposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 612,
                                          "src": "12777:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                                            "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                                          }
                                        },
                                        "id": 1357,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "12777:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 1358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12800:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "12777:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12752:49:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1361,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12752:49:0"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1323,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "12538:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1324,
                            "name": "ActiveProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "12542:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$__Prop_$609_storage_$dyn_storage",
                              "typeString": "struct ERC20Base._Prop storage ref[] storage ref"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12542:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12538:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1369,
                      "nodeType": "WhileStatement",
                      "src": "12531:320:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1371,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "delProposal",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1317,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1316,
                      "name": "_propID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "12484:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1315,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12484:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12483:14:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1318,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12507:0:0"
                },
                "scope": 1388,
                "src": "12463:397:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1386,
                  "nodeType": "Block",
                  "src": "12943:42:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1380,
                            "name": "voted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "12957:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(address => uint256))"
                            }
                          },
                          "id": 1382,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1381,
                            "name": "_propID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "12963:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12957:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1384,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1383,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1375,
                          "src": "12972:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12957:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1379,
                      "id": 1385,
                      "nodeType": "Return",
                      "src": "12950:29:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1387,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getVoted",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1376,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1373,
                      "name": "_propID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1387,
                      "src": "12884:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1372,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12884:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1375,
                      "name": "_voter",
                      "nodeType": "VariableDeclaration",
                      "scope": 1387,
                      "src": "12898:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12898:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12883:30:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1379,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1378,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1387,
                      "src": "12937:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1377,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12937:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12936:6:0"
                },
                "scope": 1388,
                "src": "12866:119:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              }
            ],
            "scope": 2907,
            "src": "6373:6615:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 1389,
                  "name": "ERC20Base",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1388,
                  "src": "13076:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Base_$1388",
                    "typeString": "contract ERC20Base"
                  }
                },
                "id": 1390,
                "nodeType": "InheritanceSpecifier",
                "src": "13076:9:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 1391,
                  "name": "Ownable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 558,
                  "src": "13087:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Ownable_$558",
                    "typeString": "contract Ownable"
                  }
                },
                "id": 1392,
                "nodeType": "InheritanceSpecifier",
                "src": "13087:7:0"
              }
            ],
            "contractDependencies": [
              488,
              558,
              182,
              1388
            ],
            "contractKind": "contract",
            "documentation": "@title Dividend Distribution Contract for DAO",
            "fullyImplemented": true,
            "id": 2077,
            "linearizedBaseContracts": [
              2077,
              558,
              1388,
              182,
              488
            ],
            "name": "Dividends",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 1394,
                "name": "DEX",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13102:19:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_DAppDEXI_$421",
                  "typeString": "contract DAppDEXI"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1393,
                  "name": "DAppDEXI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 421,
                  "src": "13102:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DAppDEXI_$421",
                    "typeString": "contract DAppDEXI"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1397,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13128:23:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13128:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1396,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "13128:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1401,
                "name": "tokensIndex",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13156:44:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 1400,
                  "keyType": {
                    "id": 1398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13165:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "13156:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 1399,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13176:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1407,
                "name": "dividends",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13209:60:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 1406,
                  "keyType": {
                    "id": 1402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13218:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "13209:43:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 1405,
                    "keyType": {
                      "id": 1403,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13235:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13226:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1404,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "13246:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1413,
                "name": "ownersbal",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13274:63:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 1412,
                  "keyType": {
                    "id": 1408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13283:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "13274:46:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 1411,
                    "keyType": {
                      "id": 1409,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13303:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13294:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1410,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "13314:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1421,
                "name": "AlreadyReceived",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13344:87:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                  "typeString": "mapping(uint256 => mapping(address => mapping(address => bool)))"
                },
                "typeName": {
                  "id": 1420,
                  "keyType": {
                    "id": 1414,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13353:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "13344:64:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                    "typeString": "mapping(uint256 => mapping(address => mapping(address => bool)))"
                  },
                  "valueType": {
                    "id": 1419,
                    "keyType": {
                      "id": 1415,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13370:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13361:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                      "typeString": "mapping(address => mapping(address => bool))"
                    },
                    "valueType": {
                      "id": 1418,
                      "keyType": {
                        "id": 1416,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13390:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "13381:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "valueType": {
                        "id": 1417,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13401:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1424,
                "name": "multiplier",
                "nodeType": "VariableDeclaration",
                "scope": 2077,
                "src": "13438:31:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1422,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "13438:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "313030303030",
                  "id": 1423,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "13463:6:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100000_by_1",
                    "typeString": "int_const 100000"
                  },
                  "value": "100000"
                },
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1430,
                "name": "Payment",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1429,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1426,
                      "indexed": true,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "13538:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1425,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13538:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1428,
                      "indexed": false,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "13562:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1427,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13562:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13537:37:0"
                },
                "src": "13524:51:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1434,
                "name": "setDEXContractEvent",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1433,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1432,
                      "indexed": false,
                      "name": "dex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1434,
                      "src": "13605:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1431,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13605:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13604:13:0"
                },
                "src": "13579:39:0"
              },
              {
                "body": {
                  "id": 1463,
                  "nodeType": "Block",
                  "src": "13667:116:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1440,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "13682:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13682:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1443,
                                  "name": "DEX",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1394,
                                  "src": "13704:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                    "typeString": "contract DAppDEXI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                    "typeString": "contract DAppDEXI"
                                  }
                                ],
                                "id": 1442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13696:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13696:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13682:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1439,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "13674:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13674:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1447,
                      "nodeType": "ExpressionStatement",
                      "src": "13674:35:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1451,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "13728:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1448,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "13716:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13716:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13716:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1453,
                      "nodeType": "ExpressionStatement",
                      "src": "13716:18:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1454,
                            "name": "tokensIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "13741:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1456,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1455,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "13753:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13741:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1457,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "13762:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13762:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13776:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13762:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13741:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1462,
                      "nodeType": "ExpressionStatement",
                      "src": "13741:36:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1464,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "AddToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1437,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1436,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1464,
                      "src": "13645:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1435,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13645:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13644:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1438,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13667:0:0"
                },
                "scope": 2077,
                "src": "13627:156:0",
                "stateMutability": "nonpayable",
                "superFunction": 563,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1510,
                  "nodeType": "Block",
                  "src": "13829:196:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1470,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "13844:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13844:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1473,
                                  "name": "DEX",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1394,
                                  "src": "13866:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                    "typeString": "contract DAppDEXI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                    "typeString": "contract DAppDEXI"
                                  }
                                ],
                                "id": 1472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13858:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13858:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13844:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1469,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "13836:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13836:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1477,
                      "nodeType": "ExpressionStatement",
                      "src": "13836:35:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1479,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1397,
                                "src": "13886:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1483,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1480,
                                  "name": "tokensIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "13893:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1482,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1481,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1466,
                                  "src": "13905:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13893:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13886:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13916:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "13886:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1478,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "13878:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13878:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1487,
                      "nodeType": "ExpressionStatement",
                      "src": "13878:40:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1488,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "13929:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1492,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1489,
                              "name": "tokensIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "13936:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1491,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1490,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1466,
                              "src": "13948:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13936:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13929:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1493,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "13958:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1498,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1494,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1397,
                                "src": "13965:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13965:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13979:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13965:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13958:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13929:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1500,
                      "nodeType": "ExpressionStatement",
                      "src": "13929:52:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1501,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "13988:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1503,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13988:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1504,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "14004:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14004:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14018:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "14004:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13988:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1509,
                      "nodeType": "ExpressionStatement",
                      "src": "13988:31:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1511,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "DelToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1467,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1466,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1511,
                      "src": "13807:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13807:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13806:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1468,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13829:0:0"
                },
                "scope": 2077,
                "src": "13789:236:0",
                "stateMutability": "nonpayable",
                "superFunction": 568,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1623,
                  "nodeType": "Block",
                  "src": "14135:570:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1519,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1515,
                              "src": "14151:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1520,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1397,
                                "src": "14160:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1521,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14160:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14151:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1518,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "14142:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14142:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1524,
                      "nodeType": "ExpressionStatement",
                      "src": "14142:32:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1526,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "14190:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1527,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1515,
                              "src": "14199:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14190:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1525,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "14181:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14181:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1530,
                      "nodeType": "ExpressionStatement",
                      "src": "14181:24:0"
                    },
                    {
                      "assignments": [
                        1532
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1532,
                          "name": "N",
                          "nodeType": "VariableDeclaration",
                          "scope": 1624,
                          "src": "14214:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1531,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "14214:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1540,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1533,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2911,
                                  "src": "14224:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "14224:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1535,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "14242:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14224:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1537,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14223:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1538,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "14251:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14223:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14214:43:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1542,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1532,
                              "src": "14279:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14283:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "14279:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1541,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "14270:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14270:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1546,
                      "nodeType": "ExpressionStatement",
                      "src": "14270:15:0"
                    },
                    {
                      "body": {
                        "id": 1621,
                        "nodeType": "Block",
                        "src": "14336:364:0",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1557,
                                    "name": "dividends",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1407,
                                    "src": "14348:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1559,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1558,
                                    "name": "N",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "14358:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14348:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1563,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1560,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1397,
                                    "src": "14361:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1562,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1561,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1548,
                                    "src": "14368:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14361:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14348:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14375:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14348:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": null,
                            "id": 1620,
                            "nodeType": "IfStatement",
                            "src": "14345:348:0",
                            "trueBody": {
                              "id": 1619,
                              "nodeType": "Block",
                              "src": "14379:314:0",
                              "statements": [
                                {
                                  "assignments": [
                                    1567
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 1567,
                                      "name": "amount",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 1624,
                                      "src": "14392:11:0",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 1566,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14392:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "value": null,
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 1577,
                                  "initialValue": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1570,
                                          "name": "tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1397,
                                          "src": "14420:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1572,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1571,
                                          "name": "k",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1548,
                                          "src": "14427:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14420:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1574,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2946,
                                            "src": "14439:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Dividends_$2077",
                                              "typeString": "contract Dividends"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Dividends_$2077",
                                              "typeString": "contract Dividends"
                                            }
                                          ],
                                          "id": 1573,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "14431:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 1575,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14431:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1568,
                                        "name": "DEX",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1394,
                                        "src": "14406:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                          "typeString": "contract DAppDEXI"
                                        }
                                      },
                                      "id": 1569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 286,
                                      "src": "14406:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address,address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 1576,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14406:39:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "14392:53:0"
                                },
                                {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1578,
                                      "name": "k",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1548,
                                      "src": "14462:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1579,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14467:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14462:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1617,
                                    "nodeType": "Block",
                                    "src": "14572:112:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1601,
                                                "name": "tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "14605:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1603,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1602,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1548,
                                                "src": "14612:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "14605:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "id": 1604,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1567,
                                              "src": "14616:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1598,
                                              "name": "DEX",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1394,
                                              "src": "14587:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                                "typeString": "contract DAppDEXI"
                                              }
                                            },
                                            "id": 1600,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "withdrawToken",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 277,
                                            "src": "14587:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                              "typeString": "function (address,uint256) external"
                                            }
                                          },
                                          "id": 1605,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14587:36:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1606,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14587:36:0"
                                      },
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1615,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1607,
                                                "name": "dividends",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1407,
                                                "src": "14638:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 1612,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1608,
                                                "name": "N",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1532,
                                                "src": "14648:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "14638:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1613,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1609,
                                                "name": "tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "14651:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1611,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1610,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1548,
                                                "src": "14658:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "14651:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "14638:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 1614,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1567,
                                            "src": "14664:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "14638:32:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1616,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14638:32:0"
                                      }
                                    ]
                                  },
                                  "id": 1618,
                                  "nodeType": "IfStatement",
                                  "src": "14458:226:0",
                                  "trueBody": {
                                    "id": 1597,
                                    "nodeType": "Block",
                                    "src": "14470:96:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 1584,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1567,
                                              "src": "14498:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1581,
                                              "name": "DEX",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1394,
                                              "src": "14485:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DAppDEXI_$421",
                                                "typeString": "contract DAppDEXI"
                                              }
                                            },
                                            "id": 1583,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "withdraw",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 270,
                                            "src": "14485:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                              "typeString": "function (uint256) external"
                                            }
                                          },
                                          "id": 1585,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14485:20:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1586,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14485:20:0"
                                      },
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1595,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1587,
                                                "name": "dividends",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1407,
                                                "src": "14520:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 1592,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1588,
                                                "name": "N",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1532,
                                                "src": "14530:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "14520:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1593,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1589,
                                                "name": "tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "14533:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1591,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1590,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1548,
                                                "src": "14540:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "14533:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "14520:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 1594,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1567,
                                            "src": "14546:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "14520:32:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1596,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14520:32:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1551,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1548,
                          "src": "14320:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1552,
                          "name": "limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1515,
                          "src": "14324:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14320:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1622,
                      "initializationExpression": {
                        "assignments": [
                          1548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1548,
                            "name": "k",
                            "nodeType": "VariableDeclaration",
                            "scope": 1624,
                            "src": "14303:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1547,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14303:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1550,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1549,
                          "name": "offset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1513,
                          "src": "14312:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14303:15:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "14331:3:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 1554,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1548,
                            "src": "14331:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1556,
                        "nodeType": "ExpressionStatement",
                        "src": "14331:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "14298:402:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1624,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "TakeProfit",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1516,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1513,
                      "name": "offset",
                      "nodeType": "VariableDeclaration",
                      "scope": 1624,
                      "src": "14101:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1512,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14101:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1515,
                      "name": "limit",
                      "nodeType": "VariableDeclaration",
                      "scope": 1624,
                      "src": "14114:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1514,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14114:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "14100:25:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1517,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14135:0:0"
                },
                "scope": 2077,
                "src": "14081:624:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1634,
                  "nodeType": "Block",
                  "src": "14738:50:0",
                  "statements": [
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1628,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "14760:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14760:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1630,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "14772:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14772:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1627,
                          "name": "Payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1430,
                          "src": "14752:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14752:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1633,
                      "nodeType": "EmitStatement",
                      "src": "14747:35:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1635,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1625,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14720:2:0"
                },
                "payable": true,
                "returnParameters": {
                  "id": 1626,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14738:0:0"
                },
                "scope": 2077,
                "src": "14711:77:0",
                "stateMutability": "payable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1793,
                  "nodeType": "Block",
                  "src": "14896:920:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1645,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "14956:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1646,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 600,
                                "src": "14965:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14965:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14956:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1644,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "14947:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14947:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1650,
                      "nodeType": "ExpressionStatement",
                      "src": "14947:32:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1652,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1639,
                              "src": "14995:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1653,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "15004:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14995:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1651,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "14986:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14986:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1656,
                      "nodeType": "ExpressionStatement",
                      "src": "14986:24:0"
                    },
                    {
                      "assignments": [
                        1658
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1658,
                          "name": "N",
                          "nodeType": "VariableDeclaration",
                          "scope": 1794,
                          "src": "15019:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1657,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "15019:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1666,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1659,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2911,
                                  "src": "15029:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15029:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1661,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "15047:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15029:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1663,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15028:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1664,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "15056:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15028:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15019:43:0"
                    },
                    {
                      "assignments": [
                        1668
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1668,
                          "name": "date",
                          "nodeType": "VariableDeclaration",
                          "scope": 1794,
                          "src": "15084:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1667,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "15084:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1676,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1669,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "15096:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1670,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1658,
                              "src": "15104:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1671,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "15108:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15104:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15096:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15117:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15096:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15084:34:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1678,
                                  "name": "dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1407,
                                  "src": "15139:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                                  }
                                },
                                "id": 1680,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1679,
                                  "name": "N",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1658,
                                  "src": "15149:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15139:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1682,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1681,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1637,
                                "src": "15152:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15139:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15161:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "15139:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1677,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "15131:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15131:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1686,
                      "nodeType": "ExpressionStatement",
                      "src": "15131:32:0"
                    },
                    {
                      "assignments": [
                        1688
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1688,
                          "name": "share",
                          "nodeType": "VariableDeclaration",
                          "scope": 1794,
                          "src": "15172:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1687,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "15172:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1690,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15185:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15172:14:0"
                    },
                    {
                      "assignments": [
                        1692
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1692,
                          "name": "k",
                          "nodeType": "VariableDeclaration",
                          "scope": 1794,
                          "src": "15193:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1691,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "15193:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1694,
                      "initialValue": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15202:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15193:10:0"
                    },
                    {
                      "body": {
                        "id": 1791,
                        "nodeType": "Block",
                        "src": "15243:568:0",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "id": 1714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "15256:37:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1705,
                                      "name": "AlreadyReceived",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1421,
                                      "src": "15257:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => mapping(address => bool)))"
                                      }
                                    },
                                    "id": 1707,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1706,
                                      "name": "N",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1658,
                                      "src": "15273:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15257:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 1709,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1708,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1637,
                                    "src": "15276:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15257:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1713,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1710,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "15283:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1712,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1711,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1692,
                                    "src": "15290:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15283:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15257:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": null,
                            "id": 1790,
                            "nodeType": "IfStatement",
                            "src": "15252:552:0",
                            "trueBody": {
                              "id": 1789,
                              "nodeType": "Block",
                              "src": "15295:509:0",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1725,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 1715,
                                      "name": "share",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1688,
                                      "src": "15306:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1718,
                                                "name": "owners",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 600,
                                                "src": "15332:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1720,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1719,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1692,
                                                "src": "15339:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "15332:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "id": 1721,
                                              "name": "date",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1668,
                                              "src": "15343:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1717,
                                            "name": "balanceOf",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              638,
                                              729
                                            ],
                                            "referencedDeclaration": 729,
                                            "src": "15322:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                              "typeString": "function (address,uint256) view returns (uint256)"
                                            }
                                          },
                                          "id": 1722,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15322:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1723,
                                          "name": "multiplier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1424,
                                          "src": "15350:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1716,
                                        "name": "safeMul",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "15314:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1724,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15314:47:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15306:55:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1726,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15306:55:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1735,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 1727,
                                      "name": "share",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1688,
                                      "src": "15372:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 1730,
                                              "name": "share",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1688,
                                              "src": "15396:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 1731,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15403:3:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "id": 1729,
                                            "name": "safeMul",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 100,
                                            "src": "15388:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1732,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15388:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1733,
                                          "name": "totalSupply_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 575,
                                          "src": "15409:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1728,
                                        "name": "safeDiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "15380:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1734,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15380:42:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15372:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1736,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15372:50:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1746,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 1737,
                                      "name": "share",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1688,
                                      "src": "15490:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1739,
                                              "name": "dividends",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1407,
                                              "src": "15507:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                                              }
                                            },
                                            "id": 1741,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1740,
                                              "name": "N",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1658,
                                              "src": "15517:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15507:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1743,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1742,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1637,
                                            "src": "15520:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15507:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1744,
                                          "name": "share",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1688,
                                          "src": "15528:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1738,
                                        "name": "safePerc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 139,
                                        "src": "15498:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15498:36:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15490:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1747,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15490:44:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 1748,
                                      "name": "share",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1688,
                                      "src": "15545:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1750,
                                          "name": "share",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1688,
                                          "src": "15561:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 1752,
                                              "name": "multiplier",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1424,
                                              "src": "15576:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 1753,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15588:3:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "id": 1751,
                                            "name": "safeDiv",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67,
                                            "src": "15568:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1754,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15568:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1749,
                                        "name": "safeDiv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "15553:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1755,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15553:40:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15545:48:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1757,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15545:48:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1775,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1758,
                                          "name": "ownersbal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1413,
                                          "src": "15667:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 1763,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1759,
                                            "name": "owners",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 600,
                                            "src": "15677:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1761,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1760,
                                            "name": "k",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1692,
                                            "src": "15684:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15677:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15667:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1764,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1762,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1637,
                                        "src": "15688:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "15667:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1766,
                                              "name": "ownersbal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1413,
                                              "src": "15705:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                "typeString": "mapping(address => mapping(address => uint256))"
                                              }
                                            },
                                            "id": 1770,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1767,
                                                "name": "owners",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 600,
                                                "src": "15715:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1769,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1768,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1692,
                                                "src": "15722:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "15715:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15705:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1772,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1771,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1637,
                                            "src": "15726:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15705:27:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1773,
                                          "name": "share",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1688,
                                          "src": "15734:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1765,
                                        "name": "safeAdd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49,
                                        "src": "15697:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1774,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15697:43:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15667:73:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1776,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15667:73:0"
                                },
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1777,
                                            "name": "AlreadyReceived",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1421,
                                            "src": "15751:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                                              "typeString": "mapping(uint256 => mapping(address => mapping(address => bool)))"
                                            }
                                          },
                                          "id": 1783,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1778,
                                            "name": "N",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1658,
                                            "src": "15767:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15751:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                            "typeString": "mapping(address => mapping(address => bool))"
                                          }
                                        },
                                        "id": 1784,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1779,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1637,
                                          "src": "15770:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15751:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 1785,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1780,
                                          "name": "owners",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 600,
                                          "src": "15777:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1782,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1781,
                                          "name": "k",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1692,
                                          "src": "15784:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15777:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "15751:36:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "hexValue": "74727565",
                                      "id": 1786,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15790:4:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "15751:43:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1788,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15751:43:0"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1699,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "15227:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1700,
                          "name": "limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "15231:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15227:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1792,
                      "initializationExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1695,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "15215:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1696,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "15219:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15215:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "15215:10:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "15238:3:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 1702,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "15238:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1704,
                        "nodeType": "ExpressionStatement",
                        "src": "15238:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "15210:601:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1794,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "PayDividends",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1642,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1637,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "14847:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1636,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14847:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1639,
                      "name": "offset",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "14862:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1638,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14862:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1641,
                      "name": "limit",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "14875:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1640,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14875:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "14846:40:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1643,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14896:0:0"
                },
                "scope": 2077,
                "src": "14825:991:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1910,
                  "nodeType": "Block",
                  "src": "15913:765:0",
                  "statements": [
                    {
                      "assignments": [
                        1800
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1800,
                          "name": "N",
                          "nodeType": "VariableDeclaration",
                          "scope": 1911,
                          "src": "15966:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1799,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "15966:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1808,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1801,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2911,
                                  "src": "15976:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15976:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1803,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "15994:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15976:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1805,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15975:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1806,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "16003:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15975:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15966:43:0"
                    },
                    {
                      "assignments": [
                        1810
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1810,
                          "name": "date",
                          "nodeType": "VariableDeclaration",
                          "scope": 1911,
                          "src": "16031:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1809,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "16031:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1818,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1811,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "16043:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1812,
                              "name": "N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1800,
                              "src": "16051:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1813,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "16055:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16051:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16043:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16064:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16043:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "16031:34:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1820,
                                  "name": "dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1407,
                                  "src": "16082:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                                  }
                                },
                                "id": 1822,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1821,
                                  "name": "N",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1800,
                                  "src": "16092:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16082:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1824,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1823,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1796,
                                "src": "16095:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16082:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16104:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "16082:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1819,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "16074:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16074:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1828,
                      "nodeType": "ExpressionStatement",
                      "src": "16074:32:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16123:38:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1829,
                                "name": "AlreadyReceived",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1421,
                                "src": "16124:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => mapping(address => bool)))"
                                }
                              },
                              "id": 1831,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1830,
                                "name": "N",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1800,
                                "src": "16140:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16124:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 1833,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1832,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1796,
                              "src": "16143:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16124:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1836,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1834,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "16150:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "16150:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16124:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1909,
                      "nodeType": "IfStatement",
                      "src": "16119:554:0",
                      "trueBody": {
                        "id": 1908,
                        "nodeType": "Block",
                        "src": "16163:510:0",
                        "statements": [
                          {
                            "assignments": [
                              1839
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1839,
                                "name": "share",
                                "nodeType": "VariableDeclaration",
                                "scope": 1911,
                                "src": "16178:10:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1838,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16178:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 1848,
                            "initialValue": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1842,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2921,
                                        "src": "16209:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "16209:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 1844,
                                      "name": "date",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1810,
                                      "src": "16221:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1841,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      638,
                                      729
                                    ],
                                    "referencedDeclaration": 729,
                                    "src": "16199:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16199:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1846,
                                  "name": "multiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "16228:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1840,
                                "name": "safeMul",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "16191:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16191:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "16178:61:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 1849,
                                "name": "share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1839,
                                "src": "16248:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1852,
                                        "name": "share",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1839,
                                        "src": "16272:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1853,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16279:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "id": 1851,
                                      "name": "safeMul",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 100,
                                      "src": "16264:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16264:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1855,
                                    "name": "totalSupply_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 575,
                                    "src": "16285:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1850,
                                  "name": "safeDiv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "16256:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16256:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16248:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1858,
                            "nodeType": "ExpressionStatement",
                            "src": "16248:50:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 1859,
                                "name": "share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1839,
                                "src": "16364:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1861,
                                        "name": "dividends",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1407,
                                        "src": "16381:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                                        }
                                      },
                                      "id": 1863,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1862,
                                        "name": "N",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1800,
                                        "src": "16391:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16381:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1865,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1864,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1796,
                                      "src": "16394:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16381:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1866,
                                    "name": "share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1839,
                                    "src": "16402:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1860,
                                  "name": "safePerc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139,
                                  "src": "16372:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16372:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16364:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1869,
                            "nodeType": "ExpressionStatement",
                            "src": "16364:44:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 1870,
                                "name": "share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1839,
                                "src": "16417:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1872,
                                    "name": "share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1839,
                                    "src": "16433:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1874,
                                        "name": "multiplier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1424,
                                        "src": "16448:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16460:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "id": 1873,
                                      "name": "safeDiv",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "16440:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16440:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1871,
                                  "name": "safeDiv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "16425:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16425:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16417:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1879,
                            "nodeType": "ExpressionStatement",
                            "src": "16417:48:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1880,
                                    "name": "ownersbal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1413,
                                    "src": "16537:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1884,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1881,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2921,
                                      "src": "16547:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "16547:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16537:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1885,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1883,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1796,
                                  "src": "16559:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "16537:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1887,
                                        "name": "ownersbal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1413,
                                        "src": "16576:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                          "typeString": "mapping(address => mapping(address => uint256))"
                                        }
                                      },
                                      "id": 1890,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1888,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2921,
                                          "src": "16586:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1889,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "16586:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16576:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1892,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1891,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1796,
                                      "src": "16598:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16576:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1893,
                                    "name": "share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1839,
                                    "src": "16606:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1886,
                                  "name": "safeAdd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "16568:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16568:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16537:75:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1896,
                            "nodeType": "ExpressionStatement",
                            "src": "16537:75:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1897,
                                      "name": "AlreadyReceived",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1421,
                                      "src": "16621:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => mapping(address => bool)))"
                                      }
                                    },
                                    "id": 1902,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1898,
                                      "name": "N",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1800,
                                      "src": "16637:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16621:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 1903,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1899,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1796,
                                    "src": "16640:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16621:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1904,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1900,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "16647:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1901,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "16647:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "16621:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16661:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "16621:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1907,
                            "nodeType": "ExpressionStatement",
                            "src": "16621:44:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 1911,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "PayDividends",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1797,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1796,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1911,
                      "src": "15889:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1795,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15889:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "15888:15:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1798,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15913:0:0"
                },
                "scope": 2077,
                "src": "15867:811:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1971,
                  "nodeType": "Block",
                  "src": "16764:287:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1919,
                                  "name": "ownersbal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1413,
                                  "src": "16783:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 1922,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1920,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "16793:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1921,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "16793:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16783:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1924,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1923,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1913,
                                "src": "16805:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16783:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1925,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "16815:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16783:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1918,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "16775:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16775:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1928,
                      "nodeType": "ExpressionStatement",
                      "src": "16775:47:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1929,
                              "name": "ownersbal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1413,
                              "src": "16829:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1933,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1930,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "16839:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "16839:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16829:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1934,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1932,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1913,
                            "src": "16851:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "16829:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1936,
                                  "name": "ownersbal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1413,
                                  "src": "16868:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 1939,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1937,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "16878:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "16878:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16868:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1941,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1940,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1913,
                                "src": "16890:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16868:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1942,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "16898:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1935,
                            "name": "safeSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "16860:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16860:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16829:76:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1945,
                      "nodeType": "ExpressionStatement",
                      "src": "16829:76:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1946,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1913,
                          "src": "16916:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16933:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16925:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16925:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16916:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1969,
                        "nodeType": "Block",
                        "src": "16987:59:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1964,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "17019:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "17019:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1966,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1915,
                                  "src": "17031:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1961,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1913,
                                      "src": "17003:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1960,
                                    "name": "ERC20I",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 488,
                                    "src": "16996:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20I_$488_$",
                                      "typeString": "type(contract ERC20I)"
                                    }
                                  },
                                  "id": 1962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16996:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20I_$488",
                                    "typeString": "contract ERC20I"
                                  }
                                },
                                "id": 1963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 442,
                                "src": "16996:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16996:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1968,
                            "nodeType": "ExpressionStatement",
                            "src": "16996:42:0"
                          }
                        ]
                      },
                      "id": 1970,
                      "nodeType": "IfStatement",
                      "src": "16912:134:0",
                      "trueBody": {
                        "id": 1959,
                        "nodeType": "Block",
                        "src": "16937:44:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1956,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1915,
                                  "src": "16966:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1951,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "16946:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "16946:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "16946:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 1957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16946:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1958,
                            "nodeType": "ExpressionStatement",
                            "src": "16946:27:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 1972,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "withdraw",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1916,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1913,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1972,
                      "src": "16727:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16727:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1915,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 1972,
                      "src": "16742:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1914,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16742:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "16726:28:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1917,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "16764:0:0"
                },
                "scope": 2077,
                "src": "16709:342:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 2031,
                  "nodeType": "Block",
                  "src": "17169:289:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1982,
                                  "name": "ownersbal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1413,
                                  "src": "17188:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 1985,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1983,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "17198:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1984,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "17198:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17188:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1987,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1986,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1974,
                                "src": "17210:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17188:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1988,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "17220:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17188:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1981,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "17180:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17180:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1991,
                      "nodeType": "ExpressionStatement",
                      "src": "17180:47:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1992,
                              "name": "ownersbal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1413,
                              "src": "17234:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1996,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1993,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "17244:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "17244:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17234:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1997,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1995,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1974,
                            "src": "17256:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "17234:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1999,
                                  "name": "ownersbal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1413,
                                  "src": "17273:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 2002,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2000,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2921,
                                    "src": "17283:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "17283:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17273:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2004,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2003,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1974,
                                "src": "17295:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17273:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2005,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "17303:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1998,
                            "name": "safeSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17265:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17265:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17234:76:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2008,
                      "nodeType": "ExpressionStatement",
                      "src": "17234:76:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2009,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1974,
                          "src": "17321:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17338:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17330:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17330:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17321:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2029,
                        "nodeType": "Block",
                        "src": "17391:58:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2025,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1978,
                                  "src": "17423:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2026,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1976,
                                  "src": "17434:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2022,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1974,
                                      "src": "17407:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2021,
                                    "name": "ERC20I",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 488,
                                    "src": "17400:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20I_$488_$",
                                      "typeString": "type(contract ERC20I)"
                                    }
                                  },
                                  "id": 2023,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17400:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20I_$488",
                                    "typeString": "contract ERC20I"
                                  }
                                },
                                "id": 2024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 442,
                                "src": "17400:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17400:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2028,
                            "nodeType": "ExpressionStatement",
                            "src": "17400:41:0"
                          }
                        ]
                      },
                      "id": 2030,
                      "nodeType": "IfStatement",
                      "src": "17317:132:0",
                      "trueBody": {
                        "id": 2020,
                        "nodeType": "Block",
                        "src": "17342:43:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2017,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1976,
                                  "src": "17370:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2014,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1978,
                                  "src": "17351:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "17351:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17351:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2019,
                            "nodeType": "ExpressionStatement",
                            "src": "17351:26:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 2032,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "withdraw",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1979,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1974,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2032,
                      "src": "17113:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1973,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1976,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 2032,
                      "src": "17128:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1975,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17128:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1978,
                      "name": "_receiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 2032,
                      "src": "17141:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1977,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17141:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "17112:47:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1980,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "17169:0:0"
                },
                "scope": 2077,
                "src": "17095:363:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 2049,
                  "nodeType": "Block",
                  "src": "17519:58:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2040,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2034,
                              "src": "17534:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17543:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "17534:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2039,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "17526:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17526:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2044,
                      "nodeType": "ExpressionStatement",
                      "src": "17526:19:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2045,
                          "name": "multiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1424,
                          "src": "17552:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2046,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2034,
                          "src": "17565:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17552:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2048,
                      "nodeType": "ExpressionStatement",
                      "src": "17552:19:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2050,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2037,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2036,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "17509:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "17509:9:0"
                  }
                ],
                "name": "setMultiplier",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2035,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2034,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 2050,
                      "src": "17487:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2033,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17487:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "17486:13:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2038,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "17519:0:0"
                },
                "scope": 2077,
                "src": "17464:113:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 2057,
                  "nodeType": "Block",
                  "src": "17640:30:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2055,
                        "name": "multiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1424,
                        "src": "17654:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2054,
                      "id": 2056,
                      "nodeType": "Return",
                      "src": "17647:17:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2058,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getMultiplier",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2051,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "17607:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2054,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2053,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 2058,
                      "src": "17633:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2052,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17633:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "17632:7:0"
                },
                "scope": 2077,
                "src": "17585:85:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 2075,
                  "nodeType": "Block",
                  "src": "17767:80:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2065,
                          "name": "DEX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "17774:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DAppDEXI_$421",
                            "typeString": "contract DAppDEXI"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2067,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2060,
                              "src": "17789:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2066,
                            "name": "DAppDEXI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "17780:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_DAppDEXI_$421_$",
                              "typeString": "type(contract DAppDEXI)"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17780:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DAppDEXI_$421",
                            "typeString": "contract DAppDEXI"
                          }
                        },
                        "src": "17774:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DAppDEXI_$421",
                          "typeString": "contract DAppDEXI"
                        }
                      },
                      "id": 2070,
                      "nodeType": "ExpressionStatement",
                      "src": "17774:25:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2072,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2060,
                            "src": "17831:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2071,
                          "name": "setDEXContractEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1434,
                          "src": "17811:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17811:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2074,
                      "nodeType": "EmitStatement",
                      "src": "17806:35:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2076,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2063,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2062,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "17757:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "17757:9:0"
                  }
                ],
                "name": "setDEXContract",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2061,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2060,
                      "name": "_contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2076,
                      "src": "17729:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2059,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17729:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "17728:19:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2064,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "17767:0:0"
                },
                "scope": 2077,
                "src": "17705:142:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              }
            ],
            "scope": 2907,
            "src": "13054:4796:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": "@title External interface for DAO",
            "fullyImplemented": false,
            "id": 2093,
            "linearizedBaseContracts": [
              2093
            ],
            "name": "CommonI",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 2082,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transferOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2080,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2079,
                      "name": "_newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "17956:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2078,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "17955:19:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2081,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "17983:0:0"
                },
                "scope": 2093,
                "src": "17929:55:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 2085,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "acceptOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2083,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "18014:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2084,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "18025:0:0"
                },
                "scope": 2093,
                "src": "17990:36:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 2092,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "updateAgent",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2090,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2087,
                      "name": "_agent",
                      "nodeType": "VariableDeclaration",
                      "scope": 2092,
                      "src": "18053:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2086,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18053:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2089,
                      "name": "_state",
                      "nodeType": "VariableDeclaration",
                      "scope": 2092,
                      "src": "18069:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2088,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18069:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "18052:29:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2091,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "18090:0:0"
                },
                "scope": 2093,
                "src": "18032:59:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              }
            ],
            "scope": 2907,
            "src": "17904:194:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2094,
                  "name": "Dividends",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2077,
                  "src": "18179:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Dividends_$2077",
                    "typeString": "contract Dividends"
                  }
                },
                "id": 2095,
                "nodeType": "InheritanceSpecifier",
                "src": "18179:9:0"
              }
            ],
            "contractDependencies": [
              488,
              558,
              182,
              1388,
              2077
            ],
            "contractKind": "contract",
            "documentation": "@title Decentralized Autonomous Organization",
            "fullyImplemented": true,
            "id": 2656,
            "linearizedBaseContracts": [
              2656,
              2077,
              558,
              1388,
              182,
              488
            ],
            "name": "DAO",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 2098,
                "name": "minBalance",
                "nodeType": "VariableDeclaration",
                "scope": 2656,
                "src": "18264:31:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2096,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "18264:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "31303030303030303030303030",
                  "id": 2097,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "18282:13:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  },
                  "value": "1000000000000"
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2100,
                "name": "minimumQuorum",
                "nodeType": "VariableDeclaration",
                "scope": 2656,
                "src": "18377:25:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2099,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "18377:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2102,
                "name": "debatingPeriodDuration",
                "nodeType": "VariableDeclaration",
                "scope": 2656,
                "src": "18442:34:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2101,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "18442:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2104,
                "name": "requisiteMajority",
                "nodeType": "VariableDeclaration",
                "scope": 2656,
                "src": "18553:29:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2103,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "18553:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "canonicalName": "DAO._Proposal",
                "id": 2127,
                "members": [
                  {
                    "constant": false,
                    "id": 2106,
                    "name": "endTimeOfVoting",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "18676:20:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2105,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "18676:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2108,
                    "name": "executed",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "18738:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2107,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "18738:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2110,
                    "name": "proposalPassed",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "18791:19:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2109,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "18791:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2112,
                    "name": "numberOfVotes",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "18863:18:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2111,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "18863:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2114,
                    "name": "votesSupport",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "18924:17:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2113,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "18924:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2116,
                    "name": "votesAgainst",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "18978:17:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2115,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "18978:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2118,
                    "name": "recipient",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "19098:17:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19098:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2120,
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "19205:11:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2119,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "19205:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2122,
                    "name": "transactionHash",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "19308:23:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 2121,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "19308:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2124,
                    "name": "desc",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "19397:11:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 2123,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "19397:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2126,
                    "name": "fullDescHash",
                    "nodeType": "VariableDeclaration",
                    "scope": 2127,
                    "src": "19490:19:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 2125,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "19490:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "_Proposal",
                "nodeType": "StructDefinition",
                "scope": 2656,
                "src": "18591:926:0",
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2130,
                "name": "Proposals",
                "nodeType": "VariableDeclaration",
                "scope": 2656,
                "src": "19525:28:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                  "typeString": "struct DAO._Proposal[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 2128,
                    "name": "_Proposal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2127,
                    "src": "19525:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                      "typeString": "struct DAO._Proposal"
                    }
                  },
                  "id": 2129,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "19525:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage_ptr",
                    "typeString": "struct DAO._Proposal[]"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2142,
                "name": "ProposalAdded",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2141,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2132,
                      "indexed": false,
                      "name": "proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "19582:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2131,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19582:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2134,
                      "indexed": false,
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "19599:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2133,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19599:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2136,
                      "indexed": false,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "19618:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2135,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19618:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2138,
                      "indexed": false,
                      "name": "description",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "19631:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2137,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "19631:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2140,
                      "indexed": false,
                      "name": "fullDescHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "19651:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2139,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "19651:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "19581:90:0"
                },
                "src": "19562:110:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2152,
                "name": "Voted",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2151,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2144,
                      "indexed": false,
                      "name": "proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2152,
                      "src": "19690:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19690:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2146,
                      "indexed": false,
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "scope": 2152,
                      "src": "19707:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2145,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19707:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2148,
                      "indexed": false,
                      "name": "voter",
                      "nodeType": "VariableDeclaration",
                      "scope": 2152,
                      "src": "19722:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2147,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19722:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2150,
                      "indexed": false,
                      "name": "justification",
                      "nodeType": "VariableDeclaration",
                      "scope": 2152,
                      "src": "19737:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2149,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "19737:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "19689:69:0"
                },
                "src": "19678:81:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2164,
                "name": "ProposalTallied",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2163,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2154,
                      "indexed": false,
                      "name": "proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2164,
                      "src": "19787:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2153,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19787:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2156,
                      "indexed": false,
                      "name": "votesSupport",
                      "nodeType": "VariableDeclaration",
                      "scope": 2164,
                      "src": "19804:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2155,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19804:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2158,
                      "indexed": false,
                      "name": "votesAgainst",
                      "nodeType": "VariableDeclaration",
                      "scope": 2164,
                      "src": "19823:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2157,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19823:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2160,
                      "indexed": false,
                      "name": "quorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 2164,
                      "src": "19842:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2159,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19842:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2162,
                      "indexed": false,
                      "name": "active",
                      "nodeType": "VariableDeclaration",
                      "scope": 2164,
                      "src": "19855:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2161,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19855:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "19786:81:0"
                },
                "src": "19765:103:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2172,
                "name": "ChangeOfRules",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2171,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2166,
                      "indexed": false,
                      "name": "newMinimumQuorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 2172,
                      "src": "19898:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2165,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19898:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2168,
                      "indexed": false,
                      "name": "newdebatingPeriodDuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 2172,
                      "src": "19921:30:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2167,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19921:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2170,
                      "indexed": false,
                      "name": "newRequisiteMajority",
                      "nodeType": "VariableDeclaration",
                      "scope": 2172,
                      "src": "19953:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2169,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19953:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "19897:82:0"
                },
                "src": "19878:102:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2178,
                "name": "Payment",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2177,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2174,
                      "indexed": true,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 2178,
                      "src": "20000:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2173,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20000:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2176,
                      "indexed": false,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2178,
                      "src": "20024:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2175,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20024:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "19999:37:0"
                },
                "src": "19986:51:0"
              },
              {
                "body": {
                  "id": 2190,
                  "nodeType": "Block",
                  "src": "20150:64:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2181,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "20169:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2184,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2182,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "20178:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "20178:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20169:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20192:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "20169:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2180,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "20161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20161:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2188,
                      "nodeType": "ExpressionStatement",
                      "src": "20161:33:0"
                    },
                    {
                      "id": 2189,
                      "nodeType": "PlaceholderStatement",
                      "src": "20205:1:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2191,
                "name": "onlyMembers",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 2179,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "20150:0:0"
                },
                "src": "20129:85:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2220,
                  "nodeType": "Block",
                  "src": "20944:246:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2202,
                          "name": "minimumQuorum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2100,
                          "src": "20955:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2203,
                          "name": "_minimumQuorum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "20971:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20955:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2205,
                      "nodeType": "ExpressionStatement",
                      "src": "20955:30:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2206,
                          "name": "debatingPeriodDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2102,
                          "src": "20996:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2207,
                          "name": "_debatingPeriodDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2195,
                          "src": "21021:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20996:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2209,
                      "nodeType": "ExpressionStatement",
                      "src": "20996:48:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2210,
                          "name": "requisiteMajority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2104,
                          "src": "21055:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2211,
                          "name": "_requisiteMajority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "21075:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21055:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2213,
                      "nodeType": "ExpressionStatement",
                      "src": "21055:38:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2215,
                            "name": "minimumQuorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2100,
                            "src": "21125:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2216,
                            "name": "debatingPeriodDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2102,
                            "src": "21140:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2217,
                            "name": "requisiteMajority",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2104,
                            "src": "21164:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2214,
                          "name": "ChangeOfRules",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2172,
                          "src": "21111:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256,uint256)"
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21111:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2219,
                      "nodeType": "EmitStatement",
                      "src": "21106:76:0"
                    }
                  ]
                },
                "documentation": "Change voting rules\n\n     * Make so that Proposals need to be discussed for at least `_debatingPeriodDuration/60` hours,\nhave at least `_minimumQuorum` votes, and have 50% + `_requisiteMajority` votes to be executed\n\n     * @param _minimumQuorum how many members must vote on a proposal for it to be executed\n@param _debatingPeriodDuration the minimum amount of delay between when a proposal is made and when it can be executed\n@param _requisiteMajority the proposal needs to have 50% plus this number",
                "id": 2221,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2200,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2199,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "20927:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "20927:9:0"
                  }
                ],
                "name": "changeVotingRules",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2198,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2193,
                      "name": "_minimumQuorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "20827:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2192,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20827:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2195,
                      "name": "_debatingPeriodDuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "20857:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2194,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20857:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2197,
                      "name": "_requisiteMajority",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "20896:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2196,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20896:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "20816:110:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2201,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "20944:0:0"
                },
                "scope": 2656,
                "src": "20790:400:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2319,
                  "nodeType": "Block",
                  "src": "21838:1009:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2241,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "21857:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2244,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2242,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "21866:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "21866:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21857:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2245,
                              "name": "minBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2098,
                              "src": "21880:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21857:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2240,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "21849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21849:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2248,
                      "nodeType": "ExpressionStatement",
                      "src": "21849:42:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2249,
                          "name": "_debatingPeriodDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2233,
                          "src": "21908:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21935:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21908:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 2257,
                      "nodeType": "IfStatement",
                      "src": "21904:109:0",
                      "trueBody": {
                        "id": 2256,
                        "nodeType": "Block",
                        "src": "21938:75:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 2252,
                                "name": "_debatingPeriodDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2233,
                                "src": "21953:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "id": 2253,
                                "name": "debatingPeriodDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "21979:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21953:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2255,
                            "nodeType": "ExpressionStatement",
                            "src": "21953:48:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2262,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2923,
                                  "src": "22088:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2263,
                                    "name": "_debatingPeriodDuration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2233,
                                    "src": "22094:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 2264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22120:9:0",
                                    "subdenomination": "minutes",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "1"
                                  },
                                  "src": "22094:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22088:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22154:5:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 2268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22190:5:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22225:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22255:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22285:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "id": 2272,
                                "name": "_recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2223,
                                "src": "22312:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2273,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2225,
                                "src": "22345:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2277,
                                        "name": "_recipient",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2223,
                                        "src": "22411:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 2278,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2225,
                                        "src": "22423:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 2279,
                                        "name": "_transactionByteCode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2231,
                                        "src": "22432:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2275,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2908,
                                        "src": "22394:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 2276,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "22394:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 2280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22394:59:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2274,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2915,
                                  "src": "22384:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                    "typeString": "function () pure returns (bytes32)"
                                  }
                                },
                                "id": 2281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22384:70:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2282,
                                "name": "_desc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2227,
                                "src": "22475:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2283,
                                "name": "_fullDescHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2229,
                                "src": "22509:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2261,
                              "name": "_Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "22040:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$__Proposal_$2127_storage_ptr_$",
                                "typeString": "type(struct DAO._Proposal storage pointer)"
                              }
                            },
                            "id": 2284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "endTimeOfVoting",
                              "executed",
                              "proposalPassed",
                              "numberOfVotes",
                              "votesSupport",
                              "votesAgainst",
                              "recipient",
                              "amount",
                              "transactionHash",
                              "desc",
                              "fullDescHash"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "22040:494:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_memory",
                              "typeString": "struct DAO._Proposal memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$__Proposal_$2127_memory",
                              "typeString": "struct DAO._Proposal memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2258,
                            "name": "Proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2130,
                            "src": "22025:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                              "typeString": "struct DAO._Proposal storage ref[] storage ref"
                            }
                          },
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "22025:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$__Proposal_$2127_storage_$returns$_t_uint256_$",
                            "typeString": "function (struct DAO._Proposal storage ref) returns (uint256)"
                          }
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22025:510:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2286,
                      "nodeType": "ExpressionStatement",
                      "src": "22025:510:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2290,
                                "name": "Proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2130,
                                "src": "22641:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                  "typeString": "struct DAO._Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 2291,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22641:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22658:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "22641:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2294,
                                "name": "Proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2130,
                                "src": "22661:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                  "typeString": "struct DAO._Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 2299,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2295,
                                    "name": "Proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2130,
                                    "src": "22671:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                      "typeString": "struct DAO._Proposal storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2296,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "22671:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 2297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22688:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "22671:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22661:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__Proposal_$2127_storage",
                                "typeString": "struct DAO._Proposal storage ref"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTimeOfVoting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2106,
                            "src": "22661:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2287,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "22623:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_DAO_$2656",
                              "typeString": "contract super DAO"
                            }
                          },
                          "id": 2289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addProposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1314,
                          "src": "22623:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22623:84:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2302,
                      "nodeType": "ExpressionStatement",
                      "src": "22623:84:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2304,
                                "name": "Proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2130,
                                "src": "22739:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                  "typeString": "struct DAO._Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 2305,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22739:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22756:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "22739:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2308,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2223,
                            "src": "22759:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2309,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "22771:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2310,
                            "name": "_desc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2227,
                            "src": "22780:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2311,
                            "name": "_fullDescHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2229,
                            "src": "22787:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2303,
                          "name": "ProposalAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "22725:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,address,uint256,string memory,string memory)"
                          }
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22725:76:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2313,
                      "nodeType": "EmitStatement",
                      "src": "22720:81:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2314,
                            "name": "Proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2130,
                            "src": "22821:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                              "typeString": "struct DAO._Proposal storage ref[] storage ref"
                            }
                          },
                          "id": 2315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "22821:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22838:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "22821:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2239,
                      "id": 2318,
                      "nodeType": "Return",
                      "src": "22814:25:0"
                    }
                  ]
                },
                "documentation": "Add Proposal\n\n     * Propose to send `_amount / 1e18` ether to `_recipient` for `_desc`. `_transactionByteCode ? Contains : Does not contain` code.\n\n     * @param _recipient who to send the ether to\n@param _amount amount of ether to send, in wei\n@param _desc Description of job\n@param _fullDescHash Hash of full description of job\n@param _transactionByteCode bytecode of transaction",
                "id": 2320,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2236,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2235,
                      "name": "onlyMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "21804:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "21804:11:0"
                  }
                ],
                "name": "addProposal",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2234,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2223,
                      "name": "_recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21676:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2222,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21676:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2225,
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21696:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2224,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21696:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2227,
                      "name": "_desc",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21710:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2226,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "21710:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2229,
                      "name": "_fullDescHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21724:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2228,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "21724:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2231,
                      "name": "_transactionByteCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21746:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2230,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21746:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2233,
                      "name": "_debatingPeriodDuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21774:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2232,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21774:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "21675:128:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2239,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2238,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "21832:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2237,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21832:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "21831:6:0"
                },
                "scope": 2656,
                "src": "21655:1192:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2365,
                  "nodeType": "Block",
                  "src": "23273:301:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2334,
                                  "name": "Proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2130,
                                  "src": "23292:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                    "typeString": "struct DAO._Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 2336,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2335,
                                  "name": "_proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2322,
                                  "src": "23302:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23292:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$__Proposal_$2127_storage",
                                  "typeString": "struct DAO._Proposal storage ref"
                                }
                              },
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2118,
                              "src": "23292:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2338,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "23328:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "23292:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2333,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "23284:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23284:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2341,
                      "nodeType": "ExpressionStatement",
                      "src": "23284:55:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2343,
                                  "name": "Proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2130,
                                  "src": "23358:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                    "typeString": "struct DAO._Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 2345,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2344,
                                  "name": "_proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2322,
                                  "src": "23368:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23358:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$__Proposal_$2127_storage",
                                  "typeString": "struct DAO._Proposal storage ref"
                                }
                              },
                              "id": 2346,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2120,
                              "src": "23358:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2347,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "23391:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23358:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2342,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "23350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23350:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2350,
                      "nodeType": "ExpressionStatement",
                      "src": "23350:49:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2351,
                              "name": "Proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2130,
                              "src": "23454:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                                "typeString": "struct DAO._Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 2353,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2352,
                              "name": "_proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2322,
                              "src": "23464:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23454:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_storage",
                              "typeString": "struct DAO._Proposal storage ref"
                            }
                          },
                          "id": 2354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transactionHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2122,
                          "src": "23454:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2358,
                                  "name": "_recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2324,
                                  "src": "23523:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2359,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2326,
                                  "src": "23535:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2360,
                                  "name": "_transactionByteCode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2328,
                                  "src": "23544:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2356,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2908,
                                  "src": "23506:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "23506:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23506:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2355,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "23496:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 2362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23496:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "23454:112:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2332,
                      "id": 2364,
                      "nodeType": "Return",
                      "src": "23447:119:0"
                    }
                  ]
                },
                "documentation": "Check if a proposal code matches\n\n     * @param _proposalID number of the proposal to query\n@param _recipient who to send the ether to\n@param _amount amount of ether to send\n@param _transactionByteCode bytecode of transaction",
                "id": 2366,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "checkProposalCode",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2329,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2322,
                      "name": "_proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23166:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2321,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23166:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2324,
                      "name": "_recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23184:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2323,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23184:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2326,
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23204:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2325,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23204:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2328,
                      "name": "_transactionByteCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23218:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2327,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "23218:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "23165:80:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2332,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2331,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23267:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2330,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "23267:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "23266:6:0"
                },
                "scope": 2656,
                "src": "23139:435:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2472,
                  "nodeType": "Block",
                  "src": "24018:797:0",
                  "statements": [
                    {
                      "assignments": [
                        2380
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2380,
                          "name": "p",
                          "nodeType": "VariableDeclaration",
                          "scope": 2473,
                          "src": "24058:19:0",
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                            "typeString": "struct DAO._Proposal"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 2379,
                            "name": "_Proposal",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2127,
                            "src": "24058:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                              "typeString": "struct DAO._Proposal"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2384,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2381,
                          "name": "Proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2130,
                          "src": "24080:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                            "typeString": "struct DAO._Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 2383,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2382,
                          "name": "_proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2368,
                          "src": "24090:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24080:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__Proposal_$2127_storage",
                          "typeString": "struct DAO._Proposal storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "24058:44:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2386,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2923,
                              "src": "24122:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2387,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2380,
                                "src": "24129:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                  "typeString": "struct DAO._Proposal storage pointer"
                                }
                              },
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimeOfVoting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2106,
                              "src": "24129:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "24122:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2385,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "24114:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24114:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2391,
                      "nodeType": "ExpressionStatement",
                      "src": "24114:33:0"
                    },
                    {
                      "assignments": [
                        2393
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2393,
                          "name": "votes",
                          "nodeType": "VariableDeclaration",
                          "scope": 2473,
                          "src": "24208:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2392,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "24208:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2406,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2395,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "24229:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2398,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2396,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "24238:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "24238:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24229:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2399,
                                "name": "voted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 618,
                                "src": "24251:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2401,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2400,
                                "name": "_proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2368,
                                "src": "24257:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24251:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2404,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2402,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "24270:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "24270:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24251:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2394,
                          "name": "safeSub",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "24221:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24221:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "24208:74:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2408,
                              "name": "votes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "24301:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24309:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "24301:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2407,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "24293:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24293:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2412,
                      "nodeType": "ExpressionStatement",
                      "src": "24293:18:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2413,
                              "name": "voted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 618,
                              "src": "24324:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 2417,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2414,
                              "name": "_proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "24330:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24324:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2418,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2415,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "24343:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "24343:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "24324:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2420,
                                  "name": "voted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 618,
                                  "src": "24365:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                                  }
                                },
                                "id": 2422,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2421,
                                  "name": "_proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2368,
                                  "src": "24371:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "24365:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2425,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2423,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2921,
                                  "src": "24384:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "24384:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24365:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2426,
                              "name": "votes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "24397:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2419,
                            "name": "safeAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "24357:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24357:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24324:79:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2429,
                      "nodeType": "ExpressionStatement",
                      "src": "24324:79:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2430,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2380,
                            "src": "24457:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                              "typeString": "struct DAO._Proposal storage pointer"
                            }
                          },
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numberOfVotes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2112,
                          "src": "24457:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2433,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2380,
                              "src": "24475:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                "typeString": "struct DAO._Proposal storage pointer"
                              }
                            },
                            "id": 2434,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2112,
                            "src": "24475:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2435,
                            "name": "votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2393,
                            "src": "24493:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24475:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24457:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2438,
                      "nodeType": "ExpressionStatement",
                      "src": "24457:41:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 2439,
                        "name": "_supportsProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "24523:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2459,
                        "nodeType": "Block",
                        "src": "24614:66:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2450,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2380,
                                  "src": "24629:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                    "typeString": "struct DAO._Proposal storage pointer"
                                  }
                                },
                                "id": 2452,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "votesAgainst",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2116,
                                "src": "24629:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2453,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2380,
                                    "src": "24646:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                      "typeString": "struct DAO._Proposal storage pointer"
                                    }
                                  },
                                  "id": 2454,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votesAgainst",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2116,
                                  "src": "24646:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2455,
                                  "name": "votes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2393,
                                  "src": "24663:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24646:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24629:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2458,
                            "nodeType": "ExpressionStatement",
                            "src": "24629:39:0"
                          }
                        ]
                      },
                      "id": 2460,
                      "nodeType": "IfStatement",
                      "src": "24519:161:0",
                      "trueBody": {
                        "id": 2449,
                        "nodeType": "Block",
                        "src": "24542:66:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2440,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2380,
                                  "src": "24557:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                    "typeString": "struct DAO._Proposal storage pointer"
                                  }
                                },
                                "id": 2442,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "votesSupport",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2114,
                                "src": "24557:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2443,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2380,
                                    "src": "24574:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                      "typeString": "struct DAO._Proposal storage pointer"
                                    }
                                  },
                                  "id": 2444,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votesSupport",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2114,
                                  "src": "24574:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2445,
                                  "name": "votes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2393,
                                  "src": "24591:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24574:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24557:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2448,
                            "nodeType": "ExpressionStatement",
                            "src": "24557:39:0"
                          }
                        ]
                      }
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2462,
                            "name": "_proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2368,
                            "src": "24711:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2463,
                            "name": "_supportsProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2370,
                            "src": "24724:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2464,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "24743:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "24743:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2466,
                            "name": "_justificationText",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "24755:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2461,
                          "name": "Voted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2152,
                          "src": "24705:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_address_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,bool,address,string memory)"
                          }
                        },
                        "id": 2467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24705:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2468,
                      "nodeType": "EmitStatement",
                      "src": "24700:74:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2469,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2380,
                          "src": "24792:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                            "typeString": "struct DAO._Proposal storage pointer"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfVotes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2112,
                        "src": "24792:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2378,
                      "id": 2471,
                      "nodeType": "Return",
                      "src": "24785:22:0"
                    }
                  ]
                },
                "documentation": "Log a vote for a proposal\n\n     * Vote `supportsProposal? in support of : against` proposal #`proposalID`\n\n     * @param _proposalID number of proposal\n@param _supportsProposal either in favor or against it\n@param _justificationText optional justification text",
                "id": 2473,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2375,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2374,
                      "name": "onlyMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "23984:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "23984:11:0"
                  }
                ],
                "name": "vote",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2373,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2368,
                      "name": "_proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "23915:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2367,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23915:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2370,
                      "name": "_supportsProposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "23933:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2369,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "23933:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2372,
                      "name": "_justificationText",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "23957:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2371,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "23957:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "23914:69:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2378,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2377,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "24012:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2376,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24012:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "24011:6:0"
                },
                "scope": 2656,
                "src": "23901:914:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2571,
                  "nodeType": "Block",
                  "src": "25204:1318:0",
                  "statements": [
                    {
                      "assignments": [
                        2481
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2481,
                          "name": "p",
                          "nodeType": "VariableDeclaration",
                          "scope": 2572,
                          "src": "25244:19:0",
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                            "typeString": "struct DAO._Proposal"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 2480,
                            "name": "_Proposal",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2127,
                            "src": "25244:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                              "typeString": "struct DAO._Proposal"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2485,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2482,
                          "name": "Proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2130,
                          "src": "25266:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$__Proposal_$2127_storage_$dyn_storage",
                            "typeString": "struct DAO._Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 2484,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2483,
                          "name": "_proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2475,
                          "src": "25276:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25266:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__Proposal_$2127_storage",
                          "typeString": "struct DAO._Proposal storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "25244:44:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2487,
                                    "name": "now",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2923,
                                    "src": "25309:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2488,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2481,
                                      "src": "25315:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                        "typeString": "struct DAO._Proposal storage pointer"
                                      }
                                    },
                                    "id": 2489,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "endTimeOfVoting",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2106,
                                    "src": "25315:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "25309:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "25456:11:0",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2491,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2481,
                                      "src": "25457:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                        "typeString": "struct DAO._Proposal storage pointer"
                                      }
                                    },
                                    "id": 2492,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "executed",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2108,
                                    "src": "25457:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "25309:158:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 2507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2495,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2481,
                                    "src": "25607:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                      "typeString": "struct DAO._Proposal storage pointer"
                                    }
                                  },
                                  "id": 2496,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transactionHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2122,
                                  "src": "25607:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2500,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2481,
                                            "src": "25655:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                              "typeString": "struct DAO._Proposal storage pointer"
                                            }
                                          },
                                          "id": 2501,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "recipient",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2118,
                                          "src": "25655:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2502,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2481,
                                            "src": "25668:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                              "typeString": "struct DAO._Proposal storage pointer"
                                            }
                                          },
                                          "id": 2503,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2120,
                                          "src": "25668:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 2504,
                                          "name": "_transactionByteCode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2477,
                                          "src": "25678:20:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2498,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2908,
                                          "src": "25638:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 2499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "25638:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 2505,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "25638:61:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 2497,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2915,
                                    "src": "25628:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 2506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25628:72:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "25607:93:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "25309:391:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2509,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2481,
                                  "src": "25764:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                    "typeString": "struct DAO._Proposal storage pointer"
                                  }
                                },
                                "id": 2510,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "numberOfVotes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2112,
                                "src": "25764:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2511,
                                "name": "minimumQuorum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2100,
                                "src": "25783:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "25764:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "25309:487:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2486,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2924,
                            2925
                          ],
                          "referencedDeclaration": 2924,
                          "src": "25301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25301:496:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2515,
                      "nodeType": "ExpressionStatement",
                      "src": "25301:496:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2516,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2481,
                            "src": "25945:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                              "typeString": "struct DAO._Proposal storage pointer"
                            }
                          },
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votesSupport",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2114,
                          "src": "25945:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2518,
                          "name": "requisiteMajority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2104,
                          "src": "25962:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25945:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2545,
                        "nodeType": "Block",
                        "src": "26172:83:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2539,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2481,
                                  "src": "26219:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                    "typeString": "struct DAO._Proposal storage pointer"
                                  }
                                },
                                "id": 2541,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "proposalPassed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2110,
                                "src": "26219:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 2542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26238:5:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "26219:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2544,
                            "nodeType": "ExpressionStatement",
                            "src": "26219:24:0"
                          }
                        ]
                      },
                      "id": 2546,
                      "nodeType": "IfStatement",
                      "src": "25941:314:0",
                      "trueBody": {
                        "id": 2538,
                        "nodeType": "Block",
                        "src": "25981:185:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2528,
                                      "name": "_transactionByteCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2477,
                                      "src": "26094:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2525,
                                          "name": "p",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2481,
                                          "src": "26084:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                            "typeString": "struct DAO._Proposal storage pointer"
                                          }
                                        },
                                        "id": 2526,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2120,
                                        "src": "26084:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2521,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2481,
                                            "src": "26061:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                              "typeString": "struct DAO._Proposal storage pointer"
                                            }
                                          },
                                          "id": 2522,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "recipient",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2118,
                                          "src": "26061:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 2523,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "call",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "26061:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
                                          "typeString": "function () payable returns (bool)"
                                        }
                                      },
                                      "id": 2524,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "26061:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
                                        "typeString": "function (uint256) returns (function () payable returns (bool))"
                                      }
                                    },
                                    "id": 2527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "26061:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
                                      "typeString": "function () payable returns (bool)"
                                    }
                                  },
                                  "id": 2529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26061:54:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 2520,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2924,
                                  2925
                                ],
                                "referencedDeclaration": 2924,
                                "src": "26053:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                  "typeString": "function (bool) pure"
                                }
                              },
                              "id": 2530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26053:63:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2531,
                            "nodeType": "ExpressionStatement",
                            "src": "26053:63:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2532,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2481,
                                  "src": "26131:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                    "typeString": "struct DAO._Proposal storage pointer"
                                  }
                                },
                                "id": 2534,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "proposalPassed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2110,
                                "src": "26131:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 2535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26150:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "26131:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2537,
                            "nodeType": "ExpressionStatement",
                            "src": "26131:23:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2547,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2481,
                            "src": "26265:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                              "typeString": "struct DAO._Proposal storage pointer"
                            }
                          },
                          "id": 2549,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2108,
                          "src": "26265:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26278:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "26265:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2552,
                      "nodeType": "ExpressionStatement",
                      "src": "26265:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2556,
                            "name": "_proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2475,
                            "src": "26358:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2553,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "26340:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_DAO_$2656",
                              "typeString": "contract super DAO"
                            }
                          },
                          "id": 2555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "delProposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1371,
                          "src": "26340:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 2557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26340:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2558,
                      "nodeType": "ExpressionStatement",
                      "src": "26340:30:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2560,
                            "name": "_proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2475,
                            "src": "26435:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2561,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2481,
                              "src": "26448:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                "typeString": "struct DAO._Proposal storage pointer"
                              }
                            },
                            "id": 2562,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votesSupport",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2114,
                            "src": "26448:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2563,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2481,
                              "src": "26464:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                "typeString": "struct DAO._Proposal storage pointer"
                              }
                            },
                            "id": 2564,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votesAgainst",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2116,
                            "src": "26464:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2565,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2481,
                              "src": "26480:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                "typeString": "struct DAO._Proposal storage pointer"
                              }
                            },
                            "id": 2566,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2112,
                            "src": "26480:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2567,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2481,
                              "src": "26497:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__Proposal_$2127_storage_ptr",
                                "typeString": "struct DAO._Proposal storage pointer"
                              }
                            },
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposalPassed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "26497:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2559,
                          "name": "ProposalTallied",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2164,
                          "src": "26419:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                            "typeString": "function (uint256,uint256,uint256,uint256,bool)"
                          }
                        },
                        "id": 2569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26419:95:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2570,
                      "nodeType": "EmitStatement",
                      "src": "26414:100:0"
                    }
                  ]
                },
                "documentation": "Finish vote\n\n     * Count the votes proposal #`_proposalID` and execute it if approved\n\n     * @param _proposalID proposal number\n@param _transactionByteCode optional: if the transaction contained a bytecode, you need to send it",
                "id": 2572,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "executeProposal",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2478,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2475,
                      "name": "_proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2572,
                      "src": "25151:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2474,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25151:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2477,
                      "name": "_transactionByteCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2572,
                      "src": "25169:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2476,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25169:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "25150:46:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2479,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "25204:0:0"
                },
                "scope": 2656,
                "src": "25126:1396:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2585,
                  "nodeType": "Block",
                  "src": "26671:97:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2582,
                            "name": "_proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2574,
                            "src": "26745:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2579,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "26727:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_DAO_$2656",
                              "typeString": "contract super DAO"
                            }
                          },
                          "id": 2581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "delProposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1371,
                          "src": "26727:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26727:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2584,
                      "nodeType": "ExpressionStatement",
                      "src": "26727:30:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2586,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2577,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2576,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "26661:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "26661:9:0"
                  }
                ],
                "name": "delActiveProposal",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2575,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2574,
                      "name": "_proposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2586,
                      "src": "26636:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2573,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26636:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "26635:18:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2578,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "26671:0:0"
                },
                "scope": 2656,
                "src": "26609:159:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2602,
                  "nodeType": "Block",
                  "src": "27017:66:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2599,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2590,
                            "src": "27065:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2596,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2588,
                                "src": "27036:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2595,
                              "name": "CommonI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2093,
                              "src": "27028:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommonI_$2093_$",
                                "typeString": "type(contract CommonI)"
                              }
                            },
                            "id": 2597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27028:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommonI_$2093",
                              "typeString": "contract CommonI"
                            }
                          },
                          "id": 2598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferOwnership",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2082,
                          "src": "27028:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27028:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2601,
                      "nodeType": "ExpressionStatement",
                      "src": "27028:47:0"
                    }
                  ]
                },
                "documentation": "@dev Allows the DAO to transfer control of the _contract to a _newOwner.\n@param _newOwner The address to transfer ownership to.",
                "id": 2603,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2593,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2592,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "27007:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "27007:9:0"
                  }
                ],
                "name": "transferOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2591,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2588,
                      "name": "_contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2603,
                      "src": "26962:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2587,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26962:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2590,
                      "name": "_newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2603,
                      "src": "26981:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2589,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26981:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "26961:38:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2594,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27017:0:0"
                },
                "scope": 2656,
                "src": "26935:148:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2616,
                  "nodeType": "Block",
                  "src": "27233:63:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2611,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2605,
                                "src": "27252:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2610,
                              "name": "CommonI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2093,
                              "src": "27244:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommonI_$2093_$",
                                "typeString": "type(contract CommonI)"
                              }
                            },
                            "id": 2612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27244:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommonI_$2093",
                              "typeString": "contract CommonI"
                            }
                          },
                          "id": 2613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "acceptOwnership",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2085,
                          "src": "27244:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        "id": 2614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27244:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2615,
                      "nodeType": "ExpressionStatement",
                      "src": "27244:36:0"
                    }
                  ]
                },
                "documentation": "@dev Accept transferOwnership on a this (DAO) contract",
                "id": 2617,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2608,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2607,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "27223:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "27223:9:0"
                  }
                ],
                "name": "acceptOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2606,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2605,
                      "name": "_contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2617,
                      "src": "27197:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2604,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27197:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "27196:19:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2609,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27233:0:0"
                },
                "scope": 2656,
                "src": "27172:124:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2636,
                  "nodeType": "Block",
                  "src": "27390:73:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2632,
                            "name": "_agent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2621,
                            "src": "27432:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2633,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2623,
                            "src": "27440:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2629,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2619,
                                "src": "27409:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2628,
                              "name": "CommonI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2093,
                              "src": "27401:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommonI_$2093_$",
                                "typeString": "type(contract CommonI)"
                              }
                            },
                            "id": 2630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27401:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommonI_$2093",
                              "typeString": "contract CommonI"
                            }
                          },
                          "id": 2631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateAgent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2092,
                          "src": "27401:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27401:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2635,
                      "nodeType": "ExpressionStatement",
                      "src": "27401:46:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2637,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2626,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2625,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "27380:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "27380:9:0"
                  }
                ],
                "name": "updateAgent",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2624,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2619,
                      "name": "_contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2637,
                      "src": "27325:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2618,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27325:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2621,
                      "name": "_agent",
                      "nodeType": "VariableDeclaration",
                      "scope": 2637,
                      "src": "27344:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2620,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27344:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2623,
                      "name": "_state",
                      "nodeType": "VariableDeclaration",
                      "scope": 2637,
                      "src": "27360:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2622,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "27360:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "27324:48:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2627,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27390:0:0"
                },
                "scope": 2656,
                "src": "27304:159:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2654,
                  "nodeType": "Block",
                  "src": "27595:77:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2645,
                              "name": "_minBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2639,
                              "src": "27613:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27627:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "27613:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2644,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "27606:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27606:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2649,
                      "nodeType": "ExpressionStatement",
                      "src": "27606:23:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2650,
                          "name": "minBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "27640:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2651,
                          "name": "_minBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2639,
                          "src": "27653:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "27640:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2653,
                      "nodeType": "ExpressionStatement",
                      "src": "27640:24:0"
                    }
                  ]
                },
                "documentation": "Set minimum balance for adding proposal",
                "id": 2655,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2642,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2641,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "27585:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "27585:9:0"
                  }
                ],
                "name": "setMinBalance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2640,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2639,
                      "name": "_minBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2655,
                      "src": "27560:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2638,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "27560:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "27559:18:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2643,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27595:0:0"
                },
                "scope": 2656,
                "src": "27537:135:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 2907,
            "src": "18163:9512:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2657,
                  "name": "Ownable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 558,
                  "src": "27765:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Ownable_$558",
                    "typeString": "contract Ownable"
                  }
                },
                "id": 2658,
                "nodeType": "InheritanceSpecifier",
                "src": "27765:7:0"
              }
            ],
            "contractDependencies": [
              558
            ],
            "contractKind": "contract",
            "documentation": "@title Agent contract - base contract with an agent",
            "fullyImplemented": true,
            "id": 2711,
            "linearizedBaseContracts": [
              2711,
              558
            ],
            "name": "Agent",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 2660,
                "name": "defAgent",
                "nodeType": "VariableDeclaration",
                "scope": 2711,
                "src": "27780:23:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2659,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "27780:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2664,
                "name": "Agents",
                "nodeType": "VariableDeclaration",
                "scope": 2711,
                "src": "27810:38:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 2663,
                  "keyType": {
                    "id": 2661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27818:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "27810:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 2662,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27829:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2674,
                  "nodeType": "Block",
                  "src": "27878:42:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2667,
                            "name": "Agents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2664,
                            "src": "27889:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2670,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2668,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "27896:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "27896:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "27889:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27910:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "27889:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2673,
                      "nodeType": "ExpressionStatement",
                      "src": "27889:25:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2675,
                "implemented": true,
                "isConstructor": true,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2665,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27868:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2666,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27878:0:0"
                },
                "scope": 2711,
                "src": "27857:63:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2685,
                  "nodeType": "Block",
                  "src": "27949:47:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2678,
                              "name": "Agents",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2664,
                              "src": "27963:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2681,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2679,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "27970:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "27970:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27963:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2677,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "27956:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27956:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2683,
                      "nodeType": "ExpressionStatement",
                      "src": "27956:26:0"
                    },
                    {
                      "id": 2684,
                      "nodeType": "PlaceholderStatement",
                      "src": "27989:1:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2686,
                "name": "onlyAgent",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 2676,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "27946:2:0"
                },
                "src": "27928:68:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2709,
                  "nodeType": "Block",
                  "src": "28072:72:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2696,
                              "name": "_agent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2688,
                              "src": "28086:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2698,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "28104:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "28096:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28096:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "28086:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2695,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "28079:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28079:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2702,
                      "nodeType": "ExpressionStatement",
                      "src": "28079:28:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2703,
                            "name": "Agents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2664,
                            "src": "28114:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2705,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2704,
                            "name": "_agent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2688,
                            "src": "28121:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "28114:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2706,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2690,
                          "src": "28131:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "28114:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2708,
                      "nodeType": "ExpressionStatement",
                      "src": "28114:24:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2710,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2693,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2692,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "28062:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "28062:9:0"
                  }
                ],
                "name": "updateAgent",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2691,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2688,
                      "name": "_agent",
                      "nodeType": "VariableDeclaration",
                      "scope": 2710,
                      "src": "28025:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2687,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28025:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2690,
                      "name": "_status",
                      "nodeType": "VariableDeclaration",
                      "scope": 2710,
                      "src": "28041:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2689,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "28041:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "28024:30:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2694,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "28072:0:0"
                },
                "scope": 2711,
                "src": "28004:140:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 2907,
            "src": "27747:402:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2712,
                  "name": "SDADI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 569,
                  "src": "28263:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SDADI_$569",
                    "typeString": "contract SDADI"
                  }
                },
                "id": 2713,
                "nodeType": "InheritanceSpecifier",
                "src": "28263:5:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2714,
                  "name": "DAO",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2656,
                  "src": "28270:3:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DAO_$2656",
                    "typeString": "contract DAO"
                  }
                },
                "id": 2715,
                "nodeType": "InheritanceSpecifier",
                "src": "28270:3:0"
              }
            ],
            "contractDependencies": [
              488,
              558,
              569,
              182,
              1388,
              2077,
              2656
            ],
            "contractKind": "contract",
            "documentation": "@title SDAD - ERC20 Token based on ERC20Base, DAO, Dividends smart contracts",
            "fullyImplemented": true,
            "id": 2906,
            "linearizedBaseContracts": [
              2906,
              2656,
              2077,
              558,
              1388,
              182,
              488,
              569
            ],
            "name": "SDAD",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 2722,
                "name": "initialSupply",
                "nodeType": "VariableDeclaration",
                "scope": 2906,
                "src": "28282:38:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2716,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "28282:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_10000000_by_1",
                    "typeString": "int_const 10000000"
                  },
                  "id": 2721,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "28310:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 2718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28315:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 2719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28319:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "src": "28315:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    }
                  },
                  "src": "28310:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10000000_by_1",
                    "typeString": "int_const 10000000"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2725,
                "name": "decimals",
                "nodeType": "VariableDeclaration",
                "scope": 2906,
                "src": "28346:24:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2723,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "28346:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "38",
                  "id": 2724,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "28369:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_8_by_1",
                    "typeString": "int_const 8"
                  },
                  "value": "8"
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2727,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 2906,
                "src": "28377:18:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2726,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "28377:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 2729,
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "scope": 2906,
                "src": "28400:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2728,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "28400:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": "Name and symbol were updated. ",
                "id": 2735,
                "name": "UpdatedTokenInformation",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2734,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2731,
                      "indexed": false,
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "scope": 2735,
                      "src": "28497:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2730,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "28497:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2733,
                      "indexed": false,
                      "name": "_symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 2735,
                      "src": "28511:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2732,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "28511:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "28496:30:0"
                },
                "src": "28467:60:0"
              },
              {
                "anonymous": false,
                "documentation": "Period were updated. ",
                "id": 2739,
                "name": "UpdatedPeriod",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2738,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2737,
                      "indexed": false,
                      "name": "_period",
                      "nodeType": "VariableDeclaration",
                      "scope": 2739,
                      "src": "28584:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2736,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28584:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "28583:14:0"
                },
                "src": "28564:34:0"
              },
              {
                "body": {
                  "id": 2845,
                  "nodeType": "Block",
                  "src": "28699:729:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2752,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2727,
                          "src": "28706:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2753,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2741,
                          "src": "28713:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "28706:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 2755,
                      "nodeType": "ExpressionStatement",
                      "src": "28706:12:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2756,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2729,
                          "src": "28725:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2757,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2743,
                          "src": "28734:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "28725:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 2759,
                      "nodeType": "ExpressionStatement",
                      "src": "28725:16:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2760,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "28748:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2761,
                          "name": "_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2745,
                          "src": "28756:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28748:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2763,
                      "nodeType": "ExpressionStatement",
                      "src": "28748:14:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2764,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "28769:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2765,
                          "name": "_period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2747,
                          "src": "28778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28769:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2767,
                      "nodeType": "ExpressionStatement",
                      "src": "28769:16:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2768,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "28794:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2769,
                            "name": "initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2722,
                            "src": "28809:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 2770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28823:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2771,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2725,
                              "src": "28827:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "28823:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28809:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28794:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2775,
                      "nodeType": "ExpressionStatement",
                      "src": "28794:41:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2776,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "28876:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2778,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2777,
                            "name": "_dexowner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "28885:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "28876:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2779,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "28898:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28876:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2781,
                      "nodeType": "ExpressionStatement",
                      "src": "28876:34:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 2783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28935:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 2784,
                            "name": "_dexowner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "28940:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2785,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "28951:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2787,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2786,
                              "name": "_dexowner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2749,
                              "src": "28960:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28951:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2782,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "28926:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28926:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2789,
                      "nodeType": "EmitStatement",
                      "src": "28921:50:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2790,
                            "name": "ownersIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 604,
                            "src": "28980:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2792,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2791,
                            "name": "_dexowner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "28992:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "28980:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29005:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "28980:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2795,
                      "nodeType": "ExpressionStatement",
                      "src": "28980:29:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2799,
                            "name": "_dexowner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "29028:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2796,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "29016:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "29016:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 2800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29016:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2801,
                      "nodeType": "ExpressionStatement",
                      "src": "29016:22:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2802,
                              "name": "ChangeOverPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "29047:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_int256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => int256))"
                              }
                            },
                            "id": 2805,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2803,
                              "name": "_dexowner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2749,
                              "src": "29064:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29047:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                              "typeString": "mapping(uint256 => int256)"
                            }
                          },
                          "id": 2806,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29075:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "29047:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2808,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "29087:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2810,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2809,
                                "name": "_dexowner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2749,
                                "src": "29096:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "29087:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "29080:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": "int256"
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29080:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "29047:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 2813,
                      "nodeType": "ExpressionStatement",
                      "src": "29047:60:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2816,
                                "name": "totalSupply_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "29270:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "35303030",
                                "id": 2817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29284:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                },
                                "value": "5000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                }
                              ],
                              "id": 2815,
                              "name": "safePerc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "29261:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29261:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31343430",
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29291:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1440_by_1",
                              "typeString": "int_const 1440"
                            },
                            "value": "1440"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2821,
                                "name": "totalSupply_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "29306:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32353030",
                                "id": 2822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29320:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2500_by_1",
                                  "typeString": "int_const 2500"
                                },
                                "value": "2500"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_2500_by_1",
                                  "typeString": "int_const 2500"
                                }
                              ],
                              "id": 2820,
                              "name": "safePerc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "29297:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29297:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1440_by_1",
                              "typeString": "int_const 1440"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2814,
                          "name": "changeVotingRules",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2221,
                          "src": "29243:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256,uint256)"
                          }
                        },
                        "id": 2824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29243:83:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2825,
                      "nodeType": "ExpressionStatement",
                      "src": "29243:83:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29371:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "29363:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29363:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2826,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "29351:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "29351:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29351:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2833,
                      "nodeType": "ExpressionStatement",
                      "src": "29351:23:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2834,
                            "name": "tokensIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "29381:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2838,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29401:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "29393:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29393:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "29381:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2839,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "29407:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "29407:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29421:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "29407:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29381:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2844,
                      "nodeType": "ExpressionStatement",
                      "src": "29381:41:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 2846,
                "implemented": true,
                "isConstructor": true,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2750,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2741,
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "28616:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2740,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "28616:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2743,
                      "name": "_symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "28630:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2742,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "28630:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2745,
                      "name": "_start",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "28646:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2744,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28646:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2747,
                      "name": "_period",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "28659:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2746,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28659:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2749,
                      "name": "_dexowner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "28673:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2748,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28673:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "28615:76:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2751,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "28699:0:0"
                },
                "scope": 2906,
                "src": "28604:824:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2868,
                  "nodeType": "Block",
                  "src": "29898:99:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2855,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2727,
                          "src": "29905:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2856,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "29912:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "29905:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 2858,
                      "nodeType": "ExpressionStatement",
                      "src": "29905:12:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2859,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2729,
                          "src": "29924:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2860,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2850,
                          "src": "29933:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "29924:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 2862,
                      "nodeType": "ExpressionStatement",
                      "src": "29924:16:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2864,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2848,
                            "src": "29976:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2865,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2850,
                            "src": "29983:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2863,
                          "name": "UpdatedTokenInformation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2735,
                          "src": "29952:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory,string memory)"
                          }
                        },
                        "id": 2866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29952:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2867,
                      "nodeType": "EmitStatement",
                      "src": "29947:44:0"
                    }
                  ]
                },
                "documentation": "Owner can update token information here.\n\n  * It is often useful to conceal the actual token association, until\nthe token operations, like central issuance or reissuance have been completed.\n\n  * This function allows the token owner to rename the token after the operations\nhave been completed and then point the audience to use the token contract.",
                "id": 2869,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2853,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2852,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "29888:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "29888:9:0"
                  }
                ],
                "name": "setTokenInformation",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2851,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2848,
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "scope": 2869,
                      "src": "29851:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2847,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "29851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2850,
                      "name": "_symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 2869,
                      "src": "29865:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2849,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "29865:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "29850:30:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2854,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "29898:0:0"
                },
                "scope": 2906,
                "src": "29822:175:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2884,
                  "nodeType": "Block",
                  "src": "30100:67:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2876,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "30107:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 2877,
                          "name": "_period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2871,
                          "src": "30116:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30107:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2879,
                      "nodeType": "ExpressionStatement",
                      "src": "30107:16:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2881,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2871,
                            "src": "30149:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2880,
                          "name": "UpdatedPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2739,
                          "src": "30135:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30135:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2883,
                      "nodeType": "EmitStatement",
                      "src": "30130:27:0"
                    }
                  ]
                },
                "documentation": "Owner can change period\n\n  ",
                "id": 2885,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2874,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2873,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "30090:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "30090:9:0"
                  }
                ],
                "name": "setPeriod",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2872,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2871,
                      "name": "_period",
                      "nodeType": "VariableDeclaration",
                      "scope": 2885,
                      "src": "30069:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2870,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "30069:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "30068:14:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2875,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "30100:0:0"
                },
                "scope": 2906,
                "src": "30050:117:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2904,
                  "nodeType": "Block",
                  "src": "30257:93:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 2890,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "30264:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2892,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2954,
                              "src": "30280:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SDAD_$2906",
                                "typeString": "contract SDAD"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SDAD_$2906",
                                "typeString": "contract SDAD"
                              }
                            ],
                            "id": 2891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "30272:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30272:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "30264:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2895,
                      "nodeType": "ExpressionStatement",
                      "src": "30264:21:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2897,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "30318:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "30318:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2900,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "30338:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SDAD_$2906",
                                  "typeString": "contract SDAD"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SDAD_$2906",
                                  "typeString": "contract SDAD"
                                }
                              ],
                              "id": 2899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "30330:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30330:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2896,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "30297:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 2902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30297:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2903,
                      "nodeType": "EmitStatement",
                      "src": "30292:52:0"
                    }
                  ]
                },
                "documentation": "set owner to self\n\n  ",
                "id": 2905,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 2888,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 2887,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "30247:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "30247:9:0"
                  }
                ],
                "name": "setOwnerToSelf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2886,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "30237:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 2889,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "30257:0:0"
                },
                "scope": 2906,
                "src": "30214:136:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 2907,
            "src": "28246:2107:0"
          }
        ],
        "src": "71:30282:0"
      },
      "id": 0
    }
  }
}